/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaIpAddressCondition struct for KalturaIpAddressCondition
type KalturaIpAddressCondition struct {
	KalturaMatchCondition
}

// NewKalturaIpAddressCondition instantiates a new KalturaIpAddressCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaIpAddressCondition() *KalturaIpAddressCondition {
	this := KalturaIpAddressCondition{}
	return &this
}

// NewKalturaIpAddressConditionWithDefaults instantiates a new KalturaIpAddressCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaIpAddressConditionWithDefaults() *KalturaIpAddressCondition {
	this := KalturaIpAddressCondition{}
	return &this
}

func (o KalturaIpAddressCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaMatchCondition, errKalturaMatchCondition := json.Marshal(o.KalturaMatchCondition)
	if errKalturaMatchCondition != nil {
		return []byte{}, errKalturaMatchCondition
	}
	errKalturaMatchCondition = json.Unmarshal([]byte(serializedKalturaMatchCondition), &toSerialize)
	if errKalturaMatchCondition != nil {
		return []byte{}, errKalturaMatchCondition
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaIpAddressCondition struct {
	value *KalturaIpAddressCondition
	isSet bool
}

func (v NullableKalturaIpAddressCondition) Get() *KalturaIpAddressCondition {
	return v.value
}

func (v *NullableKalturaIpAddressCondition) Set(val *KalturaIpAddressCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaIpAddressCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaIpAddressCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaIpAddressCondition(val *KalturaIpAddressCondition) *NullableKalturaIpAddressCondition {
	return &NullableKalturaIpAddressCondition{value: val, isSet: true}
}

func (v NullableKalturaIpAddressCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaIpAddressCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


