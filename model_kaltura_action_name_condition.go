/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaActionNameCondition struct for KalturaActionNameCondition
type KalturaActionNameCondition struct {
	KalturaRegexCondition
}

// NewKalturaActionNameCondition instantiates a new KalturaActionNameCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaActionNameCondition() *KalturaActionNameCondition {
	this := KalturaActionNameCondition{}
	return &this
}

// NewKalturaActionNameConditionWithDefaults instantiates a new KalturaActionNameCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaActionNameConditionWithDefaults() *KalturaActionNameCondition {
	this := KalturaActionNameCondition{}
	return &this
}

func (o KalturaActionNameCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaRegexCondition, errKalturaRegexCondition := json.Marshal(o.KalturaRegexCondition)
	if errKalturaRegexCondition != nil {
		return []byte{}, errKalturaRegexCondition
	}
	errKalturaRegexCondition = json.Unmarshal([]byte(serializedKalturaRegexCondition), &toSerialize)
	if errKalturaRegexCondition != nil {
		return []byte{}, errKalturaRegexCondition
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaActionNameCondition struct {
	value *KalturaActionNameCondition
	isSet bool
}

func (v NullableKalturaActionNameCondition) Get() *KalturaActionNameCondition {
	return v.value
}

func (v *NullableKalturaActionNameCondition) Set(val *KalturaActionNameCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaActionNameCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaActionNameCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaActionNameCondition(val *KalturaActionNameCondition) *NullableKalturaActionNameCondition {
	return &NullableKalturaActionNameCondition{value: val, isSet: true}
}

func (v NullableKalturaActionNameCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaActionNameCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


