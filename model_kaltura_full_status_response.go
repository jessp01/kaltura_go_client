/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaFullStatusResponse struct for KalturaFullStatusResponse
type KalturaFullStatusResponse struct {
	QueuesStatus []KalturaBatchQueuesStatus `json:"queuesStatus,omitempty"`
	Schedulers []KalturaScheduler `json:"schedulers,omitempty"`
}

// NewKalturaFullStatusResponse instantiates a new KalturaFullStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaFullStatusResponse() *KalturaFullStatusResponse {
	this := KalturaFullStatusResponse{}
	return &this
}

// NewKalturaFullStatusResponseWithDefaults instantiates a new KalturaFullStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaFullStatusResponseWithDefaults() *KalturaFullStatusResponse {
	this := KalturaFullStatusResponse{}
	return &this
}

// GetQueuesStatus returns the QueuesStatus field value if set, zero value otherwise.
func (o *KalturaFullStatusResponse) GetQueuesStatus() []KalturaBatchQueuesStatus {
	if o == nil || o.QueuesStatus == nil {
		var ret []KalturaBatchQueuesStatus
		return ret
	}
	return o.QueuesStatus
}

// GetQueuesStatusOk returns a tuple with the QueuesStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFullStatusResponse) GetQueuesStatusOk() ([]KalturaBatchQueuesStatus, bool) {
	if o == nil || o.QueuesStatus == nil {
		return nil, false
	}
	return o.QueuesStatus, true
}

// HasQueuesStatus returns a boolean if a field has been set.
func (o *KalturaFullStatusResponse) HasQueuesStatus() bool {
	if o != nil && o.QueuesStatus != nil {
		return true
	}

	return false
}

// SetQueuesStatus gets a reference to the given []KalturaBatchQueuesStatus and assigns it to the QueuesStatus field.
func (o *KalturaFullStatusResponse) SetQueuesStatus(v []KalturaBatchQueuesStatus) {
	o.QueuesStatus = v
}

// GetSchedulers returns the Schedulers field value if set, zero value otherwise.
func (o *KalturaFullStatusResponse) GetSchedulers() []KalturaScheduler {
	if o == nil || o.Schedulers == nil {
		var ret []KalturaScheduler
		return ret
	}
	return o.Schedulers
}

// GetSchedulersOk returns a tuple with the Schedulers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFullStatusResponse) GetSchedulersOk() ([]KalturaScheduler, bool) {
	if o == nil || o.Schedulers == nil {
		return nil, false
	}
	return o.Schedulers, true
}

// HasSchedulers returns a boolean if a field has been set.
func (o *KalturaFullStatusResponse) HasSchedulers() bool {
	if o != nil && o.Schedulers != nil {
		return true
	}

	return false
}

// SetSchedulers gets a reference to the given []KalturaScheduler and assigns it to the Schedulers field.
func (o *KalturaFullStatusResponse) SetSchedulers(v []KalturaScheduler) {
	o.Schedulers = v
}

func (o KalturaFullStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.QueuesStatus != nil {
		toSerialize["queuesStatus"] = o.QueuesStatus
	}
	if o.Schedulers != nil {
		toSerialize["schedulers"] = o.Schedulers
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaFullStatusResponse struct {
	value *KalturaFullStatusResponse
	isSet bool
}

func (v NullableKalturaFullStatusResponse) Get() *KalturaFullStatusResponse {
	return v.value
}

func (v *NullableKalturaFullStatusResponse) Set(val *KalturaFullStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaFullStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaFullStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaFullStatusResponse(val *KalturaFullStatusResponse) *NullableKalturaFullStatusResponse {
	return &NullableKalturaFullStatusResponse{value: val, isSet: true}
}

func (v NullableKalturaFullStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaFullStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


