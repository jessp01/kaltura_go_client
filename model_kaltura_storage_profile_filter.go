/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaStorageProfileFilter struct for KalturaStorageProfileFilter
type KalturaStorageProfileFilter struct {
	KalturaStorageProfileBaseFilter
}

// NewKalturaStorageProfileFilter instantiates a new KalturaStorageProfileFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaStorageProfileFilter() *KalturaStorageProfileFilter {
	this := KalturaStorageProfileFilter{}
	return &this
}

// NewKalturaStorageProfileFilterWithDefaults instantiates a new KalturaStorageProfileFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaStorageProfileFilterWithDefaults() *KalturaStorageProfileFilter {
	this := KalturaStorageProfileFilter{}
	return &this
}

func (o KalturaStorageProfileFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaStorageProfileBaseFilter, errKalturaStorageProfileBaseFilter := json.Marshal(o.KalturaStorageProfileBaseFilter)
	if errKalturaStorageProfileBaseFilter != nil {
		return []byte{}, errKalturaStorageProfileBaseFilter
	}
	errKalturaStorageProfileBaseFilter = json.Unmarshal([]byte(serializedKalturaStorageProfileBaseFilter), &toSerialize)
	if errKalturaStorageProfileBaseFilter != nil {
		return []byte{}, errKalturaStorageProfileBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaStorageProfileFilter struct {
	value *KalturaStorageProfileFilter
	isSet bool
}

func (v NullableKalturaStorageProfileFilter) Get() *KalturaStorageProfileFilter {
	return v.value
}

func (v *NullableKalturaStorageProfileFilter) Set(val *KalturaStorageProfileFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaStorageProfileFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaStorageProfileFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaStorageProfileFilter(val *KalturaStorageProfileFilter) *NullableKalturaStorageProfileFilter {
	return &NullableKalturaStorageProfileFilter{value: val, isSet: true}
}

func (v NullableKalturaStorageProfileFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaStorageProfileFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


