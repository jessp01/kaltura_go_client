/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserLoginByKsRequest struct for UserLoginByKsRequest
type UserLoginByKsRequest struct {
	RequestedPartnerId int32 `json:"requestedPartnerId"`
}

// NewUserLoginByKsRequest instantiates a new UserLoginByKsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserLoginByKsRequest(requestedPartnerId int32) *UserLoginByKsRequest {
	this := UserLoginByKsRequest{}
	this.RequestedPartnerId = requestedPartnerId
	return &this
}

// NewUserLoginByKsRequestWithDefaults instantiates a new UserLoginByKsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserLoginByKsRequestWithDefaults() *UserLoginByKsRequest {
	this := UserLoginByKsRequest{}
	return &this
}

// GetRequestedPartnerId returns the RequestedPartnerId field value
func (o *UserLoginByKsRequest) GetRequestedPartnerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RequestedPartnerId
}

// GetRequestedPartnerIdOk returns a tuple with the RequestedPartnerId field value
// and a boolean to check if the value has been set.
func (o *UserLoginByKsRequest) GetRequestedPartnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestedPartnerId, true
}

// SetRequestedPartnerId sets field value
func (o *UserLoginByKsRequest) SetRequestedPartnerId(v int32) {
	o.RequestedPartnerId = v
}

func (o UserLoginByKsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["requestedPartnerId"] = o.RequestedPartnerId
	}
	return json.Marshal(toSerialize)
}

type NullableUserLoginByKsRequest struct {
	value *UserLoginByKsRequest
	isSet bool
}

func (v NullableUserLoginByKsRequest) Get() *UserLoginByKsRequest {
	return v.value
}

func (v *NullableUserLoginByKsRequest) Set(val *UserLoginByKsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserLoginByKsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserLoginByKsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserLoginByKsRequest(val *UserLoginByKsRequest) *NullableUserLoginByKsRequest {
	return &NullableUserLoginByKsRequest{value: val, isSet: true}
}

func (v NullableUserLoginByKsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserLoginByKsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


