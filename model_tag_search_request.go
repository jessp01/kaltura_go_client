/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TagSearchRequest struct for TagSearchRequest
type TagSearchRequest struct {
	Pager *KalturaFilterPager `json:"pager,omitempty"`
	TagFilter KalturaTagFilter `json:"tagFilter"`
}

// NewTagSearchRequest instantiates a new TagSearchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagSearchRequest(tagFilter KalturaTagFilter) *TagSearchRequest {
	this := TagSearchRequest{}
	this.TagFilter = tagFilter
	return &this
}

// NewTagSearchRequestWithDefaults instantiates a new TagSearchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagSearchRequestWithDefaults() *TagSearchRequest {
	this := TagSearchRequest{}
	return &this
}

// GetPager returns the Pager field value if set, zero value otherwise.
func (o *TagSearchRequest) GetPager() KalturaFilterPager {
	if o == nil || o.Pager == nil {
		var ret KalturaFilterPager
		return ret
	}
	return *o.Pager
}

// GetPagerOk returns a tuple with the Pager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagSearchRequest) GetPagerOk() (*KalturaFilterPager, bool) {
	if o == nil || o.Pager == nil {
		return nil, false
	}
	return o.Pager, true
}

// HasPager returns a boolean if a field has been set.
func (o *TagSearchRequest) HasPager() bool {
	if o != nil && o.Pager != nil {
		return true
	}

	return false
}

// SetPager gets a reference to the given KalturaFilterPager and assigns it to the Pager field.
func (o *TagSearchRequest) SetPager(v KalturaFilterPager) {
	o.Pager = &v
}

// GetTagFilter returns the TagFilter field value
func (o *TagSearchRequest) GetTagFilter() KalturaTagFilter {
	if o == nil {
		var ret KalturaTagFilter
		return ret
	}

	return o.TagFilter
}

// GetTagFilterOk returns a tuple with the TagFilter field value
// and a boolean to check if the value has been set.
func (o *TagSearchRequest) GetTagFilterOk() (*KalturaTagFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagFilter, true
}

// SetTagFilter sets field value
func (o *TagSearchRequest) SetTagFilter(v KalturaTagFilter) {
	o.TagFilter = v
}

func (o TagSearchRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pager != nil {
		toSerialize["pager"] = o.Pager
	}
	if true {
		toSerialize["tagFilter"] = o.TagFilter
	}
	return json.Marshal(toSerialize)
}

type NullableTagSearchRequest struct {
	value *TagSearchRequest
	isSet bool
}

func (v NullableTagSearchRequest) Get() *TagSearchRequest {
	return v.value
}

func (v *NullableTagSearchRequest) Set(val *TagSearchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTagSearchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTagSearchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagSearchRequest(val *TagSearchRequest) *NullableTagSearchRequest {
	return &NullableTagSearchRequest{value: val, isSet: true}
}

func (v NullableTagSearchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagSearchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


