/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaFieldCompareCondition struct for KalturaFieldCompareCondition
type KalturaFieldCompareCondition struct {
	KalturaCompareCondition
}

// NewKalturaFieldCompareCondition instantiates a new KalturaFieldCompareCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaFieldCompareCondition() *KalturaFieldCompareCondition {
	this := KalturaFieldCompareCondition{}
	return &this
}

// NewKalturaFieldCompareConditionWithDefaults instantiates a new KalturaFieldCompareCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaFieldCompareConditionWithDefaults() *KalturaFieldCompareCondition {
	this := KalturaFieldCompareCondition{}
	return &this
}

func (o KalturaFieldCompareCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaCompareCondition, errKalturaCompareCondition := json.Marshal(o.KalturaCompareCondition)
	if errKalturaCompareCondition != nil {
		return []byte{}, errKalturaCompareCondition
	}
	errKalturaCompareCondition = json.Unmarshal([]byte(serializedKalturaCompareCondition), &toSerialize)
	if errKalturaCompareCondition != nil {
		return []byte{}, errKalturaCompareCondition
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaFieldCompareCondition struct {
	value *KalturaFieldCompareCondition
	isSet bool
}

func (v NullableKalturaFieldCompareCondition) Get() *KalturaFieldCompareCondition {
	return v.value
}

func (v *NullableKalturaFieldCompareCondition) Set(val *KalturaFieldCompareCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaFieldCompareCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaFieldCompareCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaFieldCompareCondition(val *KalturaFieldCompareCondition) *NullableKalturaFieldCompareCondition {
	return &NullableKalturaFieldCompareCondition{value: val, isSet: true}
}

func (v NullableKalturaFieldCompareCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaFieldCompareCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


