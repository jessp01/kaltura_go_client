/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaEventNotificationTemplate struct for KalturaEventNotificationTemplate
type KalturaEventNotificationTemplate struct {
	// Define that the template could be dispatched automatically by the system
	AutomaticDispatchEnabled *bool `json:"automaticDispatchEnabled,omitempty"`
	ContentParameters []KalturaEventNotificationParameter `json:"contentParameters,omitempty"`
	// `readOnly`
	CreatedAt *int32 `json:"createdAt,omitempty"`
	Description *string `json:"description,omitempty"`
	EventConditions []KalturaCondition `json:"eventConditions,omitempty"`
	// Enum Type: `KalturaEventNotificationEventObjectType`  Define the object that raied the event that should trigger this notification
	EventObjectType *string `json:"eventObjectType,omitempty"`
	// Enum Type: `KalturaEventNotificationEventType`  Define the event that should trigger this notification
	EventType *string `json:"eventType,omitempty"`
	// `readOnly`
	Id *int32 `json:"id,omitempty"`
	// Define that the template could be dispatched manually from the API
	ManualDispatchEnabled *bool `json:"manualDispatchEnabled,omitempty"`
	Name *string `json:"name,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// `readOnly`  Enum Type: `KalturaEventNotificationTemplateStatus`
	Status *int32 `json:"status,omitempty"`
	SystemName *string `json:"systemName,omitempty"`
	// `insertOnly`  Enum Type: `KalturaEventNotificationTemplateType`
	Type *string `json:"type,omitempty"`
	// `readOnly`
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
	UserParameters []KalturaEventNotificationParameter `json:"userParameters,omitempty"`
}

// NewKalturaEventNotificationTemplate instantiates a new KalturaEventNotificationTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaEventNotificationTemplate() *KalturaEventNotificationTemplate {
	this := KalturaEventNotificationTemplate{}
	return &this
}

// NewKalturaEventNotificationTemplateWithDefaults instantiates a new KalturaEventNotificationTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaEventNotificationTemplateWithDefaults() *KalturaEventNotificationTemplate {
	this := KalturaEventNotificationTemplate{}
	return &this
}

// GetAutomaticDispatchEnabled returns the AutomaticDispatchEnabled field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetAutomaticDispatchEnabled() bool {
	if o == nil || o.AutomaticDispatchEnabled == nil {
		var ret bool
		return ret
	}
	return *o.AutomaticDispatchEnabled
}

// GetAutomaticDispatchEnabledOk returns a tuple with the AutomaticDispatchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetAutomaticDispatchEnabledOk() (*bool, bool) {
	if o == nil || o.AutomaticDispatchEnabled == nil {
		return nil, false
	}
	return o.AutomaticDispatchEnabled, true
}

// HasAutomaticDispatchEnabled returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasAutomaticDispatchEnabled() bool {
	if o != nil && o.AutomaticDispatchEnabled != nil {
		return true
	}

	return false
}

// SetAutomaticDispatchEnabled gets a reference to the given bool and assigns it to the AutomaticDispatchEnabled field.
func (o *KalturaEventNotificationTemplate) SetAutomaticDispatchEnabled(v bool) {
	o.AutomaticDispatchEnabled = &v
}

// GetContentParameters returns the ContentParameters field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetContentParameters() []KalturaEventNotificationParameter {
	if o == nil || o.ContentParameters == nil {
		var ret []KalturaEventNotificationParameter
		return ret
	}
	return o.ContentParameters
}

// GetContentParametersOk returns a tuple with the ContentParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetContentParametersOk() ([]KalturaEventNotificationParameter, bool) {
	if o == nil || o.ContentParameters == nil {
		return nil, false
	}
	return o.ContentParameters, true
}

// HasContentParameters returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasContentParameters() bool {
	if o != nil && o.ContentParameters != nil {
		return true
	}

	return false
}

// SetContentParameters gets a reference to the given []KalturaEventNotificationParameter and assigns it to the ContentParameters field.
func (o *KalturaEventNotificationTemplate) SetContentParameters(v []KalturaEventNotificationParameter) {
	o.ContentParameters = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaEventNotificationTemplate) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KalturaEventNotificationTemplate) SetDescription(v string) {
	o.Description = &v
}

// GetEventConditions returns the EventConditions field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetEventConditions() []KalturaCondition {
	if o == nil || o.EventConditions == nil {
		var ret []KalturaCondition
		return ret
	}
	return o.EventConditions
}

// GetEventConditionsOk returns a tuple with the EventConditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetEventConditionsOk() ([]KalturaCondition, bool) {
	if o == nil || o.EventConditions == nil {
		return nil, false
	}
	return o.EventConditions, true
}

// HasEventConditions returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasEventConditions() bool {
	if o != nil && o.EventConditions != nil {
		return true
	}

	return false
}

// SetEventConditions gets a reference to the given []KalturaCondition and assigns it to the EventConditions field.
func (o *KalturaEventNotificationTemplate) SetEventConditions(v []KalturaCondition) {
	o.EventConditions = v
}

// GetEventObjectType returns the EventObjectType field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetEventObjectType() string {
	if o == nil || o.EventObjectType == nil {
		var ret string
		return ret
	}
	return *o.EventObjectType
}

// GetEventObjectTypeOk returns a tuple with the EventObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetEventObjectTypeOk() (*string, bool) {
	if o == nil || o.EventObjectType == nil {
		return nil, false
	}
	return o.EventObjectType, true
}

// HasEventObjectType returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasEventObjectType() bool {
	if o != nil && o.EventObjectType != nil {
		return true
	}

	return false
}

// SetEventObjectType gets a reference to the given string and assigns it to the EventObjectType field.
func (o *KalturaEventNotificationTemplate) SetEventObjectType(v string) {
	o.EventObjectType = &v
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetEventType() string {
	if o == nil || o.EventType == nil {
		var ret string
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetEventTypeOk() (*string, bool) {
	if o == nil || o.EventType == nil {
		return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasEventType() bool {
	if o != nil && o.EventType != nil {
		return true
	}

	return false
}

// SetEventType gets a reference to the given string and assigns it to the EventType field.
func (o *KalturaEventNotificationTemplate) SetEventType(v string) {
	o.EventType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaEventNotificationTemplate) SetId(v int32) {
	o.Id = &v
}

// GetManualDispatchEnabled returns the ManualDispatchEnabled field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetManualDispatchEnabled() bool {
	if o == nil || o.ManualDispatchEnabled == nil {
		var ret bool
		return ret
	}
	return *o.ManualDispatchEnabled
}

// GetManualDispatchEnabledOk returns a tuple with the ManualDispatchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetManualDispatchEnabledOk() (*bool, bool) {
	if o == nil || o.ManualDispatchEnabled == nil {
		return nil, false
	}
	return o.ManualDispatchEnabled, true
}

// HasManualDispatchEnabled returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasManualDispatchEnabled() bool {
	if o != nil && o.ManualDispatchEnabled != nil {
		return true
	}

	return false
}

// SetManualDispatchEnabled gets a reference to the given bool and assigns it to the ManualDispatchEnabled field.
func (o *KalturaEventNotificationTemplate) SetManualDispatchEnabled(v bool) {
	o.ManualDispatchEnabled = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KalturaEventNotificationTemplate) SetName(v string) {
	o.Name = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaEventNotificationTemplate) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaEventNotificationTemplate) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KalturaEventNotificationTemplate) SetStatus(v int32) {
	o.Status = &v
}

// GetSystemName returns the SystemName field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetSystemName() string {
	if o == nil || o.SystemName == nil {
		var ret string
		return ret
	}
	return *o.SystemName
}

// GetSystemNameOk returns a tuple with the SystemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetSystemNameOk() (*string, bool) {
	if o == nil || o.SystemName == nil {
		return nil, false
	}
	return o.SystemName, true
}

// HasSystemName returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasSystemName() bool {
	if o != nil && o.SystemName != nil {
		return true
	}

	return false
}

// SetSystemName gets a reference to the given string and assigns it to the SystemName field.
func (o *KalturaEventNotificationTemplate) SetSystemName(v string) {
	o.SystemName = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *KalturaEventNotificationTemplate) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaEventNotificationTemplate) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUserParameters returns the UserParameters field value if set, zero value otherwise.
func (o *KalturaEventNotificationTemplate) GetUserParameters() []KalturaEventNotificationParameter {
	if o == nil || o.UserParameters == nil {
		var ret []KalturaEventNotificationParameter
		return ret
	}
	return o.UserParameters
}

// GetUserParametersOk returns a tuple with the UserParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationTemplate) GetUserParametersOk() ([]KalturaEventNotificationParameter, bool) {
	if o == nil || o.UserParameters == nil {
		return nil, false
	}
	return o.UserParameters, true
}

// HasUserParameters returns a boolean if a field has been set.
func (o *KalturaEventNotificationTemplate) HasUserParameters() bool {
	if o != nil && o.UserParameters != nil {
		return true
	}

	return false
}

// SetUserParameters gets a reference to the given []KalturaEventNotificationParameter and assigns it to the UserParameters field.
func (o *KalturaEventNotificationTemplate) SetUserParameters(v []KalturaEventNotificationParameter) {
	o.UserParameters = v
}

func (o KalturaEventNotificationTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AutomaticDispatchEnabled != nil {
		toSerialize["automaticDispatchEnabled"] = o.AutomaticDispatchEnabled
	}
	if o.ContentParameters != nil {
		toSerialize["contentParameters"] = o.ContentParameters
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.EventConditions != nil {
		toSerialize["eventConditions"] = o.EventConditions
	}
	if o.EventObjectType != nil {
		toSerialize["eventObjectType"] = o.EventObjectType
	}
	if o.EventType != nil {
		toSerialize["eventType"] = o.EventType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ManualDispatchEnabled != nil {
		toSerialize["manualDispatchEnabled"] = o.ManualDispatchEnabled
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.SystemName != nil {
		toSerialize["systemName"] = o.SystemName
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.UserParameters != nil {
		toSerialize["userParameters"] = o.UserParameters
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaEventNotificationTemplate struct {
	value *KalturaEventNotificationTemplate
	isSet bool
}

func (v NullableKalturaEventNotificationTemplate) Get() *KalturaEventNotificationTemplate {
	return v.value
}

func (v *NullableKalturaEventNotificationTemplate) Set(val *KalturaEventNotificationTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaEventNotificationTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaEventNotificationTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaEventNotificationTemplate(val *KalturaEventNotificationTemplate) *NullableKalturaEventNotificationTemplate {
	return &NullableKalturaEventNotificationTemplate{value: val, isSet: true}
}

func (v NullableKalturaEventNotificationTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaEventNotificationTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


