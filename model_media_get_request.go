/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MediaGetRequest struct for MediaGetRequest
type MediaGetRequest struct {
	EntryId string `json:"entryId"`
	Version *int32 `json:"version,omitempty"`
}

// NewMediaGetRequest instantiates a new MediaGetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaGetRequest(entryId string) *MediaGetRequest {
	this := MediaGetRequest{}
	this.EntryId = entryId
	return &this
}

// NewMediaGetRequestWithDefaults instantiates a new MediaGetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaGetRequestWithDefaults() *MediaGetRequest {
	this := MediaGetRequest{}
	return &this
}

// GetEntryId returns the EntryId field value
func (o *MediaGetRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *MediaGetRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *MediaGetRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *MediaGetRequest) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaGetRequest) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *MediaGetRequest) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *MediaGetRequest) SetVersion(v int32) {
	o.Version = &v
}

func (o MediaGetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableMediaGetRequest struct {
	value *MediaGetRequest
	isSet bool
}

func (v NullableMediaGetRequest) Get() *MediaGetRequest {
	return v.value
}

func (v *NullableMediaGetRequest) Set(val *MediaGetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaGetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaGetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaGetRequest(val *MediaGetRequest) *NullableMediaGetRequest {
	return &NullableMediaGetRequest{value: val, isSet: true}
}

func (v NullableMediaGetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaGetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


