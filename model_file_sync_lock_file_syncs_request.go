/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FileSyncLockFileSyncsRequest struct for FileSyncLockFileSyncsRequest
type FileSyncLockFileSyncsRequest struct {
	Filter KalturaFileSyncFilter `json:"filter"`
	LockExpiryTimeout int32 `json:"lockExpiryTimeout"`
	MaxCount int32 `json:"maxCount"`
	RelativeTimeLimit int32 `json:"relativeTimeLimit"`
	RelativeTimeRange int32 `json:"relativeTimeRange"`
	WorkerId int32 `json:"workerId"`
}

// NewFileSyncLockFileSyncsRequest instantiates a new FileSyncLockFileSyncsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileSyncLockFileSyncsRequest(filter KalturaFileSyncFilter, lockExpiryTimeout int32, maxCount int32, relativeTimeLimit int32, relativeTimeRange int32, workerId int32) *FileSyncLockFileSyncsRequest {
	this := FileSyncLockFileSyncsRequest{}
	this.Filter = filter
	this.LockExpiryTimeout = lockExpiryTimeout
	this.MaxCount = maxCount
	this.RelativeTimeLimit = relativeTimeLimit
	this.RelativeTimeRange = relativeTimeRange
	this.WorkerId = workerId
	return &this
}

// NewFileSyncLockFileSyncsRequestWithDefaults instantiates a new FileSyncLockFileSyncsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileSyncLockFileSyncsRequestWithDefaults() *FileSyncLockFileSyncsRequest {
	this := FileSyncLockFileSyncsRequest{}
	return &this
}

// GetFilter returns the Filter field value
func (o *FileSyncLockFileSyncsRequest) GetFilter() KalturaFileSyncFilter {
	if o == nil {
		var ret KalturaFileSyncFilter
		return ret
	}

	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value
// and a boolean to check if the value has been set.
func (o *FileSyncLockFileSyncsRequest) GetFilterOk() (*KalturaFileSyncFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filter, true
}

// SetFilter sets field value
func (o *FileSyncLockFileSyncsRequest) SetFilter(v KalturaFileSyncFilter) {
	o.Filter = v
}

// GetLockExpiryTimeout returns the LockExpiryTimeout field value
func (o *FileSyncLockFileSyncsRequest) GetLockExpiryTimeout() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LockExpiryTimeout
}

// GetLockExpiryTimeoutOk returns a tuple with the LockExpiryTimeout field value
// and a boolean to check if the value has been set.
func (o *FileSyncLockFileSyncsRequest) GetLockExpiryTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockExpiryTimeout, true
}

// SetLockExpiryTimeout sets field value
func (o *FileSyncLockFileSyncsRequest) SetLockExpiryTimeout(v int32) {
	o.LockExpiryTimeout = v
}

// GetMaxCount returns the MaxCount field value
func (o *FileSyncLockFileSyncsRequest) GetMaxCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxCount
}

// GetMaxCountOk returns a tuple with the MaxCount field value
// and a boolean to check if the value has been set.
func (o *FileSyncLockFileSyncsRequest) GetMaxCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxCount, true
}

// SetMaxCount sets field value
func (o *FileSyncLockFileSyncsRequest) SetMaxCount(v int32) {
	o.MaxCount = v
}

// GetRelativeTimeLimit returns the RelativeTimeLimit field value
func (o *FileSyncLockFileSyncsRequest) GetRelativeTimeLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RelativeTimeLimit
}

// GetRelativeTimeLimitOk returns a tuple with the RelativeTimeLimit field value
// and a boolean to check if the value has been set.
func (o *FileSyncLockFileSyncsRequest) GetRelativeTimeLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelativeTimeLimit, true
}

// SetRelativeTimeLimit sets field value
func (o *FileSyncLockFileSyncsRequest) SetRelativeTimeLimit(v int32) {
	o.RelativeTimeLimit = v
}

// GetRelativeTimeRange returns the RelativeTimeRange field value
func (o *FileSyncLockFileSyncsRequest) GetRelativeTimeRange() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RelativeTimeRange
}

// GetRelativeTimeRangeOk returns a tuple with the RelativeTimeRange field value
// and a boolean to check if the value has been set.
func (o *FileSyncLockFileSyncsRequest) GetRelativeTimeRangeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelativeTimeRange, true
}

// SetRelativeTimeRange sets field value
func (o *FileSyncLockFileSyncsRequest) SetRelativeTimeRange(v int32) {
	o.RelativeTimeRange = v
}

// GetWorkerId returns the WorkerId field value
func (o *FileSyncLockFileSyncsRequest) GetWorkerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value
// and a boolean to check if the value has been set.
func (o *FileSyncLockFileSyncsRequest) GetWorkerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkerId, true
}

// SetWorkerId sets field value
func (o *FileSyncLockFileSyncsRequest) SetWorkerId(v int32) {
	o.WorkerId = v
}

func (o FileSyncLockFileSyncsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["filter"] = o.Filter
	}
	if true {
		toSerialize["lockExpiryTimeout"] = o.LockExpiryTimeout
	}
	if true {
		toSerialize["maxCount"] = o.MaxCount
	}
	if true {
		toSerialize["relativeTimeLimit"] = o.RelativeTimeLimit
	}
	if true {
		toSerialize["relativeTimeRange"] = o.RelativeTimeRange
	}
	if true {
		toSerialize["workerId"] = o.WorkerId
	}
	return json.Marshal(toSerialize)
}

type NullableFileSyncLockFileSyncsRequest struct {
	value *FileSyncLockFileSyncsRequest
	isSet bool
}

func (v NullableFileSyncLockFileSyncsRequest) Get() *FileSyncLockFileSyncsRequest {
	return v.value
}

func (v *NullableFileSyncLockFileSyncsRequest) Set(val *FileSyncLockFileSyncsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFileSyncLockFileSyncsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFileSyncLockFileSyncsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileSyncLockFileSyncsRequest(val *FileSyncLockFileSyncsRequest) *NullableFileSyncLockFileSyncsRequest {
	return &NullableFileSyncLockFileSyncsRequest{value: val, isSet: true}
}

func (v NullableFileSyncLockFileSyncsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileSyncLockFileSyncsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


