/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLiveParamsFilter struct for KalturaLiveParamsFilter
type KalturaLiveParamsFilter struct {
	KalturaLiveParamsBaseFilter
}

// NewKalturaLiveParamsFilter instantiates a new KalturaLiveParamsFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLiveParamsFilter() *KalturaLiveParamsFilter {
	this := KalturaLiveParamsFilter{}
	return &this
}

// NewKalturaLiveParamsFilterWithDefaults instantiates a new KalturaLiveParamsFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLiveParamsFilterWithDefaults() *KalturaLiveParamsFilter {
	this := KalturaLiveParamsFilter{}
	return &this
}

func (o KalturaLiveParamsFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaLiveParamsBaseFilter, errKalturaLiveParamsBaseFilter := json.Marshal(o.KalturaLiveParamsBaseFilter)
	if errKalturaLiveParamsBaseFilter != nil {
		return []byte{}, errKalturaLiveParamsBaseFilter
	}
	errKalturaLiveParamsBaseFilter = json.Unmarshal([]byte(serializedKalturaLiveParamsBaseFilter), &toSerialize)
	if errKalturaLiveParamsBaseFilter != nil {
		return []byte{}, errKalturaLiveParamsBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLiveParamsFilter struct {
	value *KalturaLiveParamsFilter
	isSet bool
}

func (v NullableKalturaLiveParamsFilter) Get() *KalturaLiveParamsFilter {
	return v.value
}

func (v *NullableKalturaLiveParamsFilter) Set(val *KalturaLiveParamsFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLiveParamsFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLiveParamsFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLiveParamsFilter(val *KalturaLiveParamsFilter) *NullableKalturaLiveParamsFilter {
	return &NullableKalturaLiveParamsFilter{value: val, isSet: true}
}

func (v NullableKalturaLiveParamsFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLiveParamsFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


