/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LiveStreamAllocateConferenceRoomRequest struct for LiveStreamAllocateConferenceRoomRequest
type LiveStreamAllocateConferenceRoomRequest struct {
	EntryId string `json:"entryId"`
	Env *string `json:"env,omitempty"`
}

// NewLiveStreamAllocateConferenceRoomRequest instantiates a new LiveStreamAllocateConferenceRoomRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamAllocateConferenceRoomRequest(entryId string) *LiveStreamAllocateConferenceRoomRequest {
	this := LiveStreamAllocateConferenceRoomRequest{}
	this.EntryId = entryId
	return &this
}

// NewLiveStreamAllocateConferenceRoomRequestWithDefaults instantiates a new LiveStreamAllocateConferenceRoomRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamAllocateConferenceRoomRequestWithDefaults() *LiveStreamAllocateConferenceRoomRequest {
	this := LiveStreamAllocateConferenceRoomRequest{}
	return &this
}

// GetEntryId returns the EntryId field value
func (o *LiveStreamAllocateConferenceRoomRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *LiveStreamAllocateConferenceRoomRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *LiveStreamAllocateConferenceRoomRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *LiveStreamAllocateConferenceRoomRequest) GetEnv() string {
	if o == nil || o.Env == nil {
		var ret string
		return ret
	}
	return *o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamAllocateConferenceRoomRequest) GetEnvOk() (*string, bool) {
	if o == nil || o.Env == nil {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *LiveStreamAllocateConferenceRoomRequest) HasEnv() bool {
	if o != nil && o.Env != nil {
		return true
	}

	return false
}

// SetEnv gets a reference to the given string and assigns it to the Env field.
func (o *LiveStreamAllocateConferenceRoomRequest) SetEnv(v string) {
	o.Env = &v
}

func (o LiveStreamAllocateConferenceRoomRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if o.Env != nil {
		toSerialize["env"] = o.Env
	}
	return json.Marshal(toSerialize)
}

type NullableLiveStreamAllocateConferenceRoomRequest struct {
	value *LiveStreamAllocateConferenceRoomRequest
	isSet bool
}

func (v NullableLiveStreamAllocateConferenceRoomRequest) Get() *LiveStreamAllocateConferenceRoomRequest {
	return v.value
}

func (v *NullableLiveStreamAllocateConferenceRoomRequest) Set(val *LiveStreamAllocateConferenceRoomRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamAllocateConferenceRoomRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamAllocateConferenceRoomRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamAllocateConferenceRoomRequest(val *LiveStreamAllocateConferenceRoomRequest) *NullableLiveStreamAllocateConferenceRoomRequest {
	return &NullableLiveStreamAllocateConferenceRoomRequest{value: val, isSet: true}
}

func (v NullableLiveStreamAllocateConferenceRoomRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveStreamAllocateConferenceRoomRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


