/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaHttpHeaderCondition struct for KalturaHttpHeaderCondition
type KalturaHttpHeaderCondition struct {
	KalturaRegexCondition
}

// NewKalturaHttpHeaderCondition instantiates a new KalturaHttpHeaderCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaHttpHeaderCondition() *KalturaHttpHeaderCondition {
	this := KalturaHttpHeaderCondition{}
	return &this
}

// NewKalturaHttpHeaderConditionWithDefaults instantiates a new KalturaHttpHeaderCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaHttpHeaderConditionWithDefaults() *KalturaHttpHeaderCondition {
	this := KalturaHttpHeaderCondition{}
	return &this
}

func (o KalturaHttpHeaderCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaRegexCondition, errKalturaRegexCondition := json.Marshal(o.KalturaRegexCondition)
	if errKalturaRegexCondition != nil {
		return []byte{}, errKalturaRegexCondition
	}
	errKalturaRegexCondition = json.Unmarshal([]byte(serializedKalturaRegexCondition), &toSerialize)
	if errKalturaRegexCondition != nil {
		return []byte{}, errKalturaRegexCondition
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaHttpHeaderCondition struct {
	value *KalturaHttpHeaderCondition
	isSet bool
}

func (v NullableKalturaHttpHeaderCondition) Get() *KalturaHttpHeaderCondition {
	return v.value
}

func (v *NullableKalturaHttpHeaderCondition) Set(val *KalturaHttpHeaderCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaHttpHeaderCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaHttpHeaderCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaHttpHeaderCondition(val *KalturaHttpHeaderCondition) *NullableKalturaHttpHeaderCondition {
	return &NullableKalturaHttpHeaderCondition{value: val, isSet: true}
}

func (v NullableKalturaHttpHeaderCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaHttpHeaderCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


