/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaESearchAggregationResponseItem struct for KalturaESearchAggregationResponseItem
type KalturaESearchAggregationResponseItem struct {
	Buckets []KalturaESearchAggregationBucket `json:"buckets,omitempty"`
	FieldName *string `json:"fieldName,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewKalturaESearchAggregationResponseItem instantiates a new KalturaESearchAggregationResponseItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaESearchAggregationResponseItem() *KalturaESearchAggregationResponseItem {
	this := KalturaESearchAggregationResponseItem{}
	return &this
}

// NewKalturaESearchAggregationResponseItemWithDefaults instantiates a new KalturaESearchAggregationResponseItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaESearchAggregationResponseItemWithDefaults() *KalturaESearchAggregationResponseItem {
	this := KalturaESearchAggregationResponseItem{}
	return &this
}

// GetBuckets returns the Buckets field value if set, zero value otherwise.
func (o *KalturaESearchAggregationResponseItem) GetBuckets() []KalturaESearchAggregationBucket {
	if o == nil || o.Buckets == nil {
		var ret []KalturaESearchAggregationBucket
		return ret
	}
	return o.Buckets
}

// GetBucketsOk returns a tuple with the Buckets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaESearchAggregationResponseItem) GetBucketsOk() ([]KalturaESearchAggregationBucket, bool) {
	if o == nil || o.Buckets == nil {
		return nil, false
	}
	return o.Buckets, true
}

// HasBuckets returns a boolean if a field has been set.
func (o *KalturaESearchAggregationResponseItem) HasBuckets() bool {
	if o != nil && o.Buckets != nil {
		return true
	}

	return false
}

// SetBuckets gets a reference to the given []KalturaESearchAggregationBucket and assigns it to the Buckets field.
func (o *KalturaESearchAggregationResponseItem) SetBuckets(v []KalturaESearchAggregationBucket) {
	o.Buckets = v
}

// GetFieldName returns the FieldName field value if set, zero value otherwise.
func (o *KalturaESearchAggregationResponseItem) GetFieldName() string {
	if o == nil || o.FieldName == nil {
		var ret string
		return ret
	}
	return *o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaESearchAggregationResponseItem) GetFieldNameOk() (*string, bool) {
	if o == nil || o.FieldName == nil {
		return nil, false
	}
	return o.FieldName, true
}

// HasFieldName returns a boolean if a field has been set.
func (o *KalturaESearchAggregationResponseItem) HasFieldName() bool {
	if o != nil && o.FieldName != nil {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given string and assigns it to the FieldName field.
func (o *KalturaESearchAggregationResponseItem) SetFieldName(v string) {
	o.FieldName = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KalturaESearchAggregationResponseItem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaESearchAggregationResponseItem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KalturaESearchAggregationResponseItem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KalturaESearchAggregationResponseItem) SetName(v string) {
	o.Name = &v
}

func (o KalturaESearchAggregationResponseItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Buckets != nil {
		toSerialize["buckets"] = o.Buckets
	}
	if o.FieldName != nil {
		toSerialize["fieldName"] = o.FieldName
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaESearchAggregationResponseItem struct {
	value *KalturaESearchAggregationResponseItem
	isSet bool
}

func (v NullableKalturaESearchAggregationResponseItem) Get() *KalturaESearchAggregationResponseItem {
	return v.value
}

func (v *NullableKalturaESearchAggregationResponseItem) Set(val *KalturaESearchAggregationResponseItem) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaESearchAggregationResponseItem) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaESearchAggregationResponseItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaESearchAggregationResponseItem(val *KalturaESearchAggregationResponseItem) *NullableKalturaESearchAggregationResponseItem {
	return &NullableKalturaESearchAggregationResponseItem{value: val, isSet: true}
}

func (v NullableKalturaESearchAggregationResponseItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaESearchAggregationResponseItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


