/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBulkUpload struct for KalturaBulkUpload
type KalturaBulkUpload struct {
	BulkFileUrl *string `json:"bulkFileUrl,omitempty"`
	// Enum Type: `KalturaBulkUploadObjectType`
	BulkUploadObjectType *string `json:"bulkUploadObjectType,omitempty"`
	// Enum Type: `KalturaBulkUploadType`
	BulkUploadType *string `json:"bulkUploadType,omitempty"`
	CsvFileUrl *string `json:"csvFileUrl,omitempty"`
	Description *string `json:"description,omitempty"`
	Error *string `json:"error,omitempty"`
	ErrorNumber *int32 `json:"errorNumber,omitempty"`
	// Enum Type: `KalturaBatchJobErrorTypes`
	ErrorType *int32 `json:"errorType,omitempty"`
	FileName *string `json:"fileName,omitempty"`
	Id *int32 `json:"id,omitempty"`
	LogFileUrl *string `json:"logFileUrl,omitempty"`
	NumOfEntries *int32 `json:"numOfEntries,omitempty"`
	NumOfObjects *int32 `json:"numOfObjects,omitempty"`
	Results []KalturaBulkUploadResult `json:"results,omitempty"`
	// Enum Type: `KalturaBatchJobStatus`
	Status *int32 `json:"status,omitempty"`
	UploadedBy *string `json:"uploadedBy,omitempty"`
	UploadedByUserId *string `json:"uploadedByUserId,omitempty"`
	UploadedOn *int32 `json:"uploadedOn,omitempty"`
}

// NewKalturaBulkUpload instantiates a new KalturaBulkUpload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBulkUpload() *KalturaBulkUpload {
	this := KalturaBulkUpload{}
	return &this
}

// NewKalturaBulkUploadWithDefaults instantiates a new KalturaBulkUpload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBulkUploadWithDefaults() *KalturaBulkUpload {
	this := KalturaBulkUpload{}
	return &this
}

// GetBulkFileUrl returns the BulkFileUrl field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetBulkFileUrl() string {
	if o == nil || o.BulkFileUrl == nil {
		var ret string
		return ret
	}
	return *o.BulkFileUrl
}

// GetBulkFileUrlOk returns a tuple with the BulkFileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetBulkFileUrlOk() (*string, bool) {
	if o == nil || o.BulkFileUrl == nil {
		return nil, false
	}
	return o.BulkFileUrl, true
}

// HasBulkFileUrl returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasBulkFileUrl() bool {
	if o != nil && o.BulkFileUrl != nil {
		return true
	}

	return false
}

// SetBulkFileUrl gets a reference to the given string and assigns it to the BulkFileUrl field.
func (o *KalturaBulkUpload) SetBulkFileUrl(v string) {
	o.BulkFileUrl = &v
}

// GetBulkUploadObjectType returns the BulkUploadObjectType field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetBulkUploadObjectType() string {
	if o == nil || o.BulkUploadObjectType == nil {
		var ret string
		return ret
	}
	return *o.BulkUploadObjectType
}

// GetBulkUploadObjectTypeOk returns a tuple with the BulkUploadObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetBulkUploadObjectTypeOk() (*string, bool) {
	if o == nil || o.BulkUploadObjectType == nil {
		return nil, false
	}
	return o.BulkUploadObjectType, true
}

// HasBulkUploadObjectType returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasBulkUploadObjectType() bool {
	if o != nil && o.BulkUploadObjectType != nil {
		return true
	}

	return false
}

// SetBulkUploadObjectType gets a reference to the given string and assigns it to the BulkUploadObjectType field.
func (o *KalturaBulkUpload) SetBulkUploadObjectType(v string) {
	o.BulkUploadObjectType = &v
}

// GetBulkUploadType returns the BulkUploadType field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetBulkUploadType() string {
	if o == nil || o.BulkUploadType == nil {
		var ret string
		return ret
	}
	return *o.BulkUploadType
}

// GetBulkUploadTypeOk returns a tuple with the BulkUploadType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetBulkUploadTypeOk() (*string, bool) {
	if o == nil || o.BulkUploadType == nil {
		return nil, false
	}
	return o.BulkUploadType, true
}

// HasBulkUploadType returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasBulkUploadType() bool {
	if o != nil && o.BulkUploadType != nil {
		return true
	}

	return false
}

// SetBulkUploadType gets a reference to the given string and assigns it to the BulkUploadType field.
func (o *KalturaBulkUpload) SetBulkUploadType(v string) {
	o.BulkUploadType = &v
}

// GetCsvFileUrl returns the CsvFileUrl field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetCsvFileUrl() string {
	if o == nil || o.CsvFileUrl == nil {
		var ret string
		return ret
	}
	return *o.CsvFileUrl
}

// GetCsvFileUrlOk returns a tuple with the CsvFileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetCsvFileUrlOk() (*string, bool) {
	if o == nil || o.CsvFileUrl == nil {
		return nil, false
	}
	return o.CsvFileUrl, true
}

// HasCsvFileUrl returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasCsvFileUrl() bool {
	if o != nil && o.CsvFileUrl != nil {
		return true
	}

	return false
}

// SetCsvFileUrl gets a reference to the given string and assigns it to the CsvFileUrl field.
func (o *KalturaBulkUpload) SetCsvFileUrl(v string) {
	o.CsvFileUrl = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KalturaBulkUpload) SetDescription(v string) {
	o.Description = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *KalturaBulkUpload) SetError(v string) {
	o.Error = &v
}

// GetErrorNumber returns the ErrorNumber field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetErrorNumber() int32 {
	if o == nil || o.ErrorNumber == nil {
		var ret int32
		return ret
	}
	return *o.ErrorNumber
}

// GetErrorNumberOk returns a tuple with the ErrorNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetErrorNumberOk() (*int32, bool) {
	if o == nil || o.ErrorNumber == nil {
		return nil, false
	}
	return o.ErrorNumber, true
}

// HasErrorNumber returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasErrorNumber() bool {
	if o != nil && o.ErrorNumber != nil {
		return true
	}

	return false
}

// SetErrorNumber gets a reference to the given int32 and assigns it to the ErrorNumber field.
func (o *KalturaBulkUpload) SetErrorNumber(v int32) {
	o.ErrorNumber = &v
}

// GetErrorType returns the ErrorType field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetErrorType() int32 {
	if o == nil || o.ErrorType == nil {
		var ret int32
		return ret
	}
	return *o.ErrorType
}

// GetErrorTypeOk returns a tuple with the ErrorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetErrorTypeOk() (*int32, bool) {
	if o == nil || o.ErrorType == nil {
		return nil, false
	}
	return o.ErrorType, true
}

// HasErrorType returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasErrorType() bool {
	if o != nil && o.ErrorType != nil {
		return true
	}

	return false
}

// SetErrorType gets a reference to the given int32 and assigns it to the ErrorType field.
func (o *KalturaBulkUpload) SetErrorType(v int32) {
	o.ErrorType = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *KalturaBulkUpload) SetFileName(v string) {
	o.FileName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaBulkUpload) SetId(v int32) {
	o.Id = &v
}

// GetLogFileUrl returns the LogFileUrl field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetLogFileUrl() string {
	if o == nil || o.LogFileUrl == nil {
		var ret string
		return ret
	}
	return *o.LogFileUrl
}

// GetLogFileUrlOk returns a tuple with the LogFileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetLogFileUrlOk() (*string, bool) {
	if o == nil || o.LogFileUrl == nil {
		return nil, false
	}
	return o.LogFileUrl, true
}

// HasLogFileUrl returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasLogFileUrl() bool {
	if o != nil && o.LogFileUrl != nil {
		return true
	}

	return false
}

// SetLogFileUrl gets a reference to the given string and assigns it to the LogFileUrl field.
func (o *KalturaBulkUpload) SetLogFileUrl(v string) {
	o.LogFileUrl = &v
}

// GetNumOfEntries returns the NumOfEntries field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetNumOfEntries() int32 {
	if o == nil || o.NumOfEntries == nil {
		var ret int32
		return ret
	}
	return *o.NumOfEntries
}

// GetNumOfEntriesOk returns a tuple with the NumOfEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetNumOfEntriesOk() (*int32, bool) {
	if o == nil || o.NumOfEntries == nil {
		return nil, false
	}
	return o.NumOfEntries, true
}

// HasNumOfEntries returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasNumOfEntries() bool {
	if o != nil && o.NumOfEntries != nil {
		return true
	}

	return false
}

// SetNumOfEntries gets a reference to the given int32 and assigns it to the NumOfEntries field.
func (o *KalturaBulkUpload) SetNumOfEntries(v int32) {
	o.NumOfEntries = &v
}

// GetNumOfObjects returns the NumOfObjects field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetNumOfObjects() int32 {
	if o == nil || o.NumOfObjects == nil {
		var ret int32
		return ret
	}
	return *o.NumOfObjects
}

// GetNumOfObjectsOk returns a tuple with the NumOfObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetNumOfObjectsOk() (*int32, bool) {
	if o == nil || o.NumOfObjects == nil {
		return nil, false
	}
	return o.NumOfObjects, true
}

// HasNumOfObjects returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasNumOfObjects() bool {
	if o != nil && o.NumOfObjects != nil {
		return true
	}

	return false
}

// SetNumOfObjects gets a reference to the given int32 and assigns it to the NumOfObjects field.
func (o *KalturaBulkUpload) SetNumOfObjects(v int32) {
	o.NumOfObjects = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetResults() []KalturaBulkUploadResult {
	if o == nil || o.Results == nil {
		var ret []KalturaBulkUploadResult
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetResultsOk() ([]KalturaBulkUploadResult, bool) {
	if o == nil || o.Results == nil {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasResults() bool {
	if o != nil && o.Results != nil {
		return true
	}

	return false
}

// SetResults gets a reference to the given []KalturaBulkUploadResult and assigns it to the Results field.
func (o *KalturaBulkUpload) SetResults(v []KalturaBulkUploadResult) {
	o.Results = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KalturaBulkUpload) SetStatus(v int32) {
	o.Status = &v
}

// GetUploadedBy returns the UploadedBy field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetUploadedBy() string {
	if o == nil || o.UploadedBy == nil {
		var ret string
		return ret
	}
	return *o.UploadedBy
}

// GetUploadedByOk returns a tuple with the UploadedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetUploadedByOk() (*string, bool) {
	if o == nil || o.UploadedBy == nil {
		return nil, false
	}
	return o.UploadedBy, true
}

// HasUploadedBy returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasUploadedBy() bool {
	if o != nil && o.UploadedBy != nil {
		return true
	}

	return false
}

// SetUploadedBy gets a reference to the given string and assigns it to the UploadedBy field.
func (o *KalturaBulkUpload) SetUploadedBy(v string) {
	o.UploadedBy = &v
}

// GetUploadedByUserId returns the UploadedByUserId field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetUploadedByUserId() string {
	if o == nil || o.UploadedByUserId == nil {
		var ret string
		return ret
	}
	return *o.UploadedByUserId
}

// GetUploadedByUserIdOk returns a tuple with the UploadedByUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetUploadedByUserIdOk() (*string, bool) {
	if o == nil || o.UploadedByUserId == nil {
		return nil, false
	}
	return o.UploadedByUserId, true
}

// HasUploadedByUserId returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasUploadedByUserId() bool {
	if o != nil && o.UploadedByUserId != nil {
		return true
	}

	return false
}

// SetUploadedByUserId gets a reference to the given string and assigns it to the UploadedByUserId field.
func (o *KalturaBulkUpload) SetUploadedByUserId(v string) {
	o.UploadedByUserId = &v
}

// GetUploadedOn returns the UploadedOn field value if set, zero value otherwise.
func (o *KalturaBulkUpload) GetUploadedOn() int32 {
	if o == nil || o.UploadedOn == nil {
		var ret int32
		return ret
	}
	return *o.UploadedOn
}

// GetUploadedOnOk returns a tuple with the UploadedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBulkUpload) GetUploadedOnOk() (*int32, bool) {
	if o == nil || o.UploadedOn == nil {
		return nil, false
	}
	return o.UploadedOn, true
}

// HasUploadedOn returns a boolean if a field has been set.
func (o *KalturaBulkUpload) HasUploadedOn() bool {
	if o != nil && o.UploadedOn != nil {
		return true
	}

	return false
}

// SetUploadedOn gets a reference to the given int32 and assigns it to the UploadedOn field.
func (o *KalturaBulkUpload) SetUploadedOn(v int32) {
	o.UploadedOn = &v
}

func (o KalturaBulkUpload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BulkFileUrl != nil {
		toSerialize["bulkFileUrl"] = o.BulkFileUrl
	}
	if o.BulkUploadObjectType != nil {
		toSerialize["bulkUploadObjectType"] = o.BulkUploadObjectType
	}
	if o.BulkUploadType != nil {
		toSerialize["bulkUploadType"] = o.BulkUploadType
	}
	if o.CsvFileUrl != nil {
		toSerialize["csvFileUrl"] = o.CsvFileUrl
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.ErrorNumber != nil {
		toSerialize["errorNumber"] = o.ErrorNumber
	}
	if o.ErrorType != nil {
		toSerialize["errorType"] = o.ErrorType
	}
	if o.FileName != nil {
		toSerialize["fileName"] = o.FileName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LogFileUrl != nil {
		toSerialize["logFileUrl"] = o.LogFileUrl
	}
	if o.NumOfEntries != nil {
		toSerialize["numOfEntries"] = o.NumOfEntries
	}
	if o.NumOfObjects != nil {
		toSerialize["numOfObjects"] = o.NumOfObjects
	}
	if o.Results != nil {
		toSerialize["results"] = o.Results
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.UploadedBy != nil {
		toSerialize["uploadedBy"] = o.UploadedBy
	}
	if o.UploadedByUserId != nil {
		toSerialize["uploadedByUserId"] = o.UploadedByUserId
	}
	if o.UploadedOn != nil {
		toSerialize["uploadedOn"] = o.UploadedOn
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBulkUpload struct {
	value *KalturaBulkUpload
	isSet bool
}

func (v NullableKalturaBulkUpload) Get() *KalturaBulkUpload {
	return v.value
}

func (v *NullableKalturaBulkUpload) Set(val *KalturaBulkUpload) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBulkUpload) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBulkUpload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBulkUpload(val *KalturaBulkUpload) *NullableKalturaBulkUpload {
	return &NullableKalturaBulkUpload{value: val, isSet: true}
}

func (v NullableKalturaBulkUpload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBulkUpload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


