/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ESearchSearchUserRequest struct for ESearchSearchUserRequest
type ESearchSearchUserRequest struct {
	Pager *KalturaPager `json:"pager,omitempty"`
	SearchParams KalturaESearchUserParams `json:"searchParams"`
}

// NewESearchSearchUserRequest instantiates a new ESearchSearchUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewESearchSearchUserRequest(searchParams KalturaESearchUserParams) *ESearchSearchUserRequest {
	this := ESearchSearchUserRequest{}
	this.SearchParams = searchParams
	return &this
}

// NewESearchSearchUserRequestWithDefaults instantiates a new ESearchSearchUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewESearchSearchUserRequestWithDefaults() *ESearchSearchUserRequest {
	this := ESearchSearchUserRequest{}
	return &this
}

// GetPager returns the Pager field value if set, zero value otherwise.
func (o *ESearchSearchUserRequest) GetPager() KalturaPager {
	if o == nil || o.Pager == nil {
		var ret KalturaPager
		return ret
	}
	return *o.Pager
}

// GetPagerOk returns a tuple with the Pager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ESearchSearchUserRequest) GetPagerOk() (*KalturaPager, bool) {
	if o == nil || o.Pager == nil {
		return nil, false
	}
	return o.Pager, true
}

// HasPager returns a boolean if a field has been set.
func (o *ESearchSearchUserRequest) HasPager() bool {
	if o != nil && o.Pager != nil {
		return true
	}

	return false
}

// SetPager gets a reference to the given KalturaPager and assigns it to the Pager field.
func (o *ESearchSearchUserRequest) SetPager(v KalturaPager) {
	o.Pager = &v
}

// GetSearchParams returns the SearchParams field value
func (o *ESearchSearchUserRequest) GetSearchParams() KalturaESearchUserParams {
	if o == nil {
		var ret KalturaESearchUserParams
		return ret
	}

	return o.SearchParams
}

// GetSearchParamsOk returns a tuple with the SearchParams field value
// and a boolean to check if the value has been set.
func (o *ESearchSearchUserRequest) GetSearchParamsOk() (*KalturaESearchUserParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SearchParams, true
}

// SetSearchParams sets field value
func (o *ESearchSearchUserRequest) SetSearchParams(v KalturaESearchUserParams) {
	o.SearchParams = v
}

func (o ESearchSearchUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pager != nil {
		toSerialize["pager"] = o.Pager
	}
	if true {
		toSerialize["searchParams"] = o.SearchParams
	}
	return json.Marshal(toSerialize)
}

type NullableESearchSearchUserRequest struct {
	value *ESearchSearchUserRequest
	isSet bool
}

func (v NullableESearchSearchUserRequest) Get() *ESearchSearchUserRequest {
	return v.value
}

func (v *NullableESearchSearchUserRequest) Set(val *ESearchSearchUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableESearchSearchUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableESearchSearchUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableESearchSearchUserRequest(val *ESearchSearchUserRequest) *NullableESearchSearchUserRequest {
	return &NullableESearchSearchUserRequest{value: val, isSet: true}
}

func (v NullableESearchSearchUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableESearchSearchUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


