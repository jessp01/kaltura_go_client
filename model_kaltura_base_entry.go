/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBaseEntry struct for KalturaBaseEntry
type KalturaBaseEntry struct {
	// The Access Control ID assigned to this entry (null when not set, send -1 to remove)
	AccessControlId *int32 `json:"accessControlId,omitempty"`
	// Entry admin tags can be updated only by administrators
	AdminTags *string `json:"adminTags,omitempty"`
	// `insertOnly`  Enum Type: `KalturaEntryApplication`  Entry application
	Application *string `json:"application,omitempty"`
	// `insertOnly`  Entry application version
	ApplicationVersion *string `json:"applicationVersion,omitempty"`
	// Block auto transcript on Entry
	BlockAutoTranscript *bool `json:"blockAutoTranscript,omitempty"`
	// `readOnly`  Comma seperated string of the capabilities of the entry. Any capability needed can be added to this list.
	Capabilities *string `json:"capabilities,omitempty"`
	// Comma separated list of full names of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.
	Categories *string `json:"categories,omitempty"`
	// Comma separated list of ids of categories to which this entry belongs. Only categories that don't have entitlement (privacy context) are listed, to retrieve the full list of categories, use the categoryEntry.list action.
	CategoriesIds *string `json:"categoriesIds,omitempty"`
	// Override the default ingestion profile
	ConversionProfileId *int32 `json:"conversionProfileId,omitempty"`
	// `readOnly`  Entry creation date as Unix timestamp (In seconds)
	CreatedAt *int32 `json:"createdAt,omitempty"`
	// `insertOnly`  The ID of the user who created this entry
	CreatorId *string `json:"creatorId,omitempty"`
	// Entry description
	Description *string `json:"description,omitempty"`
	// Enum Type: `KalturaEntryDisplayInSearchType`  should we display this entry in search
	DisplayInSearch *int32 `json:"displayInSearch,omitempty"`
	// `readOnly`  Download URL for the entry
	DownloadUrl *string `json:"downloadUrl,omitempty"`
	// Entry scheduling end date (null when not set, send -1 to remove)
	EndDate *int32 `json:"endDate,omitempty"`
	// list of user ids that are entitled to edit the entry (no server enforcement) The difference between entitledUsersEdit, entitledUsersPublish and entitledUsersView is applicative only
	EntitledUsersEdit *string `json:"entitledUsersEdit,omitempty"`
	// list of user ids that are entitled to publish the entry (no server enforcement) The difference between entitledUsersEdit, entitledUsersPublish and entitledUsersView is applicative only
	EntitledUsersPublish *string `json:"entitledUsersPublish,omitempty"`
	// list of user ids that are entitled to view the entry (no server enforcement) The difference between entitledUsersEdit, entitledUsersPublish and entitledUsersView is applicative only
	EntitledUsersView *string `json:"entitledUsersView,omitempty"`
	GroupId *int32 `json:"groupId,omitempty"`
	// `readOnly`  Auto generated 10 characters alphanumeric string
	Id *string `json:"id,omitempty"`
	// Enum Type: `KalturaLicenseType`  License type used for this entry
	LicenseType *int32 `json:"licenseType,omitempty"`
	// `readOnly`  Number of moderation requests waiting for this entry
	ModerationCount *int32 `json:"moderationCount,omitempty"`
	// `readOnly`  Enum Type: `KalturaEntryModerationStatus`  Entry moderation status
	ModerationStatus *int32 `json:"moderationStatus,omitempty"`
	// Entry name (Min 1 chars)
	Name *string `json:"name,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	OperationAttributes []KalturaOperationAttributes `json:"operationAttributes,omitempty"`
	// ID of source root entry, used for defining entires association
	ParentEntryId *string `json:"parentEntryId,omitempty"`
	// Can be used to store various partner related data as a string
	PartnerData *string `json:"partnerData,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// Can be used to store various partner related data as a numeric value
	PartnerSortValue *int32 `json:"partnerSortValue,omitempty"`
	// `readOnly`  The calculated average rank. rank = totalRank / votes
	Rank *float32 `json:"rank,omitempty"`
	// IF not empty, points to an entry ID the should replace this current entry's id.
	RedirectEntryId *string `json:"redirectEntryId,omitempty"`
	// Entry external reference id
	ReferenceId *string `json:"referenceId,omitempty"`
	// `readOnly`  ID of the entry that will be replaced when the replacement approved and this entry is ready
	ReplacedEntryId *string `json:"replacedEntryId,omitempty"`
	// `readOnly`  Enum Type: `KalturaEntryReplacementStatus`  Status of the replacement readiness and approval
	ReplacementStatus *string `json:"replacementStatus,omitempty"`
	// `readOnly`  ID of temporary entry that will replace this entry when it's approved and ready for replacement
	ReplacingEntryId *string `json:"replacingEntryId,omitempty"`
	// `readOnly`  ID of source root entry, used for clipped, skipped and cropped entries that created from another entry
	RootEntryId *string `json:"rootEntryId,omitempty"`
	// `readOnly`  Indexed search text for full text search
	SearchText *string `json:"searchText,omitempty"`
	// Entry scheduling start date (null when not set, send -1 to remove)
	StartDate *int32 `json:"startDate,omitempty"`
	// `readOnly`  Enum Type: `KalturaEntryStatus`
	Status *string `json:"status,omitempty"`
	// Entry tags
	Tags *string `json:"tags,omitempty"`
	// `insertOnly`  Template entry id
	TemplateEntryId *string `json:"templateEntryId,omitempty"`
	// `readOnly`  Thumbnail URL
	ThumbnailUrl *string `json:"thumbnailUrl,omitempty"`
	// `readOnly`  The sum of all rank values submitted to the baseEntry.anonymousRank action
	TotalRank *int32 `json:"totalRank,omitempty"`
	// Enum Type: `KalturaEntryType`  The type of the entry, this is auto filled by the derived entry object
	Type *string `json:"type,omitempty"`
	// `readOnly`  Entry update date as Unix timestamp (In seconds)
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
	// The ID of the user who is the owner of this entry
	UserId *string `json:"userId,omitempty"`
	// `readOnly`  Version of the entry data
	Version *int32 `json:"version,omitempty"`
	// `readOnly`  A count of all requests made to the baseEntry.anonymousRank action
	Votes *int32 `json:"votes,omitempty"`
}

// NewKalturaBaseEntry instantiates a new KalturaBaseEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBaseEntry() *KalturaBaseEntry {
	this := KalturaBaseEntry{}
	return &this
}

// NewKalturaBaseEntryWithDefaults instantiates a new KalturaBaseEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBaseEntryWithDefaults() *KalturaBaseEntry {
	this := KalturaBaseEntry{}
	return &this
}

// GetAccessControlId returns the AccessControlId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetAccessControlId() int32 {
	if o == nil || o.AccessControlId == nil {
		var ret int32
		return ret
	}
	return *o.AccessControlId
}

// GetAccessControlIdOk returns a tuple with the AccessControlId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetAccessControlIdOk() (*int32, bool) {
	if o == nil || o.AccessControlId == nil {
		return nil, false
	}
	return o.AccessControlId, true
}

// HasAccessControlId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasAccessControlId() bool {
	if o != nil && o.AccessControlId != nil {
		return true
	}

	return false
}

// SetAccessControlId gets a reference to the given int32 and assigns it to the AccessControlId field.
func (o *KalturaBaseEntry) SetAccessControlId(v int32) {
	o.AccessControlId = &v
}

// GetAdminTags returns the AdminTags field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetAdminTags() string {
	if o == nil || o.AdminTags == nil {
		var ret string
		return ret
	}
	return *o.AdminTags
}

// GetAdminTagsOk returns a tuple with the AdminTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetAdminTagsOk() (*string, bool) {
	if o == nil || o.AdminTags == nil {
		return nil, false
	}
	return o.AdminTags, true
}

// HasAdminTags returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasAdminTags() bool {
	if o != nil && o.AdminTags != nil {
		return true
	}

	return false
}

// SetAdminTags gets a reference to the given string and assigns it to the AdminTags field.
func (o *KalturaBaseEntry) SetAdminTags(v string) {
	o.AdminTags = &v
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetApplication() string {
	if o == nil || o.Application == nil {
		var ret string
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetApplicationOk() (*string, bool) {
	if o == nil || o.Application == nil {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasApplication() bool {
	if o != nil && o.Application != nil {
		return true
	}

	return false
}

// SetApplication gets a reference to the given string and assigns it to the Application field.
func (o *KalturaBaseEntry) SetApplication(v string) {
	o.Application = &v
}

// GetApplicationVersion returns the ApplicationVersion field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetApplicationVersion() string {
	if o == nil || o.ApplicationVersion == nil {
		var ret string
		return ret
	}
	return *o.ApplicationVersion
}

// GetApplicationVersionOk returns a tuple with the ApplicationVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetApplicationVersionOk() (*string, bool) {
	if o == nil || o.ApplicationVersion == nil {
		return nil, false
	}
	return o.ApplicationVersion, true
}

// HasApplicationVersion returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasApplicationVersion() bool {
	if o != nil && o.ApplicationVersion != nil {
		return true
	}

	return false
}

// SetApplicationVersion gets a reference to the given string and assigns it to the ApplicationVersion field.
func (o *KalturaBaseEntry) SetApplicationVersion(v string) {
	o.ApplicationVersion = &v
}

// GetBlockAutoTranscript returns the BlockAutoTranscript field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetBlockAutoTranscript() bool {
	if o == nil || o.BlockAutoTranscript == nil {
		var ret bool
		return ret
	}
	return *o.BlockAutoTranscript
}

// GetBlockAutoTranscriptOk returns a tuple with the BlockAutoTranscript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetBlockAutoTranscriptOk() (*bool, bool) {
	if o == nil || o.BlockAutoTranscript == nil {
		return nil, false
	}
	return o.BlockAutoTranscript, true
}

// HasBlockAutoTranscript returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasBlockAutoTranscript() bool {
	if o != nil && o.BlockAutoTranscript != nil {
		return true
	}

	return false
}

// SetBlockAutoTranscript gets a reference to the given bool and assigns it to the BlockAutoTranscript field.
func (o *KalturaBaseEntry) SetBlockAutoTranscript(v bool) {
	o.BlockAutoTranscript = &v
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetCapabilities() string {
	if o == nil || o.Capabilities == nil {
		var ret string
		return ret
	}
	return *o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetCapabilitiesOk() (*string, bool) {
	if o == nil || o.Capabilities == nil {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasCapabilities() bool {
	if o != nil && o.Capabilities != nil {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given string and assigns it to the Capabilities field.
func (o *KalturaBaseEntry) SetCapabilities(v string) {
	o.Capabilities = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetCategories() string {
	if o == nil || o.Categories == nil {
		var ret string
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetCategoriesOk() (*string, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given string and assigns it to the Categories field.
func (o *KalturaBaseEntry) SetCategories(v string) {
	o.Categories = &v
}

// GetCategoriesIds returns the CategoriesIds field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetCategoriesIds() string {
	if o == nil || o.CategoriesIds == nil {
		var ret string
		return ret
	}
	return *o.CategoriesIds
}

// GetCategoriesIdsOk returns a tuple with the CategoriesIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetCategoriesIdsOk() (*string, bool) {
	if o == nil || o.CategoriesIds == nil {
		return nil, false
	}
	return o.CategoriesIds, true
}

// HasCategoriesIds returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasCategoriesIds() bool {
	if o != nil && o.CategoriesIds != nil {
		return true
	}

	return false
}

// SetCategoriesIds gets a reference to the given string and assigns it to the CategoriesIds field.
func (o *KalturaBaseEntry) SetCategoriesIds(v string) {
	o.CategoriesIds = &v
}

// GetConversionProfileId returns the ConversionProfileId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetConversionProfileId() int32 {
	if o == nil || o.ConversionProfileId == nil {
		var ret int32
		return ret
	}
	return *o.ConversionProfileId
}

// GetConversionProfileIdOk returns a tuple with the ConversionProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetConversionProfileIdOk() (*int32, bool) {
	if o == nil || o.ConversionProfileId == nil {
		return nil, false
	}
	return o.ConversionProfileId, true
}

// HasConversionProfileId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasConversionProfileId() bool {
	if o != nil && o.ConversionProfileId != nil {
		return true
	}

	return false
}

// SetConversionProfileId gets a reference to the given int32 and assigns it to the ConversionProfileId field.
func (o *KalturaBaseEntry) SetConversionProfileId(v int32) {
	o.ConversionProfileId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaBaseEntry) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetCreatorId returns the CreatorId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetCreatorId() string {
	if o == nil || o.CreatorId == nil {
		var ret string
		return ret
	}
	return *o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetCreatorIdOk() (*string, bool) {
	if o == nil || o.CreatorId == nil {
		return nil, false
	}
	return o.CreatorId, true
}

// HasCreatorId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasCreatorId() bool {
	if o != nil && o.CreatorId != nil {
		return true
	}

	return false
}

// SetCreatorId gets a reference to the given string and assigns it to the CreatorId field.
func (o *KalturaBaseEntry) SetCreatorId(v string) {
	o.CreatorId = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KalturaBaseEntry) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayInSearch returns the DisplayInSearch field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetDisplayInSearch() int32 {
	if o == nil || o.DisplayInSearch == nil {
		var ret int32
		return ret
	}
	return *o.DisplayInSearch
}

// GetDisplayInSearchOk returns a tuple with the DisplayInSearch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetDisplayInSearchOk() (*int32, bool) {
	if o == nil || o.DisplayInSearch == nil {
		return nil, false
	}
	return o.DisplayInSearch, true
}

// HasDisplayInSearch returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasDisplayInSearch() bool {
	if o != nil && o.DisplayInSearch != nil {
		return true
	}

	return false
}

// SetDisplayInSearch gets a reference to the given int32 and assigns it to the DisplayInSearch field.
func (o *KalturaBaseEntry) SetDisplayInSearch(v int32) {
	o.DisplayInSearch = &v
}

// GetDownloadUrl returns the DownloadUrl field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetDownloadUrl() string {
	if o == nil || o.DownloadUrl == nil {
		var ret string
		return ret
	}
	return *o.DownloadUrl
}

// GetDownloadUrlOk returns a tuple with the DownloadUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetDownloadUrlOk() (*string, bool) {
	if o == nil || o.DownloadUrl == nil {
		return nil, false
	}
	return o.DownloadUrl, true
}

// HasDownloadUrl returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasDownloadUrl() bool {
	if o != nil && o.DownloadUrl != nil {
		return true
	}

	return false
}

// SetDownloadUrl gets a reference to the given string and assigns it to the DownloadUrl field.
func (o *KalturaBaseEntry) SetDownloadUrl(v string) {
	o.DownloadUrl = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetEndDate() int32 {
	if o == nil || o.EndDate == nil {
		var ret int32
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetEndDateOk() (*int32, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given int32 and assigns it to the EndDate field.
func (o *KalturaBaseEntry) SetEndDate(v int32) {
	o.EndDate = &v
}

// GetEntitledUsersEdit returns the EntitledUsersEdit field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetEntitledUsersEdit() string {
	if o == nil || o.EntitledUsersEdit == nil {
		var ret string
		return ret
	}
	return *o.EntitledUsersEdit
}

// GetEntitledUsersEditOk returns a tuple with the EntitledUsersEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetEntitledUsersEditOk() (*string, bool) {
	if o == nil || o.EntitledUsersEdit == nil {
		return nil, false
	}
	return o.EntitledUsersEdit, true
}

// HasEntitledUsersEdit returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasEntitledUsersEdit() bool {
	if o != nil && o.EntitledUsersEdit != nil {
		return true
	}

	return false
}

// SetEntitledUsersEdit gets a reference to the given string and assigns it to the EntitledUsersEdit field.
func (o *KalturaBaseEntry) SetEntitledUsersEdit(v string) {
	o.EntitledUsersEdit = &v
}

// GetEntitledUsersPublish returns the EntitledUsersPublish field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetEntitledUsersPublish() string {
	if o == nil || o.EntitledUsersPublish == nil {
		var ret string
		return ret
	}
	return *o.EntitledUsersPublish
}

// GetEntitledUsersPublishOk returns a tuple with the EntitledUsersPublish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetEntitledUsersPublishOk() (*string, bool) {
	if o == nil || o.EntitledUsersPublish == nil {
		return nil, false
	}
	return o.EntitledUsersPublish, true
}

// HasEntitledUsersPublish returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasEntitledUsersPublish() bool {
	if o != nil && o.EntitledUsersPublish != nil {
		return true
	}

	return false
}

// SetEntitledUsersPublish gets a reference to the given string and assigns it to the EntitledUsersPublish field.
func (o *KalturaBaseEntry) SetEntitledUsersPublish(v string) {
	o.EntitledUsersPublish = &v
}

// GetEntitledUsersView returns the EntitledUsersView field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetEntitledUsersView() string {
	if o == nil || o.EntitledUsersView == nil {
		var ret string
		return ret
	}
	return *o.EntitledUsersView
}

// GetEntitledUsersViewOk returns a tuple with the EntitledUsersView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetEntitledUsersViewOk() (*string, bool) {
	if o == nil || o.EntitledUsersView == nil {
		return nil, false
	}
	return o.EntitledUsersView, true
}

// HasEntitledUsersView returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasEntitledUsersView() bool {
	if o != nil && o.EntitledUsersView != nil {
		return true
	}

	return false
}

// SetEntitledUsersView gets a reference to the given string and assigns it to the EntitledUsersView field.
func (o *KalturaBaseEntry) SetEntitledUsersView(v string) {
	o.EntitledUsersView = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetGroupId() int32 {
	if o == nil || o.GroupId == nil {
		var ret int32
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetGroupIdOk() (*int32, bool) {
	if o == nil || o.GroupId == nil {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasGroupId() bool {
	if o != nil && o.GroupId != nil {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given int32 and assigns it to the GroupId field.
func (o *KalturaBaseEntry) SetGroupId(v int32) {
	o.GroupId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KalturaBaseEntry) SetId(v string) {
	o.Id = &v
}

// GetLicenseType returns the LicenseType field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetLicenseType() int32 {
	if o == nil || o.LicenseType == nil {
		var ret int32
		return ret
	}
	return *o.LicenseType
}

// GetLicenseTypeOk returns a tuple with the LicenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetLicenseTypeOk() (*int32, bool) {
	if o == nil || o.LicenseType == nil {
		return nil, false
	}
	return o.LicenseType, true
}

// HasLicenseType returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasLicenseType() bool {
	if o != nil && o.LicenseType != nil {
		return true
	}

	return false
}

// SetLicenseType gets a reference to the given int32 and assigns it to the LicenseType field.
func (o *KalturaBaseEntry) SetLicenseType(v int32) {
	o.LicenseType = &v
}

// GetModerationCount returns the ModerationCount field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetModerationCount() int32 {
	if o == nil || o.ModerationCount == nil {
		var ret int32
		return ret
	}
	return *o.ModerationCount
}

// GetModerationCountOk returns a tuple with the ModerationCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetModerationCountOk() (*int32, bool) {
	if o == nil || o.ModerationCount == nil {
		return nil, false
	}
	return o.ModerationCount, true
}

// HasModerationCount returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasModerationCount() bool {
	if o != nil && o.ModerationCount != nil {
		return true
	}

	return false
}

// SetModerationCount gets a reference to the given int32 and assigns it to the ModerationCount field.
func (o *KalturaBaseEntry) SetModerationCount(v int32) {
	o.ModerationCount = &v
}

// GetModerationStatus returns the ModerationStatus field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetModerationStatus() int32 {
	if o == nil || o.ModerationStatus == nil {
		var ret int32
		return ret
	}
	return *o.ModerationStatus
}

// GetModerationStatusOk returns a tuple with the ModerationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetModerationStatusOk() (*int32, bool) {
	if o == nil || o.ModerationStatus == nil {
		return nil, false
	}
	return o.ModerationStatus, true
}

// HasModerationStatus returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasModerationStatus() bool {
	if o != nil && o.ModerationStatus != nil {
		return true
	}

	return false
}

// SetModerationStatus gets a reference to the given int32 and assigns it to the ModerationStatus field.
func (o *KalturaBaseEntry) SetModerationStatus(v int32) {
	o.ModerationStatus = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KalturaBaseEntry) SetName(v string) {
	o.Name = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaBaseEntry) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetOperationAttributes returns the OperationAttributes field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetOperationAttributes() []KalturaOperationAttributes {
	if o == nil || o.OperationAttributes == nil {
		var ret []KalturaOperationAttributes
		return ret
	}
	return o.OperationAttributes
}

// GetOperationAttributesOk returns a tuple with the OperationAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetOperationAttributesOk() ([]KalturaOperationAttributes, bool) {
	if o == nil || o.OperationAttributes == nil {
		return nil, false
	}
	return o.OperationAttributes, true
}

// HasOperationAttributes returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasOperationAttributes() bool {
	if o != nil && o.OperationAttributes != nil {
		return true
	}

	return false
}

// SetOperationAttributes gets a reference to the given []KalturaOperationAttributes and assigns it to the OperationAttributes field.
func (o *KalturaBaseEntry) SetOperationAttributes(v []KalturaOperationAttributes) {
	o.OperationAttributes = v
}

// GetParentEntryId returns the ParentEntryId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetParentEntryId() string {
	if o == nil || o.ParentEntryId == nil {
		var ret string
		return ret
	}
	return *o.ParentEntryId
}

// GetParentEntryIdOk returns a tuple with the ParentEntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetParentEntryIdOk() (*string, bool) {
	if o == nil || o.ParentEntryId == nil {
		return nil, false
	}
	return o.ParentEntryId, true
}

// HasParentEntryId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasParentEntryId() bool {
	if o != nil && o.ParentEntryId != nil {
		return true
	}

	return false
}

// SetParentEntryId gets a reference to the given string and assigns it to the ParentEntryId field.
func (o *KalturaBaseEntry) SetParentEntryId(v string) {
	o.ParentEntryId = &v
}

// GetPartnerData returns the PartnerData field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetPartnerData() string {
	if o == nil || o.PartnerData == nil {
		var ret string
		return ret
	}
	return *o.PartnerData
}

// GetPartnerDataOk returns a tuple with the PartnerData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetPartnerDataOk() (*string, bool) {
	if o == nil || o.PartnerData == nil {
		return nil, false
	}
	return o.PartnerData, true
}

// HasPartnerData returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasPartnerData() bool {
	if o != nil && o.PartnerData != nil {
		return true
	}

	return false
}

// SetPartnerData gets a reference to the given string and assigns it to the PartnerData field.
func (o *KalturaBaseEntry) SetPartnerData(v string) {
	o.PartnerData = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaBaseEntry) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetPartnerSortValue returns the PartnerSortValue field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetPartnerSortValue() int32 {
	if o == nil || o.PartnerSortValue == nil {
		var ret int32
		return ret
	}
	return *o.PartnerSortValue
}

// GetPartnerSortValueOk returns a tuple with the PartnerSortValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetPartnerSortValueOk() (*int32, bool) {
	if o == nil || o.PartnerSortValue == nil {
		return nil, false
	}
	return o.PartnerSortValue, true
}

// HasPartnerSortValue returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasPartnerSortValue() bool {
	if o != nil && o.PartnerSortValue != nil {
		return true
	}

	return false
}

// SetPartnerSortValue gets a reference to the given int32 and assigns it to the PartnerSortValue field.
func (o *KalturaBaseEntry) SetPartnerSortValue(v int32) {
	o.PartnerSortValue = &v
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetRank() float32 {
	if o == nil || o.Rank == nil {
		var ret float32
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetRankOk() (*float32, bool) {
	if o == nil || o.Rank == nil {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasRank() bool {
	if o != nil && o.Rank != nil {
		return true
	}

	return false
}

// SetRank gets a reference to the given float32 and assigns it to the Rank field.
func (o *KalturaBaseEntry) SetRank(v float32) {
	o.Rank = &v
}

// GetRedirectEntryId returns the RedirectEntryId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetRedirectEntryId() string {
	if o == nil || o.RedirectEntryId == nil {
		var ret string
		return ret
	}
	return *o.RedirectEntryId
}

// GetRedirectEntryIdOk returns a tuple with the RedirectEntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetRedirectEntryIdOk() (*string, bool) {
	if o == nil || o.RedirectEntryId == nil {
		return nil, false
	}
	return o.RedirectEntryId, true
}

// HasRedirectEntryId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasRedirectEntryId() bool {
	if o != nil && o.RedirectEntryId != nil {
		return true
	}

	return false
}

// SetRedirectEntryId gets a reference to the given string and assigns it to the RedirectEntryId field.
func (o *KalturaBaseEntry) SetRedirectEntryId(v string) {
	o.RedirectEntryId = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetReferenceId() string {
	if o == nil || o.ReferenceId == nil {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetReferenceIdOk() (*string, bool) {
	if o == nil || o.ReferenceId == nil {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasReferenceId() bool {
	if o != nil && o.ReferenceId != nil {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *KalturaBaseEntry) SetReferenceId(v string) {
	o.ReferenceId = &v
}

// GetReplacedEntryId returns the ReplacedEntryId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetReplacedEntryId() string {
	if o == nil || o.ReplacedEntryId == nil {
		var ret string
		return ret
	}
	return *o.ReplacedEntryId
}

// GetReplacedEntryIdOk returns a tuple with the ReplacedEntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetReplacedEntryIdOk() (*string, bool) {
	if o == nil || o.ReplacedEntryId == nil {
		return nil, false
	}
	return o.ReplacedEntryId, true
}

// HasReplacedEntryId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasReplacedEntryId() bool {
	if o != nil && o.ReplacedEntryId != nil {
		return true
	}

	return false
}

// SetReplacedEntryId gets a reference to the given string and assigns it to the ReplacedEntryId field.
func (o *KalturaBaseEntry) SetReplacedEntryId(v string) {
	o.ReplacedEntryId = &v
}

// GetReplacementStatus returns the ReplacementStatus field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetReplacementStatus() string {
	if o == nil || o.ReplacementStatus == nil {
		var ret string
		return ret
	}
	return *o.ReplacementStatus
}

// GetReplacementStatusOk returns a tuple with the ReplacementStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetReplacementStatusOk() (*string, bool) {
	if o == nil || o.ReplacementStatus == nil {
		return nil, false
	}
	return o.ReplacementStatus, true
}

// HasReplacementStatus returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasReplacementStatus() bool {
	if o != nil && o.ReplacementStatus != nil {
		return true
	}

	return false
}

// SetReplacementStatus gets a reference to the given string and assigns it to the ReplacementStatus field.
func (o *KalturaBaseEntry) SetReplacementStatus(v string) {
	o.ReplacementStatus = &v
}

// GetReplacingEntryId returns the ReplacingEntryId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetReplacingEntryId() string {
	if o == nil || o.ReplacingEntryId == nil {
		var ret string
		return ret
	}
	return *o.ReplacingEntryId
}

// GetReplacingEntryIdOk returns a tuple with the ReplacingEntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetReplacingEntryIdOk() (*string, bool) {
	if o == nil || o.ReplacingEntryId == nil {
		return nil, false
	}
	return o.ReplacingEntryId, true
}

// HasReplacingEntryId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasReplacingEntryId() bool {
	if o != nil && o.ReplacingEntryId != nil {
		return true
	}

	return false
}

// SetReplacingEntryId gets a reference to the given string and assigns it to the ReplacingEntryId field.
func (o *KalturaBaseEntry) SetReplacingEntryId(v string) {
	o.ReplacingEntryId = &v
}

// GetRootEntryId returns the RootEntryId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetRootEntryId() string {
	if o == nil || o.RootEntryId == nil {
		var ret string
		return ret
	}
	return *o.RootEntryId
}

// GetRootEntryIdOk returns a tuple with the RootEntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetRootEntryIdOk() (*string, bool) {
	if o == nil || o.RootEntryId == nil {
		return nil, false
	}
	return o.RootEntryId, true
}

// HasRootEntryId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasRootEntryId() bool {
	if o != nil && o.RootEntryId != nil {
		return true
	}

	return false
}

// SetRootEntryId gets a reference to the given string and assigns it to the RootEntryId field.
func (o *KalturaBaseEntry) SetRootEntryId(v string) {
	o.RootEntryId = &v
}

// GetSearchText returns the SearchText field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetSearchText() string {
	if o == nil || o.SearchText == nil {
		var ret string
		return ret
	}
	return *o.SearchText
}

// GetSearchTextOk returns a tuple with the SearchText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetSearchTextOk() (*string, bool) {
	if o == nil || o.SearchText == nil {
		return nil, false
	}
	return o.SearchText, true
}

// HasSearchText returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasSearchText() bool {
	if o != nil && o.SearchText != nil {
		return true
	}

	return false
}

// SetSearchText gets a reference to the given string and assigns it to the SearchText field.
func (o *KalturaBaseEntry) SetSearchText(v string) {
	o.SearchText = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetStartDate() int32 {
	if o == nil || o.StartDate == nil {
		var ret int32
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetStartDateOk() (*int32, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given int32 and assigns it to the StartDate field.
func (o *KalturaBaseEntry) SetStartDate(v int32) {
	o.StartDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *KalturaBaseEntry) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *KalturaBaseEntry) SetTags(v string) {
	o.Tags = &v
}

// GetTemplateEntryId returns the TemplateEntryId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetTemplateEntryId() string {
	if o == nil || o.TemplateEntryId == nil {
		var ret string
		return ret
	}
	return *o.TemplateEntryId
}

// GetTemplateEntryIdOk returns a tuple with the TemplateEntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetTemplateEntryIdOk() (*string, bool) {
	if o == nil || o.TemplateEntryId == nil {
		return nil, false
	}
	return o.TemplateEntryId, true
}

// HasTemplateEntryId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasTemplateEntryId() bool {
	if o != nil && o.TemplateEntryId != nil {
		return true
	}

	return false
}

// SetTemplateEntryId gets a reference to the given string and assigns it to the TemplateEntryId field.
func (o *KalturaBaseEntry) SetTemplateEntryId(v string) {
	o.TemplateEntryId = &v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetThumbnailUrl() string {
	if o == nil || o.ThumbnailUrl == nil {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || o.ThumbnailUrl == nil {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasThumbnailUrl() bool {
	if o != nil && o.ThumbnailUrl != nil {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *KalturaBaseEntry) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

// GetTotalRank returns the TotalRank field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetTotalRank() int32 {
	if o == nil || o.TotalRank == nil {
		var ret int32
		return ret
	}
	return *o.TotalRank
}

// GetTotalRankOk returns a tuple with the TotalRank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetTotalRankOk() (*int32, bool) {
	if o == nil || o.TotalRank == nil {
		return nil, false
	}
	return o.TotalRank, true
}

// HasTotalRank returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasTotalRank() bool {
	if o != nil && o.TotalRank != nil {
		return true
	}

	return false
}

// SetTotalRank gets a reference to the given int32 and assigns it to the TotalRank field.
func (o *KalturaBaseEntry) SetTotalRank(v int32) {
	o.TotalRank = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *KalturaBaseEntry) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaBaseEntry) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *KalturaBaseEntry) SetUserId(v string) {
	o.UserId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *KalturaBaseEntry) SetVersion(v int32) {
	o.Version = &v
}

// GetVotes returns the Votes field value if set, zero value otherwise.
func (o *KalturaBaseEntry) GetVotes() int32 {
	if o == nil || o.Votes == nil {
		var ret int32
		return ret
	}
	return *o.Votes
}

// GetVotesOk returns a tuple with the Votes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseEntry) GetVotesOk() (*int32, bool) {
	if o == nil || o.Votes == nil {
		return nil, false
	}
	return o.Votes, true
}

// HasVotes returns a boolean if a field has been set.
func (o *KalturaBaseEntry) HasVotes() bool {
	if o != nil && o.Votes != nil {
		return true
	}

	return false
}

// SetVotes gets a reference to the given int32 and assigns it to the Votes field.
func (o *KalturaBaseEntry) SetVotes(v int32) {
	o.Votes = &v
}

func (o KalturaBaseEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessControlId != nil {
		toSerialize["accessControlId"] = o.AccessControlId
	}
	if o.AdminTags != nil {
		toSerialize["adminTags"] = o.AdminTags
	}
	if o.Application != nil {
		toSerialize["application"] = o.Application
	}
	if o.ApplicationVersion != nil {
		toSerialize["applicationVersion"] = o.ApplicationVersion
	}
	if o.BlockAutoTranscript != nil {
		toSerialize["blockAutoTranscript"] = o.BlockAutoTranscript
	}
	if o.Capabilities != nil {
		toSerialize["capabilities"] = o.Capabilities
	}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.CategoriesIds != nil {
		toSerialize["categoriesIds"] = o.CategoriesIds
	}
	if o.ConversionProfileId != nil {
		toSerialize["conversionProfileId"] = o.ConversionProfileId
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CreatorId != nil {
		toSerialize["creatorId"] = o.CreatorId
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DisplayInSearch != nil {
		toSerialize["displayInSearch"] = o.DisplayInSearch
	}
	if o.DownloadUrl != nil {
		toSerialize["downloadUrl"] = o.DownloadUrl
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.EntitledUsersEdit != nil {
		toSerialize["entitledUsersEdit"] = o.EntitledUsersEdit
	}
	if o.EntitledUsersPublish != nil {
		toSerialize["entitledUsersPublish"] = o.EntitledUsersPublish
	}
	if o.EntitledUsersView != nil {
		toSerialize["entitledUsersView"] = o.EntitledUsersView
	}
	if o.GroupId != nil {
		toSerialize["groupId"] = o.GroupId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LicenseType != nil {
		toSerialize["licenseType"] = o.LicenseType
	}
	if o.ModerationCount != nil {
		toSerialize["moderationCount"] = o.ModerationCount
	}
	if o.ModerationStatus != nil {
		toSerialize["moderationStatus"] = o.ModerationStatus
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.OperationAttributes != nil {
		toSerialize["operationAttributes"] = o.OperationAttributes
	}
	if o.ParentEntryId != nil {
		toSerialize["parentEntryId"] = o.ParentEntryId
	}
	if o.PartnerData != nil {
		toSerialize["partnerData"] = o.PartnerData
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.PartnerSortValue != nil {
		toSerialize["partnerSortValue"] = o.PartnerSortValue
	}
	if o.Rank != nil {
		toSerialize["rank"] = o.Rank
	}
	if o.RedirectEntryId != nil {
		toSerialize["redirectEntryId"] = o.RedirectEntryId
	}
	if o.ReferenceId != nil {
		toSerialize["referenceId"] = o.ReferenceId
	}
	if o.ReplacedEntryId != nil {
		toSerialize["replacedEntryId"] = o.ReplacedEntryId
	}
	if o.ReplacementStatus != nil {
		toSerialize["replacementStatus"] = o.ReplacementStatus
	}
	if o.ReplacingEntryId != nil {
		toSerialize["replacingEntryId"] = o.ReplacingEntryId
	}
	if o.RootEntryId != nil {
		toSerialize["rootEntryId"] = o.RootEntryId
	}
	if o.SearchText != nil {
		toSerialize["searchText"] = o.SearchText
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.TemplateEntryId != nil {
		toSerialize["templateEntryId"] = o.TemplateEntryId
	}
	if o.ThumbnailUrl != nil {
		toSerialize["thumbnailUrl"] = o.ThumbnailUrl
	}
	if o.TotalRank != nil {
		toSerialize["totalRank"] = o.TotalRank
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Votes != nil {
		toSerialize["votes"] = o.Votes
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBaseEntry struct {
	value *KalturaBaseEntry
	isSet bool
}

func (v NullableKalturaBaseEntry) Get() *KalturaBaseEntry {
	return v.value
}

func (v *NullableKalturaBaseEntry) Set(val *KalturaBaseEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBaseEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBaseEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBaseEntry(val *KalturaBaseEntry) *NullableKalturaBaseEntry {
	return &NullableKalturaBaseEntry{value: val, isSet: true}
}

func (v NullableKalturaBaseEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBaseEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


