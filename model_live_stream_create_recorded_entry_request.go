/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LiveStreamCreateRecordedEntryRequest struct for LiveStreamCreateRecordedEntryRequest
type LiveStreamCreateRecordedEntryRequest struct {
	EntryId string `json:"entryId"`
	LiveEntryStatus int32 `json:"liveEntryStatus"`
	MediaServerIndex string `json:"mediaServerIndex"`
}

// NewLiveStreamCreateRecordedEntryRequest instantiates a new LiveStreamCreateRecordedEntryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamCreateRecordedEntryRequest(entryId string, liveEntryStatus int32, mediaServerIndex string) *LiveStreamCreateRecordedEntryRequest {
	this := LiveStreamCreateRecordedEntryRequest{}
	this.EntryId = entryId
	this.LiveEntryStatus = liveEntryStatus
	this.MediaServerIndex = mediaServerIndex
	return &this
}

// NewLiveStreamCreateRecordedEntryRequestWithDefaults instantiates a new LiveStreamCreateRecordedEntryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamCreateRecordedEntryRequestWithDefaults() *LiveStreamCreateRecordedEntryRequest {
	this := LiveStreamCreateRecordedEntryRequest{}
	return &this
}

// GetEntryId returns the EntryId field value
func (o *LiveStreamCreateRecordedEntryRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *LiveStreamCreateRecordedEntryRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *LiveStreamCreateRecordedEntryRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetLiveEntryStatus returns the LiveEntryStatus field value
func (o *LiveStreamCreateRecordedEntryRequest) GetLiveEntryStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LiveEntryStatus
}

// GetLiveEntryStatusOk returns a tuple with the LiveEntryStatus field value
// and a boolean to check if the value has been set.
func (o *LiveStreamCreateRecordedEntryRequest) GetLiveEntryStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LiveEntryStatus, true
}

// SetLiveEntryStatus sets field value
func (o *LiveStreamCreateRecordedEntryRequest) SetLiveEntryStatus(v int32) {
	o.LiveEntryStatus = v
}

// GetMediaServerIndex returns the MediaServerIndex field value
func (o *LiveStreamCreateRecordedEntryRequest) GetMediaServerIndex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaServerIndex
}

// GetMediaServerIndexOk returns a tuple with the MediaServerIndex field value
// and a boolean to check if the value has been set.
func (o *LiveStreamCreateRecordedEntryRequest) GetMediaServerIndexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaServerIndex, true
}

// SetMediaServerIndex sets field value
func (o *LiveStreamCreateRecordedEntryRequest) SetMediaServerIndex(v string) {
	o.MediaServerIndex = v
}

func (o LiveStreamCreateRecordedEntryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if true {
		toSerialize["liveEntryStatus"] = o.LiveEntryStatus
	}
	if true {
		toSerialize["mediaServerIndex"] = o.MediaServerIndex
	}
	return json.Marshal(toSerialize)
}

type NullableLiveStreamCreateRecordedEntryRequest struct {
	value *LiveStreamCreateRecordedEntryRequest
	isSet bool
}

func (v NullableLiveStreamCreateRecordedEntryRequest) Get() *LiveStreamCreateRecordedEntryRequest {
	return v.value
}

func (v *NullableLiveStreamCreateRecordedEntryRequest) Set(val *LiveStreamCreateRecordedEntryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamCreateRecordedEntryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamCreateRecordedEntryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamCreateRecordedEntryRequest(val *LiveStreamCreateRecordedEntryRequest) *NullableLiveStreamCreateRecordedEntryRequest {
	return &NullableLiveStreamCreateRecordedEntryRequest{value: val, isSet: true}
}

func (v NullableLiveStreamCreateRecordedEntryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveStreamCreateRecordedEntryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


