/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GroupDeleteRequest struct for GroupDeleteRequest
type GroupDeleteRequest struct {
	GroupId string `json:"groupId"`
}

// NewGroupDeleteRequest instantiates a new GroupDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupDeleteRequest(groupId string) *GroupDeleteRequest {
	this := GroupDeleteRequest{}
	this.GroupId = groupId
	return &this
}

// NewGroupDeleteRequestWithDefaults instantiates a new GroupDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupDeleteRequestWithDefaults() *GroupDeleteRequest {
	this := GroupDeleteRequest{}
	return &this
}

// GetGroupId returns the GroupId field value
func (o *GroupDeleteRequest) GetGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *GroupDeleteRequest) GetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *GroupDeleteRequest) SetGroupId(v string) {
	o.GroupId = v
}

func (o GroupDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["groupId"] = o.GroupId
	}
	return json.Marshal(toSerialize)
}

type NullableGroupDeleteRequest struct {
	value *GroupDeleteRequest
	isSet bool
}

func (v NullableGroupDeleteRequest) Get() *GroupDeleteRequest {
	return v.value
}

func (v *NullableGroupDeleteRequest) Set(val *GroupDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupDeleteRequest(val *GroupDeleteRequest) *NullableGroupDeleteRequest {
	return &NullableGroupDeleteRequest{value: val, isSet: true}
}

func (v NullableGroupDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


