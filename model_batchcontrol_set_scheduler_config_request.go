/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchcontrolSetSchedulerConfigRequest struct for BatchcontrolSetSchedulerConfigRequest
type BatchcontrolSetSchedulerConfigRequest struct {
	AdminId int32 `json:"adminId"`
	Cause *string `json:"cause,omitempty"`
	ConfigParam string `json:"configParam"`
	ConfigParamPart *string `json:"configParamPart,omitempty"`
	ConfigValue string `json:"configValue"`
	SchedulerId int32 `json:"schedulerId"`
}

// NewBatchcontrolSetSchedulerConfigRequest instantiates a new BatchcontrolSetSchedulerConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchcontrolSetSchedulerConfigRequest(adminId int32, configParam string, configValue string, schedulerId int32) *BatchcontrolSetSchedulerConfigRequest {
	this := BatchcontrolSetSchedulerConfigRequest{}
	this.AdminId = adminId
	this.ConfigParam = configParam
	this.ConfigValue = configValue
	this.SchedulerId = schedulerId
	return &this
}

// NewBatchcontrolSetSchedulerConfigRequestWithDefaults instantiates a new BatchcontrolSetSchedulerConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchcontrolSetSchedulerConfigRequestWithDefaults() *BatchcontrolSetSchedulerConfigRequest {
	this := BatchcontrolSetSchedulerConfigRequest{}
	return &this
}

// GetAdminId returns the AdminId field value
func (o *BatchcontrolSetSchedulerConfigRequest) GetAdminId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AdminId
}

// GetAdminIdOk returns a tuple with the AdminId field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolSetSchedulerConfigRequest) GetAdminIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminId, true
}

// SetAdminId sets field value
func (o *BatchcontrolSetSchedulerConfigRequest) SetAdminId(v int32) {
	o.AdminId = v
}

// GetCause returns the Cause field value if set, zero value otherwise.
func (o *BatchcontrolSetSchedulerConfigRequest) GetCause() string {
	if o == nil || o.Cause == nil {
		var ret string
		return ret
	}
	return *o.Cause
}

// GetCauseOk returns a tuple with the Cause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchcontrolSetSchedulerConfigRequest) GetCauseOk() (*string, bool) {
	if o == nil || o.Cause == nil {
		return nil, false
	}
	return o.Cause, true
}

// HasCause returns a boolean if a field has been set.
func (o *BatchcontrolSetSchedulerConfigRequest) HasCause() bool {
	if o != nil && o.Cause != nil {
		return true
	}

	return false
}

// SetCause gets a reference to the given string and assigns it to the Cause field.
func (o *BatchcontrolSetSchedulerConfigRequest) SetCause(v string) {
	o.Cause = &v
}

// GetConfigParam returns the ConfigParam field value
func (o *BatchcontrolSetSchedulerConfigRequest) GetConfigParam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigParam
}

// GetConfigParamOk returns a tuple with the ConfigParam field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolSetSchedulerConfigRequest) GetConfigParamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfigParam, true
}

// SetConfigParam sets field value
func (o *BatchcontrolSetSchedulerConfigRequest) SetConfigParam(v string) {
	o.ConfigParam = v
}

// GetConfigParamPart returns the ConfigParamPart field value if set, zero value otherwise.
func (o *BatchcontrolSetSchedulerConfigRequest) GetConfigParamPart() string {
	if o == nil || o.ConfigParamPart == nil {
		var ret string
		return ret
	}
	return *o.ConfigParamPart
}

// GetConfigParamPartOk returns a tuple with the ConfigParamPart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchcontrolSetSchedulerConfigRequest) GetConfigParamPartOk() (*string, bool) {
	if o == nil || o.ConfigParamPart == nil {
		return nil, false
	}
	return o.ConfigParamPart, true
}

// HasConfigParamPart returns a boolean if a field has been set.
func (o *BatchcontrolSetSchedulerConfigRequest) HasConfigParamPart() bool {
	if o != nil && o.ConfigParamPart != nil {
		return true
	}

	return false
}

// SetConfigParamPart gets a reference to the given string and assigns it to the ConfigParamPart field.
func (o *BatchcontrolSetSchedulerConfigRequest) SetConfigParamPart(v string) {
	o.ConfigParamPart = &v
}

// GetConfigValue returns the ConfigValue field value
func (o *BatchcontrolSetSchedulerConfigRequest) GetConfigValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigValue
}

// GetConfigValueOk returns a tuple with the ConfigValue field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolSetSchedulerConfigRequest) GetConfigValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfigValue, true
}

// SetConfigValue sets field value
func (o *BatchcontrolSetSchedulerConfigRequest) SetConfigValue(v string) {
	o.ConfigValue = v
}

// GetSchedulerId returns the SchedulerId field value
func (o *BatchcontrolSetSchedulerConfigRequest) GetSchedulerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SchedulerId
}

// GetSchedulerIdOk returns a tuple with the SchedulerId field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolSetSchedulerConfigRequest) GetSchedulerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchedulerId, true
}

// SetSchedulerId sets field value
func (o *BatchcontrolSetSchedulerConfigRequest) SetSchedulerId(v int32) {
	o.SchedulerId = v
}

func (o BatchcontrolSetSchedulerConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["adminId"] = o.AdminId
	}
	if o.Cause != nil {
		toSerialize["cause"] = o.Cause
	}
	if true {
		toSerialize["configParam"] = o.ConfigParam
	}
	if o.ConfigParamPart != nil {
		toSerialize["configParamPart"] = o.ConfigParamPart
	}
	if true {
		toSerialize["configValue"] = o.ConfigValue
	}
	if true {
		toSerialize["schedulerId"] = o.SchedulerId
	}
	return json.Marshal(toSerialize)
}

type NullableBatchcontrolSetSchedulerConfigRequest struct {
	value *BatchcontrolSetSchedulerConfigRequest
	isSet bool
}

func (v NullableBatchcontrolSetSchedulerConfigRequest) Get() *BatchcontrolSetSchedulerConfigRequest {
	return v.value
}

func (v *NullableBatchcontrolSetSchedulerConfigRequest) Set(val *BatchcontrolSetSchedulerConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchcontrolSetSchedulerConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchcontrolSetSchedulerConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchcontrolSetSchedulerConfigRequest(val *BatchcontrolSetSchedulerConfigRequest) *NullableBatchcontrolSetSchedulerConfigRequest {
	return &NullableBatchcontrolSetSchedulerConfigRequest{value: val, isSet: true}
}

func (v NullableBatchcontrolSetSchedulerConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchcontrolSetSchedulerConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


