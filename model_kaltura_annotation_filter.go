/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaAnnotationFilter struct for KalturaAnnotationFilter
type KalturaAnnotationFilter struct {
	KalturaAnnotationBaseFilter
}

// NewKalturaAnnotationFilter instantiates a new KalturaAnnotationFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaAnnotationFilter() *KalturaAnnotationFilter {
	this := KalturaAnnotationFilter{}
	return &this
}

// NewKalturaAnnotationFilterWithDefaults instantiates a new KalturaAnnotationFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaAnnotationFilterWithDefaults() *KalturaAnnotationFilter {
	this := KalturaAnnotationFilter{}
	return &this
}

func (o KalturaAnnotationFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaAnnotationBaseFilter, errKalturaAnnotationBaseFilter := json.Marshal(o.KalturaAnnotationBaseFilter)
	if errKalturaAnnotationBaseFilter != nil {
		return []byte{}, errKalturaAnnotationBaseFilter
	}
	errKalturaAnnotationBaseFilter = json.Unmarshal([]byte(serializedKalturaAnnotationBaseFilter), &toSerialize)
	if errKalturaAnnotationBaseFilter != nil {
		return []byte{}, errKalturaAnnotationBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaAnnotationFilter struct {
	value *KalturaAnnotationFilter
	isSet bool
}

func (v NullableKalturaAnnotationFilter) Get() *KalturaAnnotationFilter {
	return v.value
}

func (v *NullableKalturaAnnotationFilter) Set(val *KalturaAnnotationFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaAnnotationFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaAnnotationFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaAnnotationFilter(val *KalturaAnnotationFilter) *NullableKalturaAnnotationFilter {
	return &NullableKalturaAnnotationFilter{value: val, isSet: true}
}

func (v NullableKalturaAnnotationFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaAnnotationFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


