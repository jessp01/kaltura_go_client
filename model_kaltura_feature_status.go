/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaFeatureStatus struct for KalturaFeatureStatus
type KalturaFeatureStatus struct {
	// Enum Type: `KalturaFeatureStatusType`
	Type *int32 `json:"type,omitempty"`
	Value *int32 `json:"value,omitempty"`
}

// NewKalturaFeatureStatus instantiates a new KalturaFeatureStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaFeatureStatus() *KalturaFeatureStatus {
	this := KalturaFeatureStatus{}
	return &this
}

// NewKalturaFeatureStatusWithDefaults instantiates a new KalturaFeatureStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaFeatureStatusWithDefaults() *KalturaFeatureStatus {
	this := KalturaFeatureStatus{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaFeatureStatus) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFeatureStatus) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaFeatureStatus) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *KalturaFeatureStatus) SetType(v int32) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *KalturaFeatureStatus) GetValue() int32 {
	if o == nil || o.Value == nil {
		var ret int32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFeatureStatus) GetValueOk() (*int32, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *KalturaFeatureStatus) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given int32 and assigns it to the Value field.
func (o *KalturaFeatureStatus) SetValue(v int32) {
	o.Value = &v
}

func (o KalturaFeatureStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaFeatureStatus struct {
	value *KalturaFeatureStatus
	isSet bool
}

func (v NullableKalturaFeatureStatus) Get() *KalturaFeatureStatus {
	return v.value
}

func (v *NullableKalturaFeatureStatus) Set(val *KalturaFeatureStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaFeatureStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaFeatureStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaFeatureStatus(val *KalturaFeatureStatus) *NullableKalturaFeatureStatus {
	return &NullableKalturaFeatureStatus{value: val, isSet: true}
}

func (v NullableKalturaFeatureStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaFeatureStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


