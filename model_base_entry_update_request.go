/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BaseEntryUpdateRequest struct for BaseEntryUpdateRequest
type BaseEntryUpdateRequest struct {
	BaseEntry KalturaBaseEntry `json:"baseEntry"`
	EntryId string `json:"entryId"`
}

// NewBaseEntryUpdateRequest instantiates a new BaseEntryUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseEntryUpdateRequest(baseEntry KalturaBaseEntry, entryId string) *BaseEntryUpdateRequest {
	this := BaseEntryUpdateRequest{}
	this.BaseEntry = baseEntry
	this.EntryId = entryId
	return &this
}

// NewBaseEntryUpdateRequestWithDefaults instantiates a new BaseEntryUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseEntryUpdateRequestWithDefaults() *BaseEntryUpdateRequest {
	this := BaseEntryUpdateRequest{}
	return &this
}

// GetBaseEntry returns the BaseEntry field value
func (o *BaseEntryUpdateRequest) GetBaseEntry() KalturaBaseEntry {
	if o == nil {
		var ret KalturaBaseEntry
		return ret
	}

	return o.BaseEntry
}

// GetBaseEntryOk returns a tuple with the BaseEntry field value
// and a boolean to check if the value has been set.
func (o *BaseEntryUpdateRequest) GetBaseEntryOk() (*KalturaBaseEntry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseEntry, true
}

// SetBaseEntry sets field value
func (o *BaseEntryUpdateRequest) SetBaseEntry(v KalturaBaseEntry) {
	o.BaseEntry = v
}

// GetEntryId returns the EntryId field value
func (o *BaseEntryUpdateRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *BaseEntryUpdateRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *BaseEntryUpdateRequest) SetEntryId(v string) {
	o.EntryId = v
}

func (o BaseEntryUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["baseEntry"] = o.BaseEntry
	}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	return json.Marshal(toSerialize)
}

type NullableBaseEntryUpdateRequest struct {
	value *BaseEntryUpdateRequest
	isSet bool
}

func (v NullableBaseEntryUpdateRequest) Get() *BaseEntryUpdateRequest {
	return v.value
}

func (v *NullableBaseEntryUpdateRequest) Set(val *BaseEntryUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseEntryUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseEntryUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseEntryUpdateRequest(val *BaseEntryUpdateRequest) *NullableBaseEntryUpdateRequest {
	return &NullableBaseEntryUpdateRequest{value: val, isSet: true}
}

func (v NullableBaseEntryUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseEntryUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


