/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LiveStreamUpdateRequest struct for LiveStreamUpdateRequest
type LiveStreamUpdateRequest struct {
	EntryId string `json:"entryId"`
	LiveStreamEntry KalturaLiveStreamEntry `json:"liveStreamEntry"`
}

// NewLiveStreamUpdateRequest instantiates a new LiveStreamUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamUpdateRequest(entryId string, liveStreamEntry KalturaLiveStreamEntry) *LiveStreamUpdateRequest {
	this := LiveStreamUpdateRequest{}
	this.EntryId = entryId
	this.LiveStreamEntry = liveStreamEntry
	return &this
}

// NewLiveStreamUpdateRequestWithDefaults instantiates a new LiveStreamUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamUpdateRequestWithDefaults() *LiveStreamUpdateRequest {
	this := LiveStreamUpdateRequest{}
	return &this
}

// GetEntryId returns the EntryId field value
func (o *LiveStreamUpdateRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *LiveStreamUpdateRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *LiveStreamUpdateRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetLiveStreamEntry returns the LiveStreamEntry field value
func (o *LiveStreamUpdateRequest) GetLiveStreamEntry() KalturaLiveStreamEntry {
	if o == nil {
		var ret KalturaLiveStreamEntry
		return ret
	}

	return o.LiveStreamEntry
}

// GetLiveStreamEntryOk returns a tuple with the LiveStreamEntry field value
// and a boolean to check if the value has been set.
func (o *LiveStreamUpdateRequest) GetLiveStreamEntryOk() (*KalturaLiveStreamEntry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LiveStreamEntry, true
}

// SetLiveStreamEntry sets field value
func (o *LiveStreamUpdateRequest) SetLiveStreamEntry(v KalturaLiveStreamEntry) {
	o.LiveStreamEntry = v
}

func (o LiveStreamUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if true {
		toSerialize["liveStreamEntry"] = o.LiveStreamEntry
	}
	return json.Marshal(toSerialize)
}

type NullableLiveStreamUpdateRequest struct {
	value *LiveStreamUpdateRequest
	isSet bool
}

func (v NullableLiveStreamUpdateRequest) Get() *LiveStreamUpdateRequest {
	return v.value
}

func (v *NullableLiveStreamUpdateRequest) Set(val *LiveStreamUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamUpdateRequest(val *LiveStreamUpdateRequest) *NullableLiveStreamUpdateRequest {
	return &NullableLiveStreamUpdateRequest{value: val, isSet: true}
}

func (v NullableLiveStreamUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveStreamUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


