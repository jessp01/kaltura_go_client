/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaAuthInfo struct for KalturaAuthInfo
type KalturaAuthInfo struct {
	KalturaSessionInfo
}

// NewKalturaAuthInfo instantiates a new KalturaAuthInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaAuthInfo() *KalturaAuthInfo {
	this := KalturaAuthInfo{}
	return &this
}

// NewKalturaAuthInfoWithDefaults instantiates a new KalturaAuthInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaAuthInfoWithDefaults() *KalturaAuthInfo {
	this := KalturaAuthInfo{}
	return &this
}

func (o KalturaAuthInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaSessionInfo, errKalturaSessionInfo := json.Marshal(o.KalturaSessionInfo)
	if errKalturaSessionInfo != nil {
		return []byte{}, errKalturaSessionInfo
	}
	errKalturaSessionInfo = json.Unmarshal([]byte(serializedKalturaSessionInfo), &toSerialize)
	if errKalturaSessionInfo != nil {
		return []byte{}, errKalturaSessionInfo
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaAuthInfo struct {
	value *KalturaAuthInfo
	isSet bool
}

func (v NullableKalturaAuthInfo) Get() *KalturaAuthInfo {
	return v.value
}

func (v *NullableKalturaAuthInfo) Set(val *KalturaAuthInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaAuthInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaAuthInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaAuthInfo(val *KalturaAuthInfo) *NullableKalturaAuthInfo {
	return &NullableKalturaAuthInfo{value: val, isSet: true}
}

func (v NullableKalturaAuthInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaAuthInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


