/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ExternalMediaUpdateRequest struct for ExternalMediaUpdateRequest
type ExternalMediaUpdateRequest struct {
	Entry KalturaExternalMediaEntry `json:"entry"`
	Id string `json:"id"`
}

// NewExternalMediaUpdateRequest instantiates a new ExternalMediaUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalMediaUpdateRequest(entry KalturaExternalMediaEntry, id string) *ExternalMediaUpdateRequest {
	this := ExternalMediaUpdateRequest{}
	this.Entry = entry
	this.Id = id
	return &this
}

// NewExternalMediaUpdateRequestWithDefaults instantiates a new ExternalMediaUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalMediaUpdateRequestWithDefaults() *ExternalMediaUpdateRequest {
	this := ExternalMediaUpdateRequest{}
	return &this
}

// GetEntry returns the Entry field value
func (o *ExternalMediaUpdateRequest) GetEntry() KalturaExternalMediaEntry {
	if o == nil {
		var ret KalturaExternalMediaEntry
		return ret
	}

	return o.Entry
}

// GetEntryOk returns a tuple with the Entry field value
// and a boolean to check if the value has been set.
func (o *ExternalMediaUpdateRequest) GetEntryOk() (*KalturaExternalMediaEntry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entry, true
}

// SetEntry sets field value
func (o *ExternalMediaUpdateRequest) SetEntry(v KalturaExternalMediaEntry) {
	o.Entry = v
}

// GetId returns the Id field value
func (o *ExternalMediaUpdateRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExternalMediaUpdateRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExternalMediaUpdateRequest) SetId(v string) {
	o.Id = v
}

func (o ExternalMediaUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entry"] = o.Entry
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableExternalMediaUpdateRequest struct {
	value *ExternalMediaUpdateRequest
	isSet bool
}

func (v NullableExternalMediaUpdateRequest) Get() *ExternalMediaUpdateRequest {
	return v.value
}

func (v *NullableExternalMediaUpdateRequest) Set(val *ExternalMediaUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalMediaUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalMediaUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalMediaUpdateRequest(val *ExternalMediaUpdateRequest) *NullableExternalMediaUpdateRequest {
	return &NullableExternalMediaUpdateRequest{value: val, isSet: true}
}

func (v NullableExternalMediaUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalMediaUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


