/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaControlPanelCommand struct for KalturaControlPanelCommand
type KalturaControlPanelCommand struct {
	// The index of the batch process that the command refers to
	BatchIndex *int32 `json:"batchIndex,omitempty"`
	// The reason for the command
	Cause *string `json:"cause,omitempty"`
	// `readOnly`  Creation date as Unix timestamp (In seconds)
	CreatedAt *int32 `json:"createdAt,omitempty"`
	// Creator name
	CreatedBy *string `json:"createdBy,omitempty"`
	// Creator id
	CreatedById *int32 `json:"createdById,omitempty"`
	// Command description
	Description *string `json:"description,omitempty"`
	// Error description
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// `readOnly`  The id of the Category
	Id *int32 `json:"id,omitempty"`
	// The id of the scheduler that the command refers to
	SchedulerId *int32 `json:"schedulerId,omitempty"`
	// Enum Type: `KalturaControlPanelCommandStatus`  The command status
	Status *int32 `json:"status,omitempty"`
	// Enum Type: `KalturaControlPanelCommandTargetType`  The command target type - data center / scheduler / job / job type
	TargetType *int32 `json:"targetType,omitempty"`
	// Enum Type: `KalturaControlPanelCommandType`  The command type - stop / start / config
	Type *int32 `json:"type,omitempty"`
	// `readOnly`  Update date as Unix timestamp (In seconds)
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
	// Updater name
	UpdatedBy *string `json:"updatedBy,omitempty"`
	// The id of the scheduler worker as configured in the ini file
	WorkerConfiguredId *int32 `json:"workerConfiguredId,omitempty"`
	// The id of the scheduler worker that the command refers to
	WorkerId *int32 `json:"workerId,omitempty"`
	// The name of the scheduler worker that the command refers to
	WorkerName *int32 `json:"workerName,omitempty"`
}

// NewKalturaControlPanelCommand instantiates a new KalturaControlPanelCommand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaControlPanelCommand() *KalturaControlPanelCommand {
	this := KalturaControlPanelCommand{}
	return &this
}

// NewKalturaControlPanelCommandWithDefaults instantiates a new KalturaControlPanelCommand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaControlPanelCommandWithDefaults() *KalturaControlPanelCommand {
	this := KalturaControlPanelCommand{}
	return &this
}

// GetBatchIndex returns the BatchIndex field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetBatchIndex() int32 {
	if o == nil || o.BatchIndex == nil {
		var ret int32
		return ret
	}
	return *o.BatchIndex
}

// GetBatchIndexOk returns a tuple with the BatchIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetBatchIndexOk() (*int32, bool) {
	if o == nil || o.BatchIndex == nil {
		return nil, false
	}
	return o.BatchIndex, true
}

// HasBatchIndex returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasBatchIndex() bool {
	if o != nil && o.BatchIndex != nil {
		return true
	}

	return false
}

// SetBatchIndex gets a reference to the given int32 and assigns it to the BatchIndex field.
func (o *KalturaControlPanelCommand) SetBatchIndex(v int32) {
	o.BatchIndex = &v
}

// GetCause returns the Cause field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetCause() string {
	if o == nil || o.Cause == nil {
		var ret string
		return ret
	}
	return *o.Cause
}

// GetCauseOk returns a tuple with the Cause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetCauseOk() (*string, bool) {
	if o == nil || o.Cause == nil {
		return nil, false
	}
	return o.Cause, true
}

// HasCause returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasCause() bool {
	if o != nil && o.Cause != nil {
		return true
	}

	return false
}

// SetCause gets a reference to the given string and assigns it to the Cause field.
func (o *KalturaControlPanelCommand) SetCause(v string) {
	o.Cause = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaControlPanelCommand) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *KalturaControlPanelCommand) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedById returns the CreatedById field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetCreatedById() int32 {
	if o == nil || o.CreatedById == nil {
		var ret int32
		return ret
	}
	return *o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetCreatedByIdOk() (*int32, bool) {
	if o == nil || o.CreatedById == nil {
		return nil, false
	}
	return o.CreatedById, true
}

// HasCreatedById returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasCreatedById() bool {
	if o != nil && o.CreatedById != nil {
		return true
	}

	return false
}

// SetCreatedById gets a reference to the given int32 and assigns it to the CreatedById field.
func (o *KalturaControlPanelCommand) SetCreatedById(v int32) {
	o.CreatedById = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KalturaControlPanelCommand) SetDescription(v string) {
	o.Description = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetErrorDescription() string {
	if o == nil || o.ErrorDescription == nil {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || o.ErrorDescription == nil {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasErrorDescription() bool {
	if o != nil && o.ErrorDescription != nil {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *KalturaControlPanelCommand) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaControlPanelCommand) SetId(v int32) {
	o.Id = &v
}

// GetSchedulerId returns the SchedulerId field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetSchedulerId() int32 {
	if o == nil || o.SchedulerId == nil {
		var ret int32
		return ret
	}
	return *o.SchedulerId
}

// GetSchedulerIdOk returns a tuple with the SchedulerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetSchedulerIdOk() (*int32, bool) {
	if o == nil || o.SchedulerId == nil {
		return nil, false
	}
	return o.SchedulerId, true
}

// HasSchedulerId returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasSchedulerId() bool {
	if o != nil && o.SchedulerId != nil {
		return true
	}

	return false
}

// SetSchedulerId gets a reference to the given int32 and assigns it to the SchedulerId field.
func (o *KalturaControlPanelCommand) SetSchedulerId(v int32) {
	o.SchedulerId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KalturaControlPanelCommand) SetStatus(v int32) {
	o.Status = &v
}

// GetTargetType returns the TargetType field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetTargetType() int32 {
	if o == nil || o.TargetType == nil {
		var ret int32
		return ret
	}
	return *o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetTargetTypeOk() (*int32, bool) {
	if o == nil || o.TargetType == nil {
		return nil, false
	}
	return o.TargetType, true
}

// HasTargetType returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasTargetType() bool {
	if o != nil && o.TargetType != nil {
		return true
	}

	return false
}

// SetTargetType gets a reference to the given int32 and assigns it to the TargetType field.
func (o *KalturaControlPanelCommand) SetTargetType(v int32) {
	o.TargetType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *KalturaControlPanelCommand) SetType(v int32) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaControlPanelCommand) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetUpdatedBy() string {
	if o == nil || o.UpdatedBy == nil {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetUpdatedByOk() (*string, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *KalturaControlPanelCommand) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetWorkerConfiguredId returns the WorkerConfiguredId field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetWorkerConfiguredId() int32 {
	if o == nil || o.WorkerConfiguredId == nil {
		var ret int32
		return ret
	}
	return *o.WorkerConfiguredId
}

// GetWorkerConfiguredIdOk returns a tuple with the WorkerConfiguredId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetWorkerConfiguredIdOk() (*int32, bool) {
	if o == nil || o.WorkerConfiguredId == nil {
		return nil, false
	}
	return o.WorkerConfiguredId, true
}

// HasWorkerConfiguredId returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasWorkerConfiguredId() bool {
	if o != nil && o.WorkerConfiguredId != nil {
		return true
	}

	return false
}

// SetWorkerConfiguredId gets a reference to the given int32 and assigns it to the WorkerConfiguredId field.
func (o *KalturaControlPanelCommand) SetWorkerConfiguredId(v int32) {
	o.WorkerConfiguredId = &v
}

// GetWorkerId returns the WorkerId field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetWorkerId() int32 {
	if o == nil || o.WorkerId == nil {
		var ret int32
		return ret
	}
	return *o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetWorkerIdOk() (*int32, bool) {
	if o == nil || o.WorkerId == nil {
		return nil, false
	}
	return o.WorkerId, true
}

// HasWorkerId returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasWorkerId() bool {
	if o != nil && o.WorkerId != nil {
		return true
	}

	return false
}

// SetWorkerId gets a reference to the given int32 and assigns it to the WorkerId field.
func (o *KalturaControlPanelCommand) SetWorkerId(v int32) {
	o.WorkerId = &v
}

// GetWorkerName returns the WorkerName field value if set, zero value otherwise.
func (o *KalturaControlPanelCommand) GetWorkerName() int32 {
	if o == nil || o.WorkerName == nil {
		var ret int32
		return ret
	}
	return *o.WorkerName
}

// GetWorkerNameOk returns a tuple with the WorkerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaControlPanelCommand) GetWorkerNameOk() (*int32, bool) {
	if o == nil || o.WorkerName == nil {
		return nil, false
	}
	return o.WorkerName, true
}

// HasWorkerName returns a boolean if a field has been set.
func (o *KalturaControlPanelCommand) HasWorkerName() bool {
	if o != nil && o.WorkerName != nil {
		return true
	}

	return false
}

// SetWorkerName gets a reference to the given int32 and assigns it to the WorkerName field.
func (o *KalturaControlPanelCommand) SetWorkerName(v int32) {
	o.WorkerName = &v
}

func (o KalturaControlPanelCommand) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BatchIndex != nil {
		toSerialize["batchIndex"] = o.BatchIndex
	}
	if o.Cause != nil {
		toSerialize["cause"] = o.Cause
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedById != nil {
		toSerialize["createdById"] = o.CreatedById
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ErrorDescription != nil {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.SchedulerId != nil {
		toSerialize["schedulerId"] = o.SchedulerId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TargetType != nil {
		toSerialize["targetType"] = o.TargetType
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.UpdatedBy != nil {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if o.WorkerConfiguredId != nil {
		toSerialize["workerConfiguredId"] = o.WorkerConfiguredId
	}
	if o.WorkerId != nil {
		toSerialize["workerId"] = o.WorkerId
	}
	if o.WorkerName != nil {
		toSerialize["workerName"] = o.WorkerName
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaControlPanelCommand struct {
	value *KalturaControlPanelCommand
	isSet bool
}

func (v NullableKalturaControlPanelCommand) Get() *KalturaControlPanelCommand {
	return v.value
}

func (v *NullableKalturaControlPanelCommand) Set(val *KalturaControlPanelCommand) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaControlPanelCommand) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaControlPanelCommand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaControlPanelCommand(val *KalturaControlPanelCommand) *NullableKalturaControlPanelCommand {
	return &NullableKalturaControlPanelCommand{value: val, isSet: true}
}

func (v NullableKalturaControlPanelCommand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaControlPanelCommand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


