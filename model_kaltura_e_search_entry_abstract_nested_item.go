/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaESearchEntryAbstractNestedItem `abstract`
type KalturaESearchEntryAbstractNestedItem struct {
	KalturaESearchEntryNestedBaseItem
}

// NewKalturaESearchEntryAbstractNestedItem instantiates a new KalturaESearchEntryAbstractNestedItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaESearchEntryAbstractNestedItem() *KalturaESearchEntryAbstractNestedItem {
	this := KalturaESearchEntryAbstractNestedItem{}
	return &this
}

// NewKalturaESearchEntryAbstractNestedItemWithDefaults instantiates a new KalturaESearchEntryAbstractNestedItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaESearchEntryAbstractNestedItemWithDefaults() *KalturaESearchEntryAbstractNestedItem {
	this := KalturaESearchEntryAbstractNestedItem{}
	return &this
}

func (o KalturaESearchEntryAbstractNestedItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaESearchEntryNestedBaseItem, errKalturaESearchEntryNestedBaseItem := json.Marshal(o.KalturaESearchEntryNestedBaseItem)
	if errKalturaESearchEntryNestedBaseItem != nil {
		return []byte{}, errKalturaESearchEntryNestedBaseItem
	}
	errKalturaESearchEntryNestedBaseItem = json.Unmarshal([]byte(serializedKalturaESearchEntryNestedBaseItem), &toSerialize)
	if errKalturaESearchEntryNestedBaseItem != nil {
		return []byte{}, errKalturaESearchEntryNestedBaseItem
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaESearchEntryAbstractNestedItem struct {
	value *KalturaESearchEntryAbstractNestedItem
	isSet bool
}

func (v NullableKalturaESearchEntryAbstractNestedItem) Get() *KalturaESearchEntryAbstractNestedItem {
	return v.value
}

func (v *NullableKalturaESearchEntryAbstractNestedItem) Set(val *KalturaESearchEntryAbstractNestedItem) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaESearchEntryAbstractNestedItem) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaESearchEntryAbstractNestedItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaESearchEntryAbstractNestedItem(val *KalturaESearchEntryAbstractNestedItem) *NullableKalturaESearchEntryAbstractNestedItem {
	return &NullableKalturaESearchEntryAbstractNestedItem{value: val, isSet: true}
}

func (v NullableKalturaESearchEntryAbstractNestedItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaESearchEntryAbstractNestedItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


