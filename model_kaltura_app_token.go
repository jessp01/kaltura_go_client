/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaAppToken struct for KalturaAppToken
type KalturaAppToken struct {
	// `readOnly`  Creation time as Unix timestamp (In seconds)
	CreatedAt *int32 `json:"createdAt,omitempty"`
	Description *string `json:"description,omitempty"`
	// Expiry time of current token (unix timestamp in seconds)
	Expiry *int32 `json:"expiry,omitempty"`
	// Enum Type: `KalturaAppTokenHashType`
	HashType *string `json:"hashType,omitempty"`
	// `readOnly`  The id of the application token
	Id *string `json:"id,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// Expiry duration of KS (Kaltura Session) that created using the current token (in seconds)
	SessionDuration *int32 `json:"sessionDuration,omitempty"`
	// Comma separated privileges to be applied on KS (Kaltura Session) that created using the current token
	SessionPrivileges *string `json:"sessionPrivileges,omitempty"`
	// Enum Type: `KalturaSessionType`  Type of KS (Kaltura Session) that created using the current token
	SessionType *int32 `json:"sessionType,omitempty"`
	// User id of KS (Kaltura Session) that created using the current token
	SessionUserId *string `json:"sessionUserId,omitempty"`
	// `readOnly`  Enum Type: `KalturaAppTokenStatus`  Application token status
	Status *int32 `json:"status,omitempty"`
	// `readOnly`  The application token
	Token *string `json:"token,omitempty"`
	// `readOnly`  Update time as Unix timestamp (In seconds)
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
}

// NewKalturaAppToken instantiates a new KalturaAppToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaAppToken() *KalturaAppToken {
	this := KalturaAppToken{}
	return &this
}

// NewKalturaAppTokenWithDefaults instantiates a new KalturaAppToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaAppTokenWithDefaults() *KalturaAppToken {
	this := KalturaAppToken{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaAppToken) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaAppToken) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaAppToken) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KalturaAppToken) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KalturaAppToken) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KalturaAppToken) SetDescription(v string) {
	o.Description = &v
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *KalturaAppToken) GetExpiry() int32 {
	if o == nil || o.Expiry == nil {
		var ret int32
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetExpiryOk() (*int32, bool) {
	if o == nil || o.Expiry == nil {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *KalturaAppToken) HasExpiry() bool {
	if o != nil && o.Expiry != nil {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given int32 and assigns it to the Expiry field.
func (o *KalturaAppToken) SetExpiry(v int32) {
	o.Expiry = &v
}

// GetHashType returns the HashType field value if set, zero value otherwise.
func (o *KalturaAppToken) GetHashType() string {
	if o == nil || o.HashType == nil {
		var ret string
		return ret
	}
	return *o.HashType
}

// GetHashTypeOk returns a tuple with the HashType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetHashTypeOk() (*string, bool) {
	if o == nil || o.HashType == nil {
		return nil, false
	}
	return o.HashType, true
}

// HasHashType returns a boolean if a field has been set.
func (o *KalturaAppToken) HasHashType() bool {
	if o != nil && o.HashType != nil {
		return true
	}

	return false
}

// SetHashType gets a reference to the given string and assigns it to the HashType field.
func (o *KalturaAppToken) SetHashType(v string) {
	o.HashType = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaAppToken) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaAppToken) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KalturaAppToken) SetId(v string) {
	o.Id = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaAppToken) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaAppToken) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaAppToken) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetSessionDuration returns the SessionDuration field value if set, zero value otherwise.
func (o *KalturaAppToken) GetSessionDuration() int32 {
	if o == nil || o.SessionDuration == nil {
		var ret int32
		return ret
	}
	return *o.SessionDuration
}

// GetSessionDurationOk returns a tuple with the SessionDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetSessionDurationOk() (*int32, bool) {
	if o == nil || o.SessionDuration == nil {
		return nil, false
	}
	return o.SessionDuration, true
}

// HasSessionDuration returns a boolean if a field has been set.
func (o *KalturaAppToken) HasSessionDuration() bool {
	if o != nil && o.SessionDuration != nil {
		return true
	}

	return false
}

// SetSessionDuration gets a reference to the given int32 and assigns it to the SessionDuration field.
func (o *KalturaAppToken) SetSessionDuration(v int32) {
	o.SessionDuration = &v
}

// GetSessionPrivileges returns the SessionPrivileges field value if set, zero value otherwise.
func (o *KalturaAppToken) GetSessionPrivileges() string {
	if o == nil || o.SessionPrivileges == nil {
		var ret string
		return ret
	}
	return *o.SessionPrivileges
}

// GetSessionPrivilegesOk returns a tuple with the SessionPrivileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetSessionPrivilegesOk() (*string, bool) {
	if o == nil || o.SessionPrivileges == nil {
		return nil, false
	}
	return o.SessionPrivileges, true
}

// HasSessionPrivileges returns a boolean if a field has been set.
func (o *KalturaAppToken) HasSessionPrivileges() bool {
	if o != nil && o.SessionPrivileges != nil {
		return true
	}

	return false
}

// SetSessionPrivileges gets a reference to the given string and assigns it to the SessionPrivileges field.
func (o *KalturaAppToken) SetSessionPrivileges(v string) {
	o.SessionPrivileges = &v
}

// GetSessionType returns the SessionType field value if set, zero value otherwise.
func (o *KalturaAppToken) GetSessionType() int32 {
	if o == nil || o.SessionType == nil {
		var ret int32
		return ret
	}
	return *o.SessionType
}

// GetSessionTypeOk returns a tuple with the SessionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetSessionTypeOk() (*int32, bool) {
	if o == nil || o.SessionType == nil {
		return nil, false
	}
	return o.SessionType, true
}

// HasSessionType returns a boolean if a field has been set.
func (o *KalturaAppToken) HasSessionType() bool {
	if o != nil && o.SessionType != nil {
		return true
	}

	return false
}

// SetSessionType gets a reference to the given int32 and assigns it to the SessionType field.
func (o *KalturaAppToken) SetSessionType(v int32) {
	o.SessionType = &v
}

// GetSessionUserId returns the SessionUserId field value if set, zero value otherwise.
func (o *KalturaAppToken) GetSessionUserId() string {
	if o == nil || o.SessionUserId == nil {
		var ret string
		return ret
	}
	return *o.SessionUserId
}

// GetSessionUserIdOk returns a tuple with the SessionUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetSessionUserIdOk() (*string, bool) {
	if o == nil || o.SessionUserId == nil {
		return nil, false
	}
	return o.SessionUserId, true
}

// HasSessionUserId returns a boolean if a field has been set.
func (o *KalturaAppToken) HasSessionUserId() bool {
	if o != nil && o.SessionUserId != nil {
		return true
	}

	return false
}

// SetSessionUserId gets a reference to the given string and assigns it to the SessionUserId field.
func (o *KalturaAppToken) SetSessionUserId(v string) {
	o.SessionUserId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaAppToken) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaAppToken) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KalturaAppToken) SetStatus(v int32) {
	o.Status = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *KalturaAppToken) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *KalturaAppToken) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *KalturaAppToken) SetToken(v string) {
	o.Token = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaAppToken) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAppToken) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaAppToken) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaAppToken) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

func (o KalturaAppToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Expiry != nil {
		toSerialize["expiry"] = o.Expiry
	}
	if o.HashType != nil {
		toSerialize["hashType"] = o.HashType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.SessionDuration != nil {
		toSerialize["sessionDuration"] = o.SessionDuration
	}
	if o.SessionPrivileges != nil {
		toSerialize["sessionPrivileges"] = o.SessionPrivileges
	}
	if o.SessionType != nil {
		toSerialize["sessionType"] = o.SessionType
	}
	if o.SessionUserId != nil {
		toSerialize["sessionUserId"] = o.SessionUserId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaAppToken struct {
	value *KalturaAppToken
	isSet bool
}

func (v NullableKalturaAppToken) Get() *KalturaAppToken {
	return v.value
}

func (v *NullableKalturaAppToken) Set(val *KalturaAppToken) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaAppToken) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaAppToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaAppToken(val *KalturaAppToken) *NullableKalturaAppToken {
	return &NullableKalturaAppToken{value: val, isSet: true}
}

func (v NullableKalturaAppToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaAppToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


