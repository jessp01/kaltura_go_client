/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MediaRequestConversionRequest struct for MediaRequestConversionRequest
type MediaRequestConversionRequest struct {
	EntryId string `json:"entryId"`
	FileFormat string `json:"fileFormat"`
}

// NewMediaRequestConversionRequest instantiates a new MediaRequestConversionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaRequestConversionRequest(entryId string, fileFormat string) *MediaRequestConversionRequest {
	this := MediaRequestConversionRequest{}
	this.EntryId = entryId
	this.FileFormat = fileFormat
	return &this
}

// NewMediaRequestConversionRequestWithDefaults instantiates a new MediaRequestConversionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaRequestConversionRequestWithDefaults() *MediaRequestConversionRequest {
	this := MediaRequestConversionRequest{}
	return &this
}

// GetEntryId returns the EntryId field value
func (o *MediaRequestConversionRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *MediaRequestConversionRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *MediaRequestConversionRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetFileFormat returns the FileFormat field value
func (o *MediaRequestConversionRequest) GetFileFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileFormat
}

// GetFileFormatOk returns a tuple with the FileFormat field value
// and a boolean to check if the value has been set.
func (o *MediaRequestConversionRequest) GetFileFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileFormat, true
}

// SetFileFormat sets field value
func (o *MediaRequestConversionRequest) SetFileFormat(v string) {
	o.FileFormat = v
}

func (o MediaRequestConversionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if true {
		toSerialize["fileFormat"] = o.FileFormat
	}
	return json.Marshal(toSerialize)
}

type NullableMediaRequestConversionRequest struct {
	value *MediaRequestConversionRequest
	isSet bool
}

func (v NullableMediaRequestConversionRequest) Get() *MediaRequestConversionRequest {
	return v.value
}

func (v *NullableMediaRequestConversionRequest) Set(val *MediaRequestConversionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaRequestConversionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaRequestConversionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaRequestConversionRequest(val *MediaRequestConversionRequest) *NullableMediaRequestConversionRequest {
	return &NullableMediaRequestConversionRequest{value: val, isSet: true}
}

func (v NullableMediaRequestConversionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaRequestConversionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


