/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaAuditTrailChangeInfo struct for KalturaAuditTrailChangeInfo
type KalturaAuditTrailChangeInfo struct {
	KalturaAuditTrailInfo
}

// NewKalturaAuditTrailChangeInfo instantiates a new KalturaAuditTrailChangeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaAuditTrailChangeInfo() *KalturaAuditTrailChangeInfo {
	this := KalturaAuditTrailChangeInfo{}
	return &this
}

// NewKalturaAuditTrailChangeInfoWithDefaults instantiates a new KalturaAuditTrailChangeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaAuditTrailChangeInfoWithDefaults() *KalturaAuditTrailChangeInfo {
	this := KalturaAuditTrailChangeInfo{}
	return &this
}

func (o KalturaAuditTrailChangeInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaAuditTrailInfo, errKalturaAuditTrailInfo := json.Marshal(o.KalturaAuditTrailInfo)
	if errKalturaAuditTrailInfo != nil {
		return []byte{}, errKalturaAuditTrailInfo
	}
	errKalturaAuditTrailInfo = json.Unmarshal([]byte(serializedKalturaAuditTrailInfo), &toSerialize)
	if errKalturaAuditTrailInfo != nil {
		return []byte{}, errKalturaAuditTrailInfo
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaAuditTrailChangeInfo struct {
	value *KalturaAuditTrailChangeInfo
	isSet bool
}

func (v NullableKalturaAuditTrailChangeInfo) Get() *KalturaAuditTrailChangeInfo {
	return v.value
}

func (v *NullableKalturaAuditTrailChangeInfo) Set(val *KalturaAuditTrailChangeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaAuditTrailChangeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaAuditTrailChangeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaAuditTrailChangeInfo(val *KalturaAuditTrailChangeInfo) *NullableKalturaAuditTrailChangeInfo {
	return &NullableKalturaAuditTrailChangeInfo{value: val, isSet: true}
}

func (v NullableKalturaAuditTrailChangeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaAuditTrailChangeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


