/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaAnalyticsFilter struct for KalturaAnalyticsFilter
type KalturaAnalyticsFilter struct {
	// Comma separated dimensions list
	Dimensions *string `json:"dimensions,omitempty"`
	Filters []KalturaReportFilter `json:"filters,omitempty"`
	// Query start time (in local time) MM/dd/yyyy HH:mi
	FromTime *string `json:"from_time,omitempty"`
	// Comma separated metrics list
	Metrics *string `json:"metrics,omitempty"`
	// Query order by metric/dimension
	OrderBy *string `json:"orderBy,omitempty"`
	// Query end time (in local time) MM/dd/yyyy HH:mi
	ToTime *string `json:"to_time,omitempty"`
	// Timezone offset from UTC (in minutes)
	UtcOffset *float32 `json:"utcOffset,omitempty"`
}

// NewKalturaAnalyticsFilter instantiates a new KalturaAnalyticsFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaAnalyticsFilter() *KalturaAnalyticsFilter {
	this := KalturaAnalyticsFilter{}
	return &this
}

// NewKalturaAnalyticsFilterWithDefaults instantiates a new KalturaAnalyticsFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaAnalyticsFilterWithDefaults() *KalturaAnalyticsFilter {
	this := KalturaAnalyticsFilter{}
	return &this
}

// GetDimensions returns the Dimensions field value if set, zero value otherwise.
func (o *KalturaAnalyticsFilter) GetDimensions() string {
	if o == nil || o.Dimensions == nil {
		var ret string
		return ret
	}
	return *o.Dimensions
}

// GetDimensionsOk returns a tuple with the Dimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAnalyticsFilter) GetDimensionsOk() (*string, bool) {
	if o == nil || o.Dimensions == nil {
		return nil, false
	}
	return o.Dimensions, true
}

// HasDimensions returns a boolean if a field has been set.
func (o *KalturaAnalyticsFilter) HasDimensions() bool {
	if o != nil && o.Dimensions != nil {
		return true
	}

	return false
}

// SetDimensions gets a reference to the given string and assigns it to the Dimensions field.
func (o *KalturaAnalyticsFilter) SetDimensions(v string) {
	o.Dimensions = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *KalturaAnalyticsFilter) GetFilters() []KalturaReportFilter {
	if o == nil || o.Filters == nil {
		var ret []KalturaReportFilter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAnalyticsFilter) GetFiltersOk() ([]KalturaReportFilter, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *KalturaAnalyticsFilter) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []KalturaReportFilter and assigns it to the Filters field.
func (o *KalturaAnalyticsFilter) SetFilters(v []KalturaReportFilter) {
	o.Filters = v
}

// GetFromTime returns the FromTime field value if set, zero value otherwise.
func (o *KalturaAnalyticsFilter) GetFromTime() string {
	if o == nil || o.FromTime == nil {
		var ret string
		return ret
	}
	return *o.FromTime
}

// GetFromTimeOk returns a tuple with the FromTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAnalyticsFilter) GetFromTimeOk() (*string, bool) {
	if o == nil || o.FromTime == nil {
		return nil, false
	}
	return o.FromTime, true
}

// HasFromTime returns a boolean if a field has been set.
func (o *KalturaAnalyticsFilter) HasFromTime() bool {
	if o != nil && o.FromTime != nil {
		return true
	}

	return false
}

// SetFromTime gets a reference to the given string and assigns it to the FromTime field.
func (o *KalturaAnalyticsFilter) SetFromTime(v string) {
	o.FromTime = &v
}

// GetMetrics returns the Metrics field value if set, zero value otherwise.
func (o *KalturaAnalyticsFilter) GetMetrics() string {
	if o == nil || o.Metrics == nil {
		var ret string
		return ret
	}
	return *o.Metrics
}

// GetMetricsOk returns a tuple with the Metrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAnalyticsFilter) GetMetricsOk() (*string, bool) {
	if o == nil || o.Metrics == nil {
		return nil, false
	}
	return o.Metrics, true
}

// HasMetrics returns a boolean if a field has been set.
func (o *KalturaAnalyticsFilter) HasMetrics() bool {
	if o != nil && o.Metrics != nil {
		return true
	}

	return false
}

// SetMetrics gets a reference to the given string and assigns it to the Metrics field.
func (o *KalturaAnalyticsFilter) SetMetrics(v string) {
	o.Metrics = &v
}

// GetOrderBy returns the OrderBy field value if set, zero value otherwise.
func (o *KalturaAnalyticsFilter) GetOrderBy() string {
	if o == nil || o.OrderBy == nil {
		var ret string
		return ret
	}
	return *o.OrderBy
}

// GetOrderByOk returns a tuple with the OrderBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAnalyticsFilter) GetOrderByOk() (*string, bool) {
	if o == nil || o.OrderBy == nil {
		return nil, false
	}
	return o.OrderBy, true
}

// HasOrderBy returns a boolean if a field has been set.
func (o *KalturaAnalyticsFilter) HasOrderBy() bool {
	if o != nil && o.OrderBy != nil {
		return true
	}

	return false
}

// SetOrderBy gets a reference to the given string and assigns it to the OrderBy field.
func (o *KalturaAnalyticsFilter) SetOrderBy(v string) {
	o.OrderBy = &v
}

// GetToTime returns the ToTime field value if set, zero value otherwise.
func (o *KalturaAnalyticsFilter) GetToTime() string {
	if o == nil || o.ToTime == nil {
		var ret string
		return ret
	}
	return *o.ToTime
}

// GetToTimeOk returns a tuple with the ToTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAnalyticsFilter) GetToTimeOk() (*string, bool) {
	if o == nil || o.ToTime == nil {
		return nil, false
	}
	return o.ToTime, true
}

// HasToTime returns a boolean if a field has been set.
func (o *KalturaAnalyticsFilter) HasToTime() bool {
	if o != nil && o.ToTime != nil {
		return true
	}

	return false
}

// SetToTime gets a reference to the given string and assigns it to the ToTime field.
func (o *KalturaAnalyticsFilter) SetToTime(v string) {
	o.ToTime = &v
}

// GetUtcOffset returns the UtcOffset field value if set, zero value otherwise.
func (o *KalturaAnalyticsFilter) GetUtcOffset() float32 {
	if o == nil || o.UtcOffset == nil {
		var ret float32
		return ret
	}
	return *o.UtcOffset
}

// GetUtcOffsetOk returns a tuple with the UtcOffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAnalyticsFilter) GetUtcOffsetOk() (*float32, bool) {
	if o == nil || o.UtcOffset == nil {
		return nil, false
	}
	return o.UtcOffset, true
}

// HasUtcOffset returns a boolean if a field has been set.
func (o *KalturaAnalyticsFilter) HasUtcOffset() bool {
	if o != nil && o.UtcOffset != nil {
		return true
	}

	return false
}

// SetUtcOffset gets a reference to the given float32 and assigns it to the UtcOffset field.
func (o *KalturaAnalyticsFilter) SetUtcOffset(v float32) {
	o.UtcOffset = &v
}

func (o KalturaAnalyticsFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Dimensions != nil {
		toSerialize["dimensions"] = o.Dimensions
	}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	if o.FromTime != nil {
		toSerialize["from_time"] = o.FromTime
	}
	if o.Metrics != nil {
		toSerialize["metrics"] = o.Metrics
	}
	if o.OrderBy != nil {
		toSerialize["orderBy"] = o.OrderBy
	}
	if o.ToTime != nil {
		toSerialize["to_time"] = o.ToTime
	}
	if o.UtcOffset != nil {
		toSerialize["utcOffset"] = o.UtcOffset
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaAnalyticsFilter struct {
	value *KalturaAnalyticsFilter
	isSet bool
}

func (v NullableKalturaAnalyticsFilter) Get() *KalturaAnalyticsFilter {
	return v.value
}

func (v *NullableKalturaAnalyticsFilter) Set(val *KalturaAnalyticsFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaAnalyticsFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaAnalyticsFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaAnalyticsFilter(val *KalturaAnalyticsFilter) *NullableKalturaAnalyticsFilter {
	return &NullableKalturaAnalyticsFilter{value: val, isSet: true}
}

func (v NullableKalturaAnalyticsFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaAnalyticsFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


