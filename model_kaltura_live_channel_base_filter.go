/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLiveChannelBaseFilter `abstract`
type KalturaLiveChannelBaseFilter struct {
	KalturaLiveEntryFilter
}

// NewKalturaLiveChannelBaseFilter instantiates a new KalturaLiveChannelBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLiveChannelBaseFilter() *KalturaLiveChannelBaseFilter {
	this := KalturaLiveChannelBaseFilter{}
	return &this
}

// NewKalturaLiveChannelBaseFilterWithDefaults instantiates a new KalturaLiveChannelBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLiveChannelBaseFilterWithDefaults() *KalturaLiveChannelBaseFilter {
	this := KalturaLiveChannelBaseFilter{}
	return &this
}

func (o KalturaLiveChannelBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaLiveEntryFilter, errKalturaLiveEntryFilter := json.Marshal(o.KalturaLiveEntryFilter)
	if errKalturaLiveEntryFilter != nil {
		return []byte{}, errKalturaLiveEntryFilter
	}
	errKalturaLiveEntryFilter = json.Unmarshal([]byte(serializedKalturaLiveEntryFilter), &toSerialize)
	if errKalturaLiveEntryFilter != nil {
		return []byte{}, errKalturaLiveEntryFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLiveChannelBaseFilter struct {
	value *KalturaLiveChannelBaseFilter
	isSet bool
}

func (v NullableKalturaLiveChannelBaseFilter) Get() *KalturaLiveChannelBaseFilter {
	return v.value
}

func (v *NullableKalturaLiveChannelBaseFilter) Set(val *KalturaLiveChannelBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLiveChannelBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLiveChannelBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLiveChannelBaseFilter(val *KalturaLiveChannelBaseFilter) *NullableKalturaLiveChannelBaseFilter {
	return &NullableKalturaLiveChannelBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaLiveChannelBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLiveChannelBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


