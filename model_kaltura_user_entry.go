/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaUserEntry `abstract`
type KalturaUserEntry struct {
	// `readOnly`
	CreatedAt *int32 `json:"createdAt,omitempty"`
	// `insertOnly`
	EntryId *string `json:"entryId,omitempty"`
	// Enum Type: `KalturaUserEntryExtendedStatus`
	ExtendedStatus *string `json:"extendedStatus,omitempty"`
	// `readOnly`  unique auto-generated identifier
	Id *int32 `json:"id,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// `readOnly`  Enum Type: `KalturaUserEntryStatus`
	Status *string `json:"status,omitempty"`
	// `readOnly`  Enum Type: `KalturaUserEntryType`
	Type *string `json:"type,omitempty"`
	// `readOnly`
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
	// `insertOnly`
	UserId *string `json:"userId,omitempty"`
}

// NewKalturaUserEntry instantiates a new KalturaUserEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaUserEntry() *KalturaUserEntry {
	this := KalturaUserEntry{}
	return &this
}

// NewKalturaUserEntryWithDefaults instantiates a new KalturaUserEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaUserEntryWithDefaults() *KalturaUserEntry {
	this := KalturaUserEntry{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaUserEntry) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaUserEntry) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaUserEntry) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaUserEntry) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *KalturaUserEntry) GetEntryId() string {
	if o == nil || o.EntryId == nil {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaUserEntry) GetEntryIdOk() (*string, bool) {
	if o == nil || o.EntryId == nil {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *KalturaUserEntry) HasEntryId() bool {
	if o != nil && o.EntryId != nil {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *KalturaUserEntry) SetEntryId(v string) {
	o.EntryId = &v
}

// GetExtendedStatus returns the ExtendedStatus field value if set, zero value otherwise.
func (o *KalturaUserEntry) GetExtendedStatus() string {
	if o == nil || o.ExtendedStatus == nil {
		var ret string
		return ret
	}
	return *o.ExtendedStatus
}

// GetExtendedStatusOk returns a tuple with the ExtendedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaUserEntry) GetExtendedStatusOk() (*string, bool) {
	if o == nil || o.ExtendedStatus == nil {
		return nil, false
	}
	return o.ExtendedStatus, true
}

// HasExtendedStatus returns a boolean if a field has been set.
func (o *KalturaUserEntry) HasExtendedStatus() bool {
	if o != nil && o.ExtendedStatus != nil {
		return true
	}

	return false
}

// SetExtendedStatus gets a reference to the given string and assigns it to the ExtendedStatus field.
func (o *KalturaUserEntry) SetExtendedStatus(v string) {
	o.ExtendedStatus = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaUserEntry) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaUserEntry) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaUserEntry) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaUserEntry) SetId(v int32) {
	o.Id = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaUserEntry) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaUserEntry) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaUserEntry) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaUserEntry) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaUserEntry) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaUserEntry) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaUserEntry) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaUserEntry) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaUserEntry) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaUserEntry) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaUserEntry) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *KalturaUserEntry) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaUserEntry) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaUserEntry) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaUserEntry) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *KalturaUserEntry) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaUserEntry) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaUserEntry) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaUserEntry) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaUserEntry) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *KalturaUserEntry) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaUserEntry) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *KalturaUserEntry) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *KalturaUserEntry) SetUserId(v string) {
	o.UserId = &v
}

func (o KalturaUserEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.EntryId != nil {
		toSerialize["entryId"] = o.EntryId
	}
	if o.ExtendedStatus != nil {
		toSerialize["extendedStatus"] = o.ExtendedStatus
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaUserEntry struct {
	value *KalturaUserEntry
	isSet bool
}

func (v NullableKalturaUserEntry) Get() *KalturaUserEntry {
	return v.value
}

func (v *NullableKalturaUserEntry) Set(val *KalturaUserEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaUserEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaUserEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaUserEntry(val *KalturaUserEntry) *NullableKalturaUserEntry {
	return &NullableKalturaUserEntry{value: val, isSet: true}
}

func (v NullableKalturaUserEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaUserEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


