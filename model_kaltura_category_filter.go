/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaCategoryFilter struct for KalturaCategoryFilter
type KalturaCategoryFilter struct {
	KalturaCategoryBaseFilter
}

// NewKalturaCategoryFilter instantiates a new KalturaCategoryFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaCategoryFilter() *KalturaCategoryFilter {
	this := KalturaCategoryFilter{}
	return &this
}

// NewKalturaCategoryFilterWithDefaults instantiates a new KalturaCategoryFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaCategoryFilterWithDefaults() *KalturaCategoryFilter {
	this := KalturaCategoryFilter{}
	return &this
}

func (o KalturaCategoryFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaCategoryBaseFilter, errKalturaCategoryBaseFilter := json.Marshal(o.KalturaCategoryBaseFilter)
	if errKalturaCategoryBaseFilter != nil {
		return []byte{}, errKalturaCategoryBaseFilter
	}
	errKalturaCategoryBaseFilter = json.Unmarshal([]byte(serializedKalturaCategoryBaseFilter), &toSerialize)
	if errKalturaCategoryBaseFilter != nil {
		return []byte{}, errKalturaCategoryBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaCategoryFilter struct {
	value *KalturaCategoryFilter
	isSet bool
}

func (v NullableKalturaCategoryFilter) Get() *KalturaCategoryFilter {
	return v.value
}

func (v *NullableKalturaCategoryFilter) Set(val *KalturaCategoryFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaCategoryFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaCategoryFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaCategoryFilter(val *KalturaCategoryFilter) *NullableKalturaCategoryFilter {
	return &NullableKalturaCategoryFilter{value: val, isSet: true}
}

func (v NullableKalturaCategoryFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaCategoryFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


