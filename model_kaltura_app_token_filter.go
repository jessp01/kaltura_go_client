/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaAppTokenFilter struct for KalturaAppTokenFilter
type KalturaAppTokenFilter struct {
	KalturaAppTokenBaseFilter
}

// NewKalturaAppTokenFilter instantiates a new KalturaAppTokenFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaAppTokenFilter() *KalturaAppTokenFilter {
	this := KalturaAppTokenFilter{}
	return &this
}

// NewKalturaAppTokenFilterWithDefaults instantiates a new KalturaAppTokenFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaAppTokenFilterWithDefaults() *KalturaAppTokenFilter {
	this := KalturaAppTokenFilter{}
	return &this
}

func (o KalturaAppTokenFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaAppTokenBaseFilter, errKalturaAppTokenBaseFilter := json.Marshal(o.KalturaAppTokenBaseFilter)
	if errKalturaAppTokenBaseFilter != nil {
		return []byte{}, errKalturaAppTokenBaseFilter
	}
	errKalturaAppTokenBaseFilter = json.Unmarshal([]byte(serializedKalturaAppTokenBaseFilter), &toSerialize)
	if errKalturaAppTokenBaseFilter != nil {
		return []byte{}, errKalturaAppTokenBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaAppTokenFilter struct {
	value *KalturaAppTokenFilter
	isSet bool
}

func (v NullableKalturaAppTokenFilter) Get() *KalturaAppTokenFilter {
	return v.value
}

func (v *NullableKalturaAppTokenFilter) Set(val *KalturaAppTokenFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaAppTokenFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaAppTokenFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaAppTokenFilter(val *KalturaAppTokenFilter) *NullableKalturaAppTokenFilter {
	return &NullableKalturaAppTokenFilter{value: val, isSet: true}
}

func (v NullableKalturaAppTokenFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaAppTokenFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


