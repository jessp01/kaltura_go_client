/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PollResetVotesRequest struct for PollResetVotesRequest
type PollResetVotesRequest struct {
	PollId string `json:"pollId"`
}

// NewPollResetVotesRequest instantiates a new PollResetVotesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPollResetVotesRequest(pollId string) *PollResetVotesRequest {
	this := PollResetVotesRequest{}
	this.PollId = pollId
	return &this
}

// NewPollResetVotesRequestWithDefaults instantiates a new PollResetVotesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPollResetVotesRequestWithDefaults() *PollResetVotesRequest {
	this := PollResetVotesRequest{}
	return &this
}

// GetPollId returns the PollId field value
func (o *PollResetVotesRequest) GetPollId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PollId
}

// GetPollIdOk returns a tuple with the PollId field value
// and a boolean to check if the value has been set.
func (o *PollResetVotesRequest) GetPollIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PollId, true
}

// SetPollId sets field value
func (o *PollResetVotesRequest) SetPollId(v string) {
	o.PollId = v
}

func (o PollResetVotesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pollId"] = o.PollId
	}
	return json.Marshal(toSerialize)
}

type NullablePollResetVotesRequest struct {
	value *PollResetVotesRequest
	isSet bool
}

func (v NullablePollResetVotesRequest) Get() *PollResetVotesRequest {
	return v.value
}

func (v *NullablePollResetVotesRequest) Set(val *PollResetVotesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePollResetVotesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePollResetVotesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePollResetVotesRequest(val *PollResetVotesRequest) *NullablePollResetVotesRequest {
	return &NullablePollResetVotesRequest{value: val, isSet: true}
}

func (v NullablePollResetVotesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePollResetVotesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


