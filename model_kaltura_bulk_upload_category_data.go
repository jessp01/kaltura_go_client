/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBulkUploadCategoryData This class represents object-specific data passed to the   bulk upload job.
type KalturaBulkUploadCategoryData struct {
	KalturaBulkUploadObjectData
}

// NewKalturaBulkUploadCategoryData instantiates a new KalturaBulkUploadCategoryData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBulkUploadCategoryData() *KalturaBulkUploadCategoryData {
	this := KalturaBulkUploadCategoryData{}
	return &this
}

// NewKalturaBulkUploadCategoryDataWithDefaults instantiates a new KalturaBulkUploadCategoryData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBulkUploadCategoryDataWithDefaults() *KalturaBulkUploadCategoryData {
	this := KalturaBulkUploadCategoryData{}
	return &this
}

func (o KalturaBulkUploadCategoryData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBulkUploadObjectData, errKalturaBulkUploadObjectData := json.Marshal(o.KalturaBulkUploadObjectData)
	if errKalturaBulkUploadObjectData != nil {
		return []byte{}, errKalturaBulkUploadObjectData
	}
	errKalturaBulkUploadObjectData = json.Unmarshal([]byte(serializedKalturaBulkUploadObjectData), &toSerialize)
	if errKalturaBulkUploadObjectData != nil {
		return []byte{}, errKalturaBulkUploadObjectData
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBulkUploadCategoryData struct {
	value *KalturaBulkUploadCategoryData
	isSet bool
}

func (v NullableKalturaBulkUploadCategoryData) Get() *KalturaBulkUploadCategoryData {
	return v.value
}

func (v *NullableKalturaBulkUploadCategoryData) Set(val *KalturaBulkUploadCategoryData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBulkUploadCategoryData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBulkUploadCategoryData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBulkUploadCategoryData(val *KalturaBulkUploadCategoryData) *NullableKalturaBulkUploadCategoryData {
	return &NullableKalturaBulkUploadCategoryData{value: val, isSet: true}
}

func (v NullableKalturaBulkUploadCategoryData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBulkUploadCategoryData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


