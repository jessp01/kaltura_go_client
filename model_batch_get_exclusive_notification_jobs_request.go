/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchGetExclusiveNotificationJobsRequest struct for BatchGetExclusiveNotificationJobsRequest
type BatchGetExclusiveNotificationJobsRequest struct {
	Filter *KalturaBatchJobFilter `json:"filter,omitempty"`
	LockKey KalturaExclusiveLockKey `json:"lockKey"`
	MaxExecutionTime int32 `json:"maxExecutionTime"`
	NumberOfJobs int32 `json:"numberOfJobs"`
}

// NewBatchGetExclusiveNotificationJobsRequest instantiates a new BatchGetExclusiveNotificationJobsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchGetExclusiveNotificationJobsRequest(lockKey KalturaExclusiveLockKey, maxExecutionTime int32, numberOfJobs int32) *BatchGetExclusiveNotificationJobsRequest {
	this := BatchGetExclusiveNotificationJobsRequest{}
	this.LockKey = lockKey
	this.MaxExecutionTime = maxExecutionTime
	this.NumberOfJobs = numberOfJobs
	return &this
}

// NewBatchGetExclusiveNotificationJobsRequestWithDefaults instantiates a new BatchGetExclusiveNotificationJobsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchGetExclusiveNotificationJobsRequestWithDefaults() *BatchGetExclusiveNotificationJobsRequest {
	this := BatchGetExclusiveNotificationJobsRequest{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *BatchGetExclusiveNotificationJobsRequest) GetFilter() KalturaBatchJobFilter {
	if o == nil || o.Filter == nil {
		var ret KalturaBatchJobFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchGetExclusiveNotificationJobsRequest) GetFilterOk() (*KalturaBatchJobFilter, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *BatchGetExclusiveNotificationJobsRequest) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given KalturaBatchJobFilter and assigns it to the Filter field.
func (o *BatchGetExclusiveNotificationJobsRequest) SetFilter(v KalturaBatchJobFilter) {
	o.Filter = &v
}

// GetLockKey returns the LockKey field value
func (o *BatchGetExclusiveNotificationJobsRequest) GetLockKey() KalturaExclusiveLockKey {
	if o == nil {
		var ret KalturaExclusiveLockKey
		return ret
	}

	return o.LockKey
}

// GetLockKeyOk returns a tuple with the LockKey field value
// and a boolean to check if the value has been set.
func (o *BatchGetExclusiveNotificationJobsRequest) GetLockKeyOk() (*KalturaExclusiveLockKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockKey, true
}

// SetLockKey sets field value
func (o *BatchGetExclusiveNotificationJobsRequest) SetLockKey(v KalturaExclusiveLockKey) {
	o.LockKey = v
}

// GetMaxExecutionTime returns the MaxExecutionTime field value
func (o *BatchGetExclusiveNotificationJobsRequest) GetMaxExecutionTime() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxExecutionTime
}

// GetMaxExecutionTimeOk returns a tuple with the MaxExecutionTime field value
// and a boolean to check if the value has been set.
func (o *BatchGetExclusiveNotificationJobsRequest) GetMaxExecutionTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxExecutionTime, true
}

// SetMaxExecutionTime sets field value
func (o *BatchGetExclusiveNotificationJobsRequest) SetMaxExecutionTime(v int32) {
	o.MaxExecutionTime = v
}

// GetNumberOfJobs returns the NumberOfJobs field value
func (o *BatchGetExclusiveNotificationJobsRequest) GetNumberOfJobs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumberOfJobs
}

// GetNumberOfJobsOk returns a tuple with the NumberOfJobs field value
// and a boolean to check if the value has been set.
func (o *BatchGetExclusiveNotificationJobsRequest) GetNumberOfJobsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberOfJobs, true
}

// SetNumberOfJobs sets field value
func (o *BatchGetExclusiveNotificationJobsRequest) SetNumberOfJobs(v int32) {
	o.NumberOfJobs = v
}

func (o BatchGetExclusiveNotificationJobsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if true {
		toSerialize["lockKey"] = o.LockKey
	}
	if true {
		toSerialize["maxExecutionTime"] = o.MaxExecutionTime
	}
	if true {
		toSerialize["numberOfJobs"] = o.NumberOfJobs
	}
	return json.Marshal(toSerialize)
}

type NullableBatchGetExclusiveNotificationJobsRequest struct {
	value *BatchGetExclusiveNotificationJobsRequest
	isSet bool
}

func (v NullableBatchGetExclusiveNotificationJobsRequest) Get() *BatchGetExclusiveNotificationJobsRequest {
	return v.value
}

func (v *NullableBatchGetExclusiveNotificationJobsRequest) Set(val *BatchGetExclusiveNotificationJobsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchGetExclusiveNotificationJobsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchGetExclusiveNotificationJobsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchGetExclusiveNotificationJobsRequest(val *BatchGetExclusiveNotificationJobsRequest) *NullableBatchGetExclusiveNotificationJobsRequest {
	return &NullableBatchGetExclusiveNotificationJobsRequest{value: val, isSet: true}
}

func (v NullableBatchGetExclusiveNotificationJobsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchGetExclusiveNotificationJobsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


