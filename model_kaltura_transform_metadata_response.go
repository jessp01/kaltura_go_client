/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaTransformMetadataResponse struct for KalturaTransformMetadataResponse
type KalturaTransformMetadataResponse struct {
	// `readOnly`
	LowerVersionCount *int32 `json:"lowerVersionCount,omitempty"`
	Objects []KalturaMetadata `json:"objects,omitempty"`
	// `readOnly`
	TotalCount *int32 `json:"totalCount,omitempty"`
}

// NewKalturaTransformMetadataResponse instantiates a new KalturaTransformMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaTransformMetadataResponse() *KalturaTransformMetadataResponse {
	this := KalturaTransformMetadataResponse{}
	return &this
}

// NewKalturaTransformMetadataResponseWithDefaults instantiates a new KalturaTransformMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaTransformMetadataResponseWithDefaults() *KalturaTransformMetadataResponse {
	this := KalturaTransformMetadataResponse{}
	return &this
}

// GetLowerVersionCount returns the LowerVersionCount field value if set, zero value otherwise.
func (o *KalturaTransformMetadataResponse) GetLowerVersionCount() int32 {
	if o == nil || o.LowerVersionCount == nil {
		var ret int32
		return ret
	}
	return *o.LowerVersionCount
}

// GetLowerVersionCountOk returns a tuple with the LowerVersionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaTransformMetadataResponse) GetLowerVersionCountOk() (*int32, bool) {
	if o == nil || o.LowerVersionCount == nil {
		return nil, false
	}
	return o.LowerVersionCount, true
}

// HasLowerVersionCount returns a boolean if a field has been set.
func (o *KalturaTransformMetadataResponse) HasLowerVersionCount() bool {
	if o != nil && o.LowerVersionCount != nil {
		return true
	}

	return false
}

// SetLowerVersionCount gets a reference to the given int32 and assigns it to the LowerVersionCount field.
func (o *KalturaTransformMetadataResponse) SetLowerVersionCount(v int32) {
	o.LowerVersionCount = &v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *KalturaTransformMetadataResponse) GetObjects() []KalturaMetadata {
	if o == nil || o.Objects == nil {
		var ret []KalturaMetadata
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaTransformMetadataResponse) GetObjectsOk() ([]KalturaMetadata, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *KalturaTransformMetadataResponse) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []KalturaMetadata and assigns it to the Objects field.
func (o *KalturaTransformMetadataResponse) SetObjects(v []KalturaMetadata) {
	o.Objects = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *KalturaTransformMetadataResponse) GetTotalCount() int32 {
	if o == nil || o.TotalCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaTransformMetadataResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || o.TotalCount == nil {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *KalturaTransformMetadataResponse) HasTotalCount() bool {
	if o != nil && o.TotalCount != nil {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *KalturaTransformMetadataResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o KalturaTransformMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LowerVersionCount != nil {
		toSerialize["lowerVersionCount"] = o.LowerVersionCount
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	if o.TotalCount != nil {
		toSerialize["totalCount"] = o.TotalCount
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaTransformMetadataResponse struct {
	value *KalturaTransformMetadataResponse
	isSet bool
}

func (v NullableKalturaTransformMetadataResponse) Get() *KalturaTransformMetadataResponse {
	return v.value
}

func (v *NullableKalturaTransformMetadataResponse) Set(val *KalturaTransformMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaTransformMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaTransformMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaTransformMetadataResponse(val *KalturaTransformMetadataResponse) *NullableKalturaTransformMetadataResponse {
	return &NullableKalturaTransformMetadataResponse{value: val, isSet: true}
}

func (v NullableKalturaTransformMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaTransformMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


