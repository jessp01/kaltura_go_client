/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaConvertCollectionFlavorData struct for KalturaConvertCollectionFlavorData
type KalturaConvertCollectionFlavorData struct {
	AudioBitrate *int32 `json:"audioBitrate,omitempty"`
	DestFileSyncLocalPath *string `json:"destFileSyncLocalPath,omitempty"`
	DestFileSyncRemoteUrl *string `json:"destFileSyncRemoteUrl,omitempty"`
	FlavorAssetId *string `json:"flavorAssetId,omitempty"`
	FlavorParamsOutputId *int32 `json:"flavorParamsOutputId,omitempty"`
	ReadyBehavior *int32 `json:"readyBehavior,omitempty"`
	VideoBitrate *int32 `json:"videoBitrate,omitempty"`
}

// NewKalturaConvertCollectionFlavorData instantiates a new KalturaConvertCollectionFlavorData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaConvertCollectionFlavorData() *KalturaConvertCollectionFlavorData {
	this := KalturaConvertCollectionFlavorData{}
	return &this
}

// NewKalturaConvertCollectionFlavorDataWithDefaults instantiates a new KalturaConvertCollectionFlavorData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaConvertCollectionFlavorDataWithDefaults() *KalturaConvertCollectionFlavorData {
	this := KalturaConvertCollectionFlavorData{}
	return &this
}

// GetAudioBitrate returns the AudioBitrate field value if set, zero value otherwise.
func (o *KalturaConvertCollectionFlavorData) GetAudioBitrate() int32 {
	if o == nil || o.AudioBitrate == nil {
		var ret int32
		return ret
	}
	return *o.AudioBitrate
}

// GetAudioBitrateOk returns a tuple with the AudioBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaConvertCollectionFlavorData) GetAudioBitrateOk() (*int32, bool) {
	if o == nil || o.AudioBitrate == nil {
		return nil, false
	}
	return o.AudioBitrate, true
}

// HasAudioBitrate returns a boolean if a field has been set.
func (o *KalturaConvertCollectionFlavorData) HasAudioBitrate() bool {
	if o != nil && o.AudioBitrate != nil {
		return true
	}

	return false
}

// SetAudioBitrate gets a reference to the given int32 and assigns it to the AudioBitrate field.
func (o *KalturaConvertCollectionFlavorData) SetAudioBitrate(v int32) {
	o.AudioBitrate = &v
}

// GetDestFileSyncLocalPath returns the DestFileSyncLocalPath field value if set, zero value otherwise.
func (o *KalturaConvertCollectionFlavorData) GetDestFileSyncLocalPath() string {
	if o == nil || o.DestFileSyncLocalPath == nil {
		var ret string
		return ret
	}
	return *o.DestFileSyncLocalPath
}

// GetDestFileSyncLocalPathOk returns a tuple with the DestFileSyncLocalPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaConvertCollectionFlavorData) GetDestFileSyncLocalPathOk() (*string, bool) {
	if o == nil || o.DestFileSyncLocalPath == nil {
		return nil, false
	}
	return o.DestFileSyncLocalPath, true
}

// HasDestFileSyncLocalPath returns a boolean if a field has been set.
func (o *KalturaConvertCollectionFlavorData) HasDestFileSyncLocalPath() bool {
	if o != nil && o.DestFileSyncLocalPath != nil {
		return true
	}

	return false
}

// SetDestFileSyncLocalPath gets a reference to the given string and assigns it to the DestFileSyncLocalPath field.
func (o *KalturaConvertCollectionFlavorData) SetDestFileSyncLocalPath(v string) {
	o.DestFileSyncLocalPath = &v
}

// GetDestFileSyncRemoteUrl returns the DestFileSyncRemoteUrl field value if set, zero value otherwise.
func (o *KalturaConvertCollectionFlavorData) GetDestFileSyncRemoteUrl() string {
	if o == nil || o.DestFileSyncRemoteUrl == nil {
		var ret string
		return ret
	}
	return *o.DestFileSyncRemoteUrl
}

// GetDestFileSyncRemoteUrlOk returns a tuple with the DestFileSyncRemoteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaConvertCollectionFlavorData) GetDestFileSyncRemoteUrlOk() (*string, bool) {
	if o == nil || o.DestFileSyncRemoteUrl == nil {
		return nil, false
	}
	return o.DestFileSyncRemoteUrl, true
}

// HasDestFileSyncRemoteUrl returns a boolean if a field has been set.
func (o *KalturaConvertCollectionFlavorData) HasDestFileSyncRemoteUrl() bool {
	if o != nil && o.DestFileSyncRemoteUrl != nil {
		return true
	}

	return false
}

// SetDestFileSyncRemoteUrl gets a reference to the given string and assigns it to the DestFileSyncRemoteUrl field.
func (o *KalturaConvertCollectionFlavorData) SetDestFileSyncRemoteUrl(v string) {
	o.DestFileSyncRemoteUrl = &v
}

// GetFlavorAssetId returns the FlavorAssetId field value if set, zero value otherwise.
func (o *KalturaConvertCollectionFlavorData) GetFlavorAssetId() string {
	if o == nil || o.FlavorAssetId == nil {
		var ret string
		return ret
	}
	return *o.FlavorAssetId
}

// GetFlavorAssetIdOk returns a tuple with the FlavorAssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaConvertCollectionFlavorData) GetFlavorAssetIdOk() (*string, bool) {
	if o == nil || o.FlavorAssetId == nil {
		return nil, false
	}
	return o.FlavorAssetId, true
}

// HasFlavorAssetId returns a boolean if a field has been set.
func (o *KalturaConvertCollectionFlavorData) HasFlavorAssetId() bool {
	if o != nil && o.FlavorAssetId != nil {
		return true
	}

	return false
}

// SetFlavorAssetId gets a reference to the given string and assigns it to the FlavorAssetId field.
func (o *KalturaConvertCollectionFlavorData) SetFlavorAssetId(v string) {
	o.FlavorAssetId = &v
}

// GetFlavorParamsOutputId returns the FlavorParamsOutputId field value if set, zero value otherwise.
func (o *KalturaConvertCollectionFlavorData) GetFlavorParamsOutputId() int32 {
	if o == nil || o.FlavorParamsOutputId == nil {
		var ret int32
		return ret
	}
	return *o.FlavorParamsOutputId
}

// GetFlavorParamsOutputIdOk returns a tuple with the FlavorParamsOutputId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaConvertCollectionFlavorData) GetFlavorParamsOutputIdOk() (*int32, bool) {
	if o == nil || o.FlavorParamsOutputId == nil {
		return nil, false
	}
	return o.FlavorParamsOutputId, true
}

// HasFlavorParamsOutputId returns a boolean if a field has been set.
func (o *KalturaConvertCollectionFlavorData) HasFlavorParamsOutputId() bool {
	if o != nil && o.FlavorParamsOutputId != nil {
		return true
	}

	return false
}

// SetFlavorParamsOutputId gets a reference to the given int32 and assigns it to the FlavorParamsOutputId field.
func (o *KalturaConvertCollectionFlavorData) SetFlavorParamsOutputId(v int32) {
	o.FlavorParamsOutputId = &v
}

// GetReadyBehavior returns the ReadyBehavior field value if set, zero value otherwise.
func (o *KalturaConvertCollectionFlavorData) GetReadyBehavior() int32 {
	if o == nil || o.ReadyBehavior == nil {
		var ret int32
		return ret
	}
	return *o.ReadyBehavior
}

// GetReadyBehaviorOk returns a tuple with the ReadyBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaConvertCollectionFlavorData) GetReadyBehaviorOk() (*int32, bool) {
	if o == nil || o.ReadyBehavior == nil {
		return nil, false
	}
	return o.ReadyBehavior, true
}

// HasReadyBehavior returns a boolean if a field has been set.
func (o *KalturaConvertCollectionFlavorData) HasReadyBehavior() bool {
	if o != nil && o.ReadyBehavior != nil {
		return true
	}

	return false
}

// SetReadyBehavior gets a reference to the given int32 and assigns it to the ReadyBehavior field.
func (o *KalturaConvertCollectionFlavorData) SetReadyBehavior(v int32) {
	o.ReadyBehavior = &v
}

// GetVideoBitrate returns the VideoBitrate field value if set, zero value otherwise.
func (o *KalturaConvertCollectionFlavorData) GetVideoBitrate() int32 {
	if o == nil || o.VideoBitrate == nil {
		var ret int32
		return ret
	}
	return *o.VideoBitrate
}

// GetVideoBitrateOk returns a tuple with the VideoBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaConvertCollectionFlavorData) GetVideoBitrateOk() (*int32, bool) {
	if o == nil || o.VideoBitrate == nil {
		return nil, false
	}
	return o.VideoBitrate, true
}

// HasVideoBitrate returns a boolean if a field has been set.
func (o *KalturaConvertCollectionFlavorData) HasVideoBitrate() bool {
	if o != nil && o.VideoBitrate != nil {
		return true
	}

	return false
}

// SetVideoBitrate gets a reference to the given int32 and assigns it to the VideoBitrate field.
func (o *KalturaConvertCollectionFlavorData) SetVideoBitrate(v int32) {
	o.VideoBitrate = &v
}

func (o KalturaConvertCollectionFlavorData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AudioBitrate != nil {
		toSerialize["audioBitrate"] = o.AudioBitrate
	}
	if o.DestFileSyncLocalPath != nil {
		toSerialize["destFileSyncLocalPath"] = o.DestFileSyncLocalPath
	}
	if o.DestFileSyncRemoteUrl != nil {
		toSerialize["destFileSyncRemoteUrl"] = o.DestFileSyncRemoteUrl
	}
	if o.FlavorAssetId != nil {
		toSerialize["flavorAssetId"] = o.FlavorAssetId
	}
	if o.FlavorParamsOutputId != nil {
		toSerialize["flavorParamsOutputId"] = o.FlavorParamsOutputId
	}
	if o.ReadyBehavior != nil {
		toSerialize["readyBehavior"] = o.ReadyBehavior
	}
	if o.VideoBitrate != nil {
		toSerialize["videoBitrate"] = o.VideoBitrate
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaConvertCollectionFlavorData struct {
	value *KalturaConvertCollectionFlavorData
	isSet bool
}

func (v NullableKalturaConvertCollectionFlavorData) Get() *KalturaConvertCollectionFlavorData {
	return v.value
}

func (v *NullableKalturaConvertCollectionFlavorData) Set(val *KalturaConvertCollectionFlavorData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaConvertCollectionFlavorData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaConvertCollectionFlavorData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaConvertCollectionFlavorData(val *KalturaConvertCollectionFlavorData) *NullableKalturaConvertCollectionFlavorData {
	return &NullableKalturaConvertCollectionFlavorData{value: val, isSet: true}
}

func (v NullableKalturaConvertCollectionFlavorData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaConvertCollectionFlavorData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


