/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaVarPartnerUsageItem struct for KalturaVarPartnerUsageItem
type KalturaVarPartnerUsageItem struct {
	// Number of new audio entries created during specific date range
	AudioEntriesCount *int32 `json:"audioEntriesCount,omitempty"`
	// The average amount of storage consumption during the given date range for the specific publisher
	AvgStorage *float32 `json:"avgStorage,omitempty"`
	// The total bandwidth usage during the given date range (in MB)
	Bandwidth *float32 `json:"bandwidth,omitempty"`
	// The combined amount of bandwidth and storage consumed during the given date range for the specific publisher
	CombinedStorageBandwidth *float32 `json:"combinedStorageBandwidth,omitempty"`
	// TGhe date at which the report was taken - Unix Timestamp
	DateId *string `json:"dateId,omitempty"`
	// The deleted storage consumption (new uploads) during the given date range (in MB)
	DeletedStorage *float32 `json:"deletedStorage,omitempty"`
	// Number of new entries created during specific date range
	EntriesCount *int32 `json:"entriesCount,omitempty"`
	// Number of new image entries created during specific date range
	ImageEntriesCount *int32 `json:"imageEntriesCount,omitempty"`
	// Number of new mix entries created during specific date range
	MixEntriesCount *int32 `json:"mixEntriesCount,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	// Partner creation date (Unix timestamp)
	PartnerCreatedAt *int32 `json:"partnerCreatedAt,omitempty"`
	// Partner ID
	PartnerId *int32 `json:"partnerId,omitempty"`
	// Partner name
	PartnerName *string `json:"partnerName,omitempty"`
	// Partner package
	PartnerPackage *int32 `json:"partnerPackage,omitempty"`
	// Enum Type: `KalturaPartnerStatus`  Partner status
	PartnerStatus *int32 `json:"partnerStatus,omitempty"`
	// The peak amount of storage consumption during the given date range for the specific publisher
	PeakStorage *float32 `json:"peakStorage,omitempty"`
	// Number of plays in the specific date range
	Plays *int32 `json:"plays,omitempty"`
	// The added storage consumption (new uploads) during the given date range (in MB)
	Storage *float32 `json:"storage,omitempty"`
	// Total number of entries
	TotalEntriesCount *int32 `json:"totalEntriesCount,omitempty"`
	// The total storage consumption (in MB)
	TotalStorage *float32 `json:"totalStorage,omitempty"`
	// Amount of transcoding usage in MB
	TranscodingUsage *float32 `json:"transcodingUsage,omitempty"`
	// Number of new video entries created during specific date range
	VideoEntriesCount *int32 `json:"videoEntriesCount,omitempty"`
	// Number of player loads in the specific date range
	Views *int32 `json:"views,omitempty"`
}

// NewKalturaVarPartnerUsageItem instantiates a new KalturaVarPartnerUsageItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaVarPartnerUsageItem() *KalturaVarPartnerUsageItem {
	this := KalturaVarPartnerUsageItem{}
	return &this
}

// NewKalturaVarPartnerUsageItemWithDefaults instantiates a new KalturaVarPartnerUsageItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaVarPartnerUsageItemWithDefaults() *KalturaVarPartnerUsageItem {
	this := KalturaVarPartnerUsageItem{}
	return &this
}

// GetAudioEntriesCount returns the AudioEntriesCount field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetAudioEntriesCount() int32 {
	if o == nil || o.AudioEntriesCount == nil {
		var ret int32
		return ret
	}
	return *o.AudioEntriesCount
}

// GetAudioEntriesCountOk returns a tuple with the AudioEntriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetAudioEntriesCountOk() (*int32, bool) {
	if o == nil || o.AudioEntriesCount == nil {
		return nil, false
	}
	return o.AudioEntriesCount, true
}

// HasAudioEntriesCount returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasAudioEntriesCount() bool {
	if o != nil && o.AudioEntriesCount != nil {
		return true
	}

	return false
}

// SetAudioEntriesCount gets a reference to the given int32 and assigns it to the AudioEntriesCount field.
func (o *KalturaVarPartnerUsageItem) SetAudioEntriesCount(v int32) {
	o.AudioEntriesCount = &v
}

// GetAvgStorage returns the AvgStorage field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetAvgStorage() float32 {
	if o == nil || o.AvgStorage == nil {
		var ret float32
		return ret
	}
	return *o.AvgStorage
}

// GetAvgStorageOk returns a tuple with the AvgStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetAvgStorageOk() (*float32, bool) {
	if o == nil || o.AvgStorage == nil {
		return nil, false
	}
	return o.AvgStorage, true
}

// HasAvgStorage returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasAvgStorage() bool {
	if o != nil && o.AvgStorage != nil {
		return true
	}

	return false
}

// SetAvgStorage gets a reference to the given float32 and assigns it to the AvgStorage field.
func (o *KalturaVarPartnerUsageItem) SetAvgStorage(v float32) {
	o.AvgStorage = &v
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetBandwidth() float32 {
	if o == nil || o.Bandwidth == nil {
		var ret float32
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetBandwidthOk() (*float32, bool) {
	if o == nil || o.Bandwidth == nil {
		return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasBandwidth() bool {
	if o != nil && o.Bandwidth != nil {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given float32 and assigns it to the Bandwidth field.
func (o *KalturaVarPartnerUsageItem) SetBandwidth(v float32) {
	o.Bandwidth = &v
}

// GetCombinedStorageBandwidth returns the CombinedStorageBandwidth field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetCombinedStorageBandwidth() float32 {
	if o == nil || o.CombinedStorageBandwidth == nil {
		var ret float32
		return ret
	}
	return *o.CombinedStorageBandwidth
}

// GetCombinedStorageBandwidthOk returns a tuple with the CombinedStorageBandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetCombinedStorageBandwidthOk() (*float32, bool) {
	if o == nil || o.CombinedStorageBandwidth == nil {
		return nil, false
	}
	return o.CombinedStorageBandwidth, true
}

// HasCombinedStorageBandwidth returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasCombinedStorageBandwidth() bool {
	if o != nil && o.CombinedStorageBandwidth != nil {
		return true
	}

	return false
}

// SetCombinedStorageBandwidth gets a reference to the given float32 and assigns it to the CombinedStorageBandwidth field.
func (o *KalturaVarPartnerUsageItem) SetCombinedStorageBandwidth(v float32) {
	o.CombinedStorageBandwidth = &v
}

// GetDateId returns the DateId field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetDateId() string {
	if o == nil || o.DateId == nil {
		var ret string
		return ret
	}
	return *o.DateId
}

// GetDateIdOk returns a tuple with the DateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetDateIdOk() (*string, bool) {
	if o == nil || o.DateId == nil {
		return nil, false
	}
	return o.DateId, true
}

// HasDateId returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasDateId() bool {
	if o != nil && o.DateId != nil {
		return true
	}

	return false
}

// SetDateId gets a reference to the given string and assigns it to the DateId field.
func (o *KalturaVarPartnerUsageItem) SetDateId(v string) {
	o.DateId = &v
}

// GetDeletedStorage returns the DeletedStorage field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetDeletedStorage() float32 {
	if o == nil || o.DeletedStorage == nil {
		var ret float32
		return ret
	}
	return *o.DeletedStorage
}

// GetDeletedStorageOk returns a tuple with the DeletedStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetDeletedStorageOk() (*float32, bool) {
	if o == nil || o.DeletedStorage == nil {
		return nil, false
	}
	return o.DeletedStorage, true
}

// HasDeletedStorage returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasDeletedStorage() bool {
	if o != nil && o.DeletedStorage != nil {
		return true
	}

	return false
}

// SetDeletedStorage gets a reference to the given float32 and assigns it to the DeletedStorage field.
func (o *KalturaVarPartnerUsageItem) SetDeletedStorage(v float32) {
	o.DeletedStorage = &v
}

// GetEntriesCount returns the EntriesCount field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetEntriesCount() int32 {
	if o == nil || o.EntriesCount == nil {
		var ret int32
		return ret
	}
	return *o.EntriesCount
}

// GetEntriesCountOk returns a tuple with the EntriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetEntriesCountOk() (*int32, bool) {
	if o == nil || o.EntriesCount == nil {
		return nil, false
	}
	return o.EntriesCount, true
}

// HasEntriesCount returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasEntriesCount() bool {
	if o != nil && o.EntriesCount != nil {
		return true
	}

	return false
}

// SetEntriesCount gets a reference to the given int32 and assigns it to the EntriesCount field.
func (o *KalturaVarPartnerUsageItem) SetEntriesCount(v int32) {
	o.EntriesCount = &v
}

// GetImageEntriesCount returns the ImageEntriesCount field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetImageEntriesCount() int32 {
	if o == nil || o.ImageEntriesCount == nil {
		var ret int32
		return ret
	}
	return *o.ImageEntriesCount
}

// GetImageEntriesCountOk returns a tuple with the ImageEntriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetImageEntriesCountOk() (*int32, bool) {
	if o == nil || o.ImageEntriesCount == nil {
		return nil, false
	}
	return o.ImageEntriesCount, true
}

// HasImageEntriesCount returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasImageEntriesCount() bool {
	if o != nil && o.ImageEntriesCount != nil {
		return true
	}

	return false
}

// SetImageEntriesCount gets a reference to the given int32 and assigns it to the ImageEntriesCount field.
func (o *KalturaVarPartnerUsageItem) SetImageEntriesCount(v int32) {
	o.ImageEntriesCount = &v
}

// GetMixEntriesCount returns the MixEntriesCount field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetMixEntriesCount() int32 {
	if o == nil || o.MixEntriesCount == nil {
		var ret int32
		return ret
	}
	return *o.MixEntriesCount
}

// GetMixEntriesCountOk returns a tuple with the MixEntriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetMixEntriesCountOk() (*int32, bool) {
	if o == nil || o.MixEntriesCount == nil {
		return nil, false
	}
	return o.MixEntriesCount, true
}

// HasMixEntriesCount returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasMixEntriesCount() bool {
	if o != nil && o.MixEntriesCount != nil {
		return true
	}

	return false
}

// SetMixEntriesCount gets a reference to the given int32 and assigns it to the MixEntriesCount field.
func (o *KalturaVarPartnerUsageItem) SetMixEntriesCount(v int32) {
	o.MixEntriesCount = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaVarPartnerUsageItem) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetPartnerCreatedAt returns the PartnerCreatedAt field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetPartnerCreatedAt() int32 {
	if o == nil || o.PartnerCreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.PartnerCreatedAt
}

// GetPartnerCreatedAtOk returns a tuple with the PartnerCreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetPartnerCreatedAtOk() (*int32, bool) {
	if o == nil || o.PartnerCreatedAt == nil {
		return nil, false
	}
	return o.PartnerCreatedAt, true
}

// HasPartnerCreatedAt returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasPartnerCreatedAt() bool {
	if o != nil && o.PartnerCreatedAt != nil {
		return true
	}

	return false
}

// SetPartnerCreatedAt gets a reference to the given int32 and assigns it to the PartnerCreatedAt field.
func (o *KalturaVarPartnerUsageItem) SetPartnerCreatedAt(v int32) {
	o.PartnerCreatedAt = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaVarPartnerUsageItem) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetPartnerName returns the PartnerName field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetPartnerName() string {
	if o == nil || o.PartnerName == nil {
		var ret string
		return ret
	}
	return *o.PartnerName
}

// GetPartnerNameOk returns a tuple with the PartnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetPartnerNameOk() (*string, bool) {
	if o == nil || o.PartnerName == nil {
		return nil, false
	}
	return o.PartnerName, true
}

// HasPartnerName returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasPartnerName() bool {
	if o != nil && o.PartnerName != nil {
		return true
	}

	return false
}

// SetPartnerName gets a reference to the given string and assigns it to the PartnerName field.
func (o *KalturaVarPartnerUsageItem) SetPartnerName(v string) {
	o.PartnerName = &v
}

// GetPartnerPackage returns the PartnerPackage field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetPartnerPackage() int32 {
	if o == nil || o.PartnerPackage == nil {
		var ret int32
		return ret
	}
	return *o.PartnerPackage
}

// GetPartnerPackageOk returns a tuple with the PartnerPackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetPartnerPackageOk() (*int32, bool) {
	if o == nil || o.PartnerPackage == nil {
		return nil, false
	}
	return o.PartnerPackage, true
}

// HasPartnerPackage returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasPartnerPackage() bool {
	if o != nil && o.PartnerPackage != nil {
		return true
	}

	return false
}

// SetPartnerPackage gets a reference to the given int32 and assigns it to the PartnerPackage field.
func (o *KalturaVarPartnerUsageItem) SetPartnerPackage(v int32) {
	o.PartnerPackage = &v
}

// GetPartnerStatus returns the PartnerStatus field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetPartnerStatus() int32 {
	if o == nil || o.PartnerStatus == nil {
		var ret int32
		return ret
	}
	return *o.PartnerStatus
}

// GetPartnerStatusOk returns a tuple with the PartnerStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetPartnerStatusOk() (*int32, bool) {
	if o == nil || o.PartnerStatus == nil {
		return nil, false
	}
	return o.PartnerStatus, true
}

// HasPartnerStatus returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasPartnerStatus() bool {
	if o != nil && o.PartnerStatus != nil {
		return true
	}

	return false
}

// SetPartnerStatus gets a reference to the given int32 and assigns it to the PartnerStatus field.
func (o *KalturaVarPartnerUsageItem) SetPartnerStatus(v int32) {
	o.PartnerStatus = &v
}

// GetPeakStorage returns the PeakStorage field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetPeakStorage() float32 {
	if o == nil || o.PeakStorage == nil {
		var ret float32
		return ret
	}
	return *o.PeakStorage
}

// GetPeakStorageOk returns a tuple with the PeakStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetPeakStorageOk() (*float32, bool) {
	if o == nil || o.PeakStorage == nil {
		return nil, false
	}
	return o.PeakStorage, true
}

// HasPeakStorage returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasPeakStorage() bool {
	if o != nil && o.PeakStorage != nil {
		return true
	}

	return false
}

// SetPeakStorage gets a reference to the given float32 and assigns it to the PeakStorage field.
func (o *KalturaVarPartnerUsageItem) SetPeakStorage(v float32) {
	o.PeakStorage = &v
}

// GetPlays returns the Plays field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetPlays() int32 {
	if o == nil || o.Plays == nil {
		var ret int32
		return ret
	}
	return *o.Plays
}

// GetPlaysOk returns a tuple with the Plays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetPlaysOk() (*int32, bool) {
	if o == nil || o.Plays == nil {
		return nil, false
	}
	return o.Plays, true
}

// HasPlays returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasPlays() bool {
	if o != nil && o.Plays != nil {
		return true
	}

	return false
}

// SetPlays gets a reference to the given int32 and assigns it to the Plays field.
func (o *KalturaVarPartnerUsageItem) SetPlays(v int32) {
	o.Plays = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetStorage() float32 {
	if o == nil || o.Storage == nil {
		var ret float32
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetStorageOk() (*float32, bool) {
	if o == nil || o.Storage == nil {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasStorage() bool {
	if o != nil && o.Storage != nil {
		return true
	}

	return false
}

// SetStorage gets a reference to the given float32 and assigns it to the Storage field.
func (o *KalturaVarPartnerUsageItem) SetStorage(v float32) {
	o.Storage = &v
}

// GetTotalEntriesCount returns the TotalEntriesCount field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetTotalEntriesCount() int32 {
	if o == nil || o.TotalEntriesCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalEntriesCount
}

// GetTotalEntriesCountOk returns a tuple with the TotalEntriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetTotalEntriesCountOk() (*int32, bool) {
	if o == nil || o.TotalEntriesCount == nil {
		return nil, false
	}
	return o.TotalEntriesCount, true
}

// HasTotalEntriesCount returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasTotalEntriesCount() bool {
	if o != nil && o.TotalEntriesCount != nil {
		return true
	}

	return false
}

// SetTotalEntriesCount gets a reference to the given int32 and assigns it to the TotalEntriesCount field.
func (o *KalturaVarPartnerUsageItem) SetTotalEntriesCount(v int32) {
	o.TotalEntriesCount = &v
}

// GetTotalStorage returns the TotalStorage field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetTotalStorage() float32 {
	if o == nil || o.TotalStorage == nil {
		var ret float32
		return ret
	}
	return *o.TotalStorage
}

// GetTotalStorageOk returns a tuple with the TotalStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetTotalStorageOk() (*float32, bool) {
	if o == nil || o.TotalStorage == nil {
		return nil, false
	}
	return o.TotalStorage, true
}

// HasTotalStorage returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasTotalStorage() bool {
	if o != nil && o.TotalStorage != nil {
		return true
	}

	return false
}

// SetTotalStorage gets a reference to the given float32 and assigns it to the TotalStorage field.
func (o *KalturaVarPartnerUsageItem) SetTotalStorage(v float32) {
	o.TotalStorage = &v
}

// GetTranscodingUsage returns the TranscodingUsage field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetTranscodingUsage() float32 {
	if o == nil || o.TranscodingUsage == nil {
		var ret float32
		return ret
	}
	return *o.TranscodingUsage
}

// GetTranscodingUsageOk returns a tuple with the TranscodingUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetTranscodingUsageOk() (*float32, bool) {
	if o == nil || o.TranscodingUsage == nil {
		return nil, false
	}
	return o.TranscodingUsage, true
}

// HasTranscodingUsage returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasTranscodingUsage() bool {
	if o != nil && o.TranscodingUsage != nil {
		return true
	}

	return false
}

// SetTranscodingUsage gets a reference to the given float32 and assigns it to the TranscodingUsage field.
func (o *KalturaVarPartnerUsageItem) SetTranscodingUsage(v float32) {
	o.TranscodingUsage = &v
}

// GetVideoEntriesCount returns the VideoEntriesCount field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetVideoEntriesCount() int32 {
	if o == nil || o.VideoEntriesCount == nil {
		var ret int32
		return ret
	}
	return *o.VideoEntriesCount
}

// GetVideoEntriesCountOk returns a tuple with the VideoEntriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetVideoEntriesCountOk() (*int32, bool) {
	if o == nil || o.VideoEntriesCount == nil {
		return nil, false
	}
	return o.VideoEntriesCount, true
}

// HasVideoEntriesCount returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasVideoEntriesCount() bool {
	if o != nil && o.VideoEntriesCount != nil {
		return true
	}

	return false
}

// SetVideoEntriesCount gets a reference to the given int32 and assigns it to the VideoEntriesCount field.
func (o *KalturaVarPartnerUsageItem) SetVideoEntriesCount(v int32) {
	o.VideoEntriesCount = &v
}

// GetViews returns the Views field value if set, zero value otherwise.
func (o *KalturaVarPartnerUsageItem) GetViews() int32 {
	if o == nil || o.Views == nil {
		var ret int32
		return ret
	}
	return *o.Views
}

// GetViewsOk returns a tuple with the Views field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVarPartnerUsageItem) GetViewsOk() (*int32, bool) {
	if o == nil || o.Views == nil {
		return nil, false
	}
	return o.Views, true
}

// HasViews returns a boolean if a field has been set.
func (o *KalturaVarPartnerUsageItem) HasViews() bool {
	if o != nil && o.Views != nil {
		return true
	}

	return false
}

// SetViews gets a reference to the given int32 and assigns it to the Views field.
func (o *KalturaVarPartnerUsageItem) SetViews(v int32) {
	o.Views = &v
}

func (o KalturaVarPartnerUsageItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AudioEntriesCount != nil {
		toSerialize["audioEntriesCount"] = o.AudioEntriesCount
	}
	if o.AvgStorage != nil {
		toSerialize["avgStorage"] = o.AvgStorage
	}
	if o.Bandwidth != nil {
		toSerialize["bandwidth"] = o.Bandwidth
	}
	if o.CombinedStorageBandwidth != nil {
		toSerialize["combinedStorageBandwidth"] = o.CombinedStorageBandwidth
	}
	if o.DateId != nil {
		toSerialize["dateId"] = o.DateId
	}
	if o.DeletedStorage != nil {
		toSerialize["deletedStorage"] = o.DeletedStorage
	}
	if o.EntriesCount != nil {
		toSerialize["entriesCount"] = o.EntriesCount
	}
	if o.ImageEntriesCount != nil {
		toSerialize["imageEntriesCount"] = o.ImageEntriesCount
	}
	if o.MixEntriesCount != nil {
		toSerialize["mixEntriesCount"] = o.MixEntriesCount
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.PartnerCreatedAt != nil {
		toSerialize["partnerCreatedAt"] = o.PartnerCreatedAt
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.PartnerName != nil {
		toSerialize["partnerName"] = o.PartnerName
	}
	if o.PartnerPackage != nil {
		toSerialize["partnerPackage"] = o.PartnerPackage
	}
	if o.PartnerStatus != nil {
		toSerialize["partnerStatus"] = o.PartnerStatus
	}
	if o.PeakStorage != nil {
		toSerialize["peakStorage"] = o.PeakStorage
	}
	if o.Plays != nil {
		toSerialize["plays"] = o.Plays
	}
	if o.Storage != nil {
		toSerialize["storage"] = o.Storage
	}
	if o.TotalEntriesCount != nil {
		toSerialize["totalEntriesCount"] = o.TotalEntriesCount
	}
	if o.TotalStorage != nil {
		toSerialize["totalStorage"] = o.TotalStorage
	}
	if o.TranscodingUsage != nil {
		toSerialize["transcodingUsage"] = o.TranscodingUsage
	}
	if o.VideoEntriesCount != nil {
		toSerialize["videoEntriesCount"] = o.VideoEntriesCount
	}
	if o.Views != nil {
		toSerialize["views"] = o.Views
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaVarPartnerUsageItem struct {
	value *KalturaVarPartnerUsageItem
	isSet bool
}

func (v NullableKalturaVarPartnerUsageItem) Get() *KalturaVarPartnerUsageItem {
	return v.value
}

func (v *NullableKalturaVarPartnerUsageItem) Set(val *KalturaVarPartnerUsageItem) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaVarPartnerUsageItem) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaVarPartnerUsageItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaVarPartnerUsageItem(val *KalturaVarPartnerUsageItem) *NullableKalturaVarPartnerUsageItem {
	return &NullableKalturaVarPartnerUsageItem{value: val, isSet: true}
}

func (v NullableKalturaVarPartnerUsageItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaVarPartnerUsageItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


