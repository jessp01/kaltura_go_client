/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaClientConfiguration Define client optional configurations  /
type KalturaClientConfiguration struct {
	ApiVersion *string `json:"apiVersion,omitempty"`
	ClientTag *string `json:"clientTag,omitempty"`
}

// NewKalturaClientConfiguration instantiates a new KalturaClientConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaClientConfiguration() *KalturaClientConfiguration {
	this := KalturaClientConfiguration{}
	return &this
}

// NewKalturaClientConfigurationWithDefaults instantiates a new KalturaClientConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaClientConfigurationWithDefaults() *KalturaClientConfiguration {
	this := KalturaClientConfiguration{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *KalturaClientConfiguration) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaClientConfiguration) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *KalturaClientConfiguration) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *KalturaClientConfiguration) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetClientTag returns the ClientTag field value if set, zero value otherwise.
func (o *KalturaClientConfiguration) GetClientTag() string {
	if o == nil || o.ClientTag == nil {
		var ret string
		return ret
	}
	return *o.ClientTag
}

// GetClientTagOk returns a tuple with the ClientTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaClientConfiguration) GetClientTagOk() (*string, bool) {
	if o == nil || o.ClientTag == nil {
		return nil, false
	}
	return o.ClientTag, true
}

// HasClientTag returns a boolean if a field has been set.
func (o *KalturaClientConfiguration) HasClientTag() bool {
	if o != nil && o.ClientTag != nil {
		return true
	}

	return false
}

// SetClientTag gets a reference to the given string and assigns it to the ClientTag field.
func (o *KalturaClientConfiguration) SetClientTag(v string) {
	o.ClientTag = &v
}

func (o KalturaClientConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if o.ClientTag != nil {
		toSerialize["clientTag"] = o.ClientTag
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaClientConfiguration struct {
	value *KalturaClientConfiguration
	isSet bool
}

func (v NullableKalturaClientConfiguration) Get() *KalturaClientConfiguration {
	return v.value
}

func (v *NullableKalturaClientConfiguration) Set(val *KalturaClientConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaClientConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaClientConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaClientConfiguration(val *KalturaClientConfiguration) *NullableKalturaClientConfiguration {
	return &NullableKalturaClientConfiguration{value: val, isSet: true}
}

func (v NullableKalturaClientConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaClientConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


