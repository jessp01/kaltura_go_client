/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPlayReadyContentKey struct for KalturaPlayReadyContentKey
type KalturaPlayReadyContentKey struct {
	// License content key 64 bit encoded
	ContentKey *string `json:"contentKey,omitempty"`
	// Guid - key id of the specific content
	KeyId *string `json:"keyId,omitempty"`
}

// NewKalturaPlayReadyContentKey instantiates a new KalturaPlayReadyContentKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPlayReadyContentKey() *KalturaPlayReadyContentKey {
	this := KalturaPlayReadyContentKey{}
	return &this
}

// NewKalturaPlayReadyContentKeyWithDefaults instantiates a new KalturaPlayReadyContentKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPlayReadyContentKeyWithDefaults() *KalturaPlayReadyContentKey {
	this := KalturaPlayReadyContentKey{}
	return &this
}

// GetContentKey returns the ContentKey field value if set, zero value otherwise.
func (o *KalturaPlayReadyContentKey) GetContentKey() string {
	if o == nil || o.ContentKey == nil {
		var ret string
		return ret
	}
	return *o.ContentKey
}

// GetContentKeyOk returns a tuple with the ContentKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPlayReadyContentKey) GetContentKeyOk() (*string, bool) {
	if o == nil || o.ContentKey == nil {
		return nil, false
	}
	return o.ContentKey, true
}

// HasContentKey returns a boolean if a field has been set.
func (o *KalturaPlayReadyContentKey) HasContentKey() bool {
	if o != nil && o.ContentKey != nil {
		return true
	}

	return false
}

// SetContentKey gets a reference to the given string and assigns it to the ContentKey field.
func (o *KalturaPlayReadyContentKey) SetContentKey(v string) {
	o.ContentKey = &v
}

// GetKeyId returns the KeyId field value if set, zero value otherwise.
func (o *KalturaPlayReadyContentKey) GetKeyId() string {
	if o == nil || o.KeyId == nil {
		var ret string
		return ret
	}
	return *o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPlayReadyContentKey) GetKeyIdOk() (*string, bool) {
	if o == nil || o.KeyId == nil {
		return nil, false
	}
	return o.KeyId, true
}

// HasKeyId returns a boolean if a field has been set.
func (o *KalturaPlayReadyContentKey) HasKeyId() bool {
	if o != nil && o.KeyId != nil {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given string and assigns it to the KeyId field.
func (o *KalturaPlayReadyContentKey) SetKeyId(v string) {
	o.KeyId = &v
}

func (o KalturaPlayReadyContentKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContentKey != nil {
		toSerialize["contentKey"] = o.ContentKey
	}
	if o.KeyId != nil {
		toSerialize["keyId"] = o.KeyId
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPlayReadyContentKey struct {
	value *KalturaPlayReadyContentKey
	isSet bool
}

func (v NullableKalturaPlayReadyContentKey) Get() *KalturaPlayReadyContentKey {
	return v.value
}

func (v *NullableKalturaPlayReadyContentKey) Set(val *KalturaPlayReadyContentKey) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPlayReadyContentKey) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPlayReadyContentKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPlayReadyContentKey(val *KalturaPlayReadyContentKey) *NullableKalturaPlayReadyContentKey {
	return &NullableKalturaPlayReadyContentKey{value: val, isSet: true}
}

func (v NullableKalturaPlayReadyContentKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPlayReadyContentKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


