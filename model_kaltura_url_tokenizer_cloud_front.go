/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaUrlTokenizerCloudFront struct for KalturaUrlTokenizerCloudFront
type KalturaUrlTokenizerCloudFront struct {
	KalturaUrlTokenizer
}

// NewKalturaUrlTokenizerCloudFront instantiates a new KalturaUrlTokenizerCloudFront object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaUrlTokenizerCloudFront() *KalturaUrlTokenizerCloudFront {
	this := KalturaUrlTokenizerCloudFront{}
	return &this
}

// NewKalturaUrlTokenizerCloudFrontWithDefaults instantiates a new KalturaUrlTokenizerCloudFront object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaUrlTokenizerCloudFrontWithDefaults() *KalturaUrlTokenizerCloudFront {
	this := KalturaUrlTokenizerCloudFront{}
	return &this
}

func (o KalturaUrlTokenizerCloudFront) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaUrlTokenizer, errKalturaUrlTokenizer := json.Marshal(o.KalturaUrlTokenizer)
	if errKalturaUrlTokenizer != nil {
		return []byte{}, errKalturaUrlTokenizer
	}
	errKalturaUrlTokenizer = json.Unmarshal([]byte(serializedKalturaUrlTokenizer), &toSerialize)
	if errKalturaUrlTokenizer != nil {
		return []byte{}, errKalturaUrlTokenizer
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaUrlTokenizerCloudFront struct {
	value *KalturaUrlTokenizerCloudFront
	isSet bool
}

func (v NullableKalturaUrlTokenizerCloudFront) Get() *KalturaUrlTokenizerCloudFront {
	return v.value
}

func (v *NullableKalturaUrlTokenizerCloudFront) Set(val *KalturaUrlTokenizerCloudFront) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaUrlTokenizerCloudFront) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaUrlTokenizerCloudFront) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaUrlTokenizerCloudFront(val *KalturaUrlTokenizerCloudFront) *NullableKalturaUrlTokenizerCloudFront {
	return &NullableKalturaUrlTokenizerCloudFront{value: val, isSet: true}
}

func (v NullableKalturaUrlTokenizerCloudFront) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaUrlTokenizerCloudFront) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


