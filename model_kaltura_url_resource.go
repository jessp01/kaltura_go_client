/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaUrlResource Used to ingest media that is available on remote server and accessible using the supplied URL, media file will be downloaded using import job in order to make the asset ready.
type KalturaUrlResource struct {
	KalturaContentResource
}

// NewKalturaUrlResource instantiates a new KalturaUrlResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaUrlResource() *KalturaUrlResource {
	this := KalturaUrlResource{}
	return &this
}

// NewKalturaUrlResourceWithDefaults instantiates a new KalturaUrlResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaUrlResourceWithDefaults() *KalturaUrlResource {
	this := KalturaUrlResource{}
	return &this
}

func (o KalturaUrlResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaContentResource, errKalturaContentResource := json.Marshal(o.KalturaContentResource)
	if errKalturaContentResource != nil {
		return []byte{}, errKalturaContentResource
	}
	errKalturaContentResource = json.Unmarshal([]byte(serializedKalturaContentResource), &toSerialize)
	if errKalturaContentResource != nil {
		return []byte{}, errKalturaContentResource
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaUrlResource struct {
	value *KalturaUrlResource
	isSet bool
}

func (v NullableKalturaUrlResource) Get() *KalturaUrlResource {
	return v.value
}

func (v *NullableKalturaUrlResource) Set(val *KalturaUrlResource) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaUrlResource) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaUrlResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaUrlResource(val *KalturaUrlResource) *NullableKalturaUrlResource {
	return &NullableKalturaUrlResource{value: val, isSet: true}
}

func (v NullableKalturaUrlResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaUrlResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


