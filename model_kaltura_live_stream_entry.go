/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLiveStreamEntry struct for KalturaLiveStreamEntry
type KalturaLiveStreamEntry struct {
	KalturaLiveEntry
}

// NewKalturaLiveStreamEntry instantiates a new KalturaLiveStreamEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLiveStreamEntry() *KalturaLiveStreamEntry {
	this := KalturaLiveStreamEntry{}
	return &this
}

// NewKalturaLiveStreamEntryWithDefaults instantiates a new KalturaLiveStreamEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLiveStreamEntryWithDefaults() *KalturaLiveStreamEntry {
	this := KalturaLiveStreamEntry{}
	return &this
}

func (o KalturaLiveStreamEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaLiveEntry, errKalturaLiveEntry := json.Marshal(o.KalturaLiveEntry)
	if errKalturaLiveEntry != nil {
		return []byte{}, errKalturaLiveEntry
	}
	errKalturaLiveEntry = json.Unmarshal([]byte(serializedKalturaLiveEntry), &toSerialize)
	if errKalturaLiveEntry != nil {
		return []byte{}, errKalturaLiveEntry
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLiveStreamEntry struct {
	value *KalturaLiveStreamEntry
	isSet bool
}

func (v NullableKalturaLiveStreamEntry) Get() *KalturaLiveStreamEntry {
	return v.value
}

func (v *NullableKalturaLiveStreamEntry) Set(val *KalturaLiveStreamEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLiveStreamEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLiveStreamEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLiveStreamEntry(val *KalturaLiveStreamEntry) *NullableKalturaLiveStreamEntry {
	return &NullableKalturaLiveStreamEntry{value: val, isSet: true}
}

func (v NullableKalturaLiveStreamEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLiveStreamEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


