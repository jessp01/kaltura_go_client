/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PermissionDeleteRequest struct for PermissionDeleteRequest
type PermissionDeleteRequest struct {
	PermissionName string `json:"permissionName"`
}

// NewPermissionDeleteRequest instantiates a new PermissionDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionDeleteRequest(permissionName string) *PermissionDeleteRequest {
	this := PermissionDeleteRequest{}
	this.PermissionName = permissionName
	return &this
}

// NewPermissionDeleteRequestWithDefaults instantiates a new PermissionDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionDeleteRequestWithDefaults() *PermissionDeleteRequest {
	this := PermissionDeleteRequest{}
	return &this
}

// GetPermissionName returns the PermissionName field value
func (o *PermissionDeleteRequest) GetPermissionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PermissionName
}

// GetPermissionNameOk returns a tuple with the PermissionName field value
// and a boolean to check if the value has been set.
func (o *PermissionDeleteRequest) GetPermissionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PermissionName, true
}

// SetPermissionName sets field value
func (o *PermissionDeleteRequest) SetPermissionName(v string) {
	o.PermissionName = v
}

func (o PermissionDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["permissionName"] = o.PermissionName
	}
	return json.Marshal(toSerialize)
}

type NullablePermissionDeleteRequest struct {
	value *PermissionDeleteRequest
	isSet bool
}

func (v NullablePermissionDeleteRequest) Get() *PermissionDeleteRequest {
	return v.value
}

func (v *NullablePermissionDeleteRequest) Set(val *PermissionDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionDeleteRequest(val *PermissionDeleteRequest) *NullablePermissionDeleteRequest {
	return &NullablePermissionDeleteRequest{value: val, isSet: true}
}

func (v NullablePermissionDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


