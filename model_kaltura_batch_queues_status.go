/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBatchQueuesStatus struct for KalturaBatchQueuesStatus
type KalturaBatchQueuesStatus struct {
	// Enum Type: `KalturaBatchJobType`
	JobType *string `json:"jobType,omitempty"`
	// The size of the queue
	Size *int32 `json:"size,omitempty"`
	// The friendly name of the type
	TypeName *string `json:"typeName,omitempty"`
	// The avarage wait time
	WaitTime *int32 `json:"waitTime,omitempty"`
	// The worker configured id
	WorkerId *int32 `json:"workerId,omitempty"`
}

// NewKalturaBatchQueuesStatus instantiates a new KalturaBatchQueuesStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBatchQueuesStatus() *KalturaBatchQueuesStatus {
	this := KalturaBatchQueuesStatus{}
	return &this
}

// NewKalturaBatchQueuesStatusWithDefaults instantiates a new KalturaBatchQueuesStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBatchQueuesStatusWithDefaults() *KalturaBatchQueuesStatus {
	this := KalturaBatchQueuesStatus{}
	return &this
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *KalturaBatchQueuesStatus) GetJobType() string {
	if o == nil || o.JobType == nil {
		var ret string
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchQueuesStatus) GetJobTypeOk() (*string, bool) {
	if o == nil || o.JobType == nil {
		return nil, false
	}
	return o.JobType, true
}

// HasJobType returns a boolean if a field has been set.
func (o *KalturaBatchQueuesStatus) HasJobType() bool {
	if o != nil && o.JobType != nil {
		return true
	}

	return false
}

// SetJobType gets a reference to the given string and assigns it to the JobType field.
func (o *KalturaBatchQueuesStatus) SetJobType(v string) {
	o.JobType = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *KalturaBatchQueuesStatus) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchQueuesStatus) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *KalturaBatchQueuesStatus) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *KalturaBatchQueuesStatus) SetSize(v int32) {
	o.Size = &v
}

// GetTypeName returns the TypeName field value if set, zero value otherwise.
func (o *KalturaBatchQueuesStatus) GetTypeName() string {
	if o == nil || o.TypeName == nil {
		var ret string
		return ret
	}
	return *o.TypeName
}

// GetTypeNameOk returns a tuple with the TypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchQueuesStatus) GetTypeNameOk() (*string, bool) {
	if o == nil || o.TypeName == nil {
		return nil, false
	}
	return o.TypeName, true
}

// HasTypeName returns a boolean if a field has been set.
func (o *KalturaBatchQueuesStatus) HasTypeName() bool {
	if o != nil && o.TypeName != nil {
		return true
	}

	return false
}

// SetTypeName gets a reference to the given string and assigns it to the TypeName field.
func (o *KalturaBatchQueuesStatus) SetTypeName(v string) {
	o.TypeName = &v
}

// GetWaitTime returns the WaitTime field value if set, zero value otherwise.
func (o *KalturaBatchQueuesStatus) GetWaitTime() int32 {
	if o == nil || o.WaitTime == nil {
		var ret int32
		return ret
	}
	return *o.WaitTime
}

// GetWaitTimeOk returns a tuple with the WaitTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchQueuesStatus) GetWaitTimeOk() (*int32, bool) {
	if o == nil || o.WaitTime == nil {
		return nil, false
	}
	return o.WaitTime, true
}

// HasWaitTime returns a boolean if a field has been set.
func (o *KalturaBatchQueuesStatus) HasWaitTime() bool {
	if o != nil && o.WaitTime != nil {
		return true
	}

	return false
}

// SetWaitTime gets a reference to the given int32 and assigns it to the WaitTime field.
func (o *KalturaBatchQueuesStatus) SetWaitTime(v int32) {
	o.WaitTime = &v
}

// GetWorkerId returns the WorkerId field value if set, zero value otherwise.
func (o *KalturaBatchQueuesStatus) GetWorkerId() int32 {
	if o == nil || o.WorkerId == nil {
		var ret int32
		return ret
	}
	return *o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchQueuesStatus) GetWorkerIdOk() (*int32, bool) {
	if o == nil || o.WorkerId == nil {
		return nil, false
	}
	return o.WorkerId, true
}

// HasWorkerId returns a boolean if a field has been set.
func (o *KalturaBatchQueuesStatus) HasWorkerId() bool {
	if o != nil && o.WorkerId != nil {
		return true
	}

	return false
}

// SetWorkerId gets a reference to the given int32 and assigns it to the WorkerId field.
func (o *KalturaBatchQueuesStatus) SetWorkerId(v int32) {
	o.WorkerId = &v
}

func (o KalturaBatchQueuesStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.JobType != nil {
		toSerialize["jobType"] = o.JobType
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.TypeName != nil {
		toSerialize["typeName"] = o.TypeName
	}
	if o.WaitTime != nil {
		toSerialize["waitTime"] = o.WaitTime
	}
	if o.WorkerId != nil {
		toSerialize["workerId"] = o.WorkerId
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBatchQueuesStatus struct {
	value *KalturaBatchQueuesStatus
	isSet bool
}

func (v NullableKalturaBatchQueuesStatus) Get() *KalturaBatchQueuesStatus {
	return v.value
}

func (v *NullableKalturaBatchQueuesStatus) Set(val *KalturaBatchQueuesStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBatchQueuesStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBatchQueuesStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBatchQueuesStatus(val *KalturaBatchQueuesStatus) *NullableKalturaBatchQueuesStatus {
	return &NullableKalturaBatchQueuesStatus{value: val, isSet: true}
}

func (v NullableKalturaBatchQueuesStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBatchQueuesStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


