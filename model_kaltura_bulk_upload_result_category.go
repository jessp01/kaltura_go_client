/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBulkUploadResultCategory struct for KalturaBulkUploadResultCategory
type KalturaBulkUploadResultCategory struct {
	KalturaBulkUploadResult
}

// NewKalturaBulkUploadResultCategory instantiates a new KalturaBulkUploadResultCategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBulkUploadResultCategory() *KalturaBulkUploadResultCategory {
	this := KalturaBulkUploadResultCategory{}
	return &this
}

// NewKalturaBulkUploadResultCategoryWithDefaults instantiates a new KalturaBulkUploadResultCategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBulkUploadResultCategoryWithDefaults() *KalturaBulkUploadResultCategory {
	this := KalturaBulkUploadResultCategory{}
	return &this
}

func (o KalturaBulkUploadResultCategory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBulkUploadResult, errKalturaBulkUploadResult := json.Marshal(o.KalturaBulkUploadResult)
	if errKalturaBulkUploadResult != nil {
		return []byte{}, errKalturaBulkUploadResult
	}
	errKalturaBulkUploadResult = json.Unmarshal([]byte(serializedKalturaBulkUploadResult), &toSerialize)
	if errKalturaBulkUploadResult != nil {
		return []byte{}, errKalturaBulkUploadResult
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBulkUploadResultCategory struct {
	value *KalturaBulkUploadResultCategory
	isSet bool
}

func (v NullableKalturaBulkUploadResultCategory) Get() *KalturaBulkUploadResultCategory {
	return v.value
}

func (v *NullableKalturaBulkUploadResultCategory) Set(val *KalturaBulkUploadResultCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBulkUploadResultCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBulkUploadResultCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBulkUploadResultCategory(val *KalturaBulkUploadResultCategory) *NullableKalturaBulkUploadResultCategory {
	return &NullableKalturaBulkUploadResultCategory{value: val, isSet: true}
}

func (v NullableKalturaBulkUploadResultCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBulkUploadResultCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


