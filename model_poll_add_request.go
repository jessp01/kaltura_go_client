/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PollAddRequest struct for PollAddRequest
type PollAddRequest struct {
	PollType *string `json:"pollType,omitempty"`
}

// NewPollAddRequest instantiates a new PollAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPollAddRequest() *PollAddRequest {
	this := PollAddRequest{}
	var pollType string = "SINGLE_ANONYMOUS"
	this.PollType = &pollType
	return &this
}

// NewPollAddRequestWithDefaults instantiates a new PollAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPollAddRequestWithDefaults() *PollAddRequest {
	this := PollAddRequest{}
	var pollType string = "SINGLE_ANONYMOUS"
	this.PollType = &pollType
	return &this
}

// GetPollType returns the PollType field value if set, zero value otherwise.
func (o *PollAddRequest) GetPollType() string {
	if o == nil || o.PollType == nil {
		var ret string
		return ret
	}
	return *o.PollType
}

// GetPollTypeOk returns a tuple with the PollType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PollAddRequest) GetPollTypeOk() (*string, bool) {
	if o == nil || o.PollType == nil {
		return nil, false
	}
	return o.PollType, true
}

// HasPollType returns a boolean if a field has been set.
func (o *PollAddRequest) HasPollType() bool {
	if o != nil && o.PollType != nil {
		return true
	}

	return false
}

// SetPollType gets a reference to the given string and assigns it to the PollType field.
func (o *PollAddRequest) SetPollType(v string) {
	o.PollType = &v
}

func (o PollAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PollType != nil {
		toSerialize["pollType"] = o.PollType
	}
	return json.Marshal(toSerialize)
}

type NullablePollAddRequest struct {
	value *PollAddRequest
	isSet bool
}

func (v NullablePollAddRequest) Get() *PollAddRequest {
	return v.value
}

func (v *NullablePollAddRequest) Set(val *PollAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePollAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePollAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePollAddRequest(val *PollAddRequest) *NullablePollAddRequest {
	return &NullablePollAddRequest{value: val, isSet: true}
}

func (v NullablePollAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePollAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


