/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaCsvAdditionalFieldInfo struct for KalturaCsvAdditionalFieldInfo
type KalturaCsvAdditionalFieldInfo struct {
	FieldName *string `json:"fieldName,omitempty"`
	Xpath *string `json:"xpath,omitempty"`
}

// NewKalturaCsvAdditionalFieldInfo instantiates a new KalturaCsvAdditionalFieldInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaCsvAdditionalFieldInfo() *KalturaCsvAdditionalFieldInfo {
	this := KalturaCsvAdditionalFieldInfo{}
	return &this
}

// NewKalturaCsvAdditionalFieldInfoWithDefaults instantiates a new KalturaCsvAdditionalFieldInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaCsvAdditionalFieldInfoWithDefaults() *KalturaCsvAdditionalFieldInfo {
	this := KalturaCsvAdditionalFieldInfo{}
	return &this
}

// GetFieldName returns the FieldName field value if set, zero value otherwise.
func (o *KalturaCsvAdditionalFieldInfo) GetFieldName() string {
	if o == nil || o.FieldName == nil {
		var ret string
		return ret
	}
	return *o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCsvAdditionalFieldInfo) GetFieldNameOk() (*string, bool) {
	if o == nil || o.FieldName == nil {
		return nil, false
	}
	return o.FieldName, true
}

// HasFieldName returns a boolean if a field has been set.
func (o *KalturaCsvAdditionalFieldInfo) HasFieldName() bool {
	if o != nil && o.FieldName != nil {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given string and assigns it to the FieldName field.
func (o *KalturaCsvAdditionalFieldInfo) SetFieldName(v string) {
	o.FieldName = &v
}

// GetXpath returns the Xpath field value if set, zero value otherwise.
func (o *KalturaCsvAdditionalFieldInfo) GetXpath() string {
	if o == nil || o.Xpath == nil {
		var ret string
		return ret
	}
	return *o.Xpath
}

// GetXpathOk returns a tuple with the Xpath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCsvAdditionalFieldInfo) GetXpathOk() (*string, bool) {
	if o == nil || o.Xpath == nil {
		return nil, false
	}
	return o.Xpath, true
}

// HasXpath returns a boolean if a field has been set.
func (o *KalturaCsvAdditionalFieldInfo) HasXpath() bool {
	if o != nil && o.Xpath != nil {
		return true
	}

	return false
}

// SetXpath gets a reference to the given string and assigns it to the Xpath field.
func (o *KalturaCsvAdditionalFieldInfo) SetXpath(v string) {
	o.Xpath = &v
}

func (o KalturaCsvAdditionalFieldInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FieldName != nil {
		toSerialize["fieldName"] = o.FieldName
	}
	if o.Xpath != nil {
		toSerialize["xpath"] = o.Xpath
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaCsvAdditionalFieldInfo struct {
	value *KalturaCsvAdditionalFieldInfo
	isSet bool
}

func (v NullableKalturaCsvAdditionalFieldInfo) Get() *KalturaCsvAdditionalFieldInfo {
	return v.value
}

func (v *NullableKalturaCsvAdditionalFieldInfo) Set(val *KalturaCsvAdditionalFieldInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaCsvAdditionalFieldInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaCsvAdditionalFieldInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaCsvAdditionalFieldInfo(val *KalturaCsvAdditionalFieldInfo) *NullableKalturaCsvAdditionalFieldInfo {
	return &NullableKalturaCsvAdditionalFieldInfo{value: val, isSet: true}
}

func (v NullableKalturaCsvAdditionalFieldInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaCsvAdditionalFieldInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


