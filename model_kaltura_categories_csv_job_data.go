/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaCategoriesCsvJobData struct for KalturaCategoriesCsvJobData
type KalturaCategoriesCsvJobData struct {
	KalturaMappedObjectsCsvJobData
}

// NewKalturaCategoriesCsvJobData instantiates a new KalturaCategoriesCsvJobData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaCategoriesCsvJobData() *KalturaCategoriesCsvJobData {
	this := KalturaCategoriesCsvJobData{}
	return &this
}

// NewKalturaCategoriesCsvJobDataWithDefaults instantiates a new KalturaCategoriesCsvJobData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaCategoriesCsvJobDataWithDefaults() *KalturaCategoriesCsvJobData {
	this := KalturaCategoriesCsvJobData{}
	return &this
}

func (o KalturaCategoriesCsvJobData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaMappedObjectsCsvJobData, errKalturaMappedObjectsCsvJobData := json.Marshal(o.KalturaMappedObjectsCsvJobData)
	if errKalturaMappedObjectsCsvJobData != nil {
		return []byte{}, errKalturaMappedObjectsCsvJobData
	}
	errKalturaMappedObjectsCsvJobData = json.Unmarshal([]byte(serializedKalturaMappedObjectsCsvJobData), &toSerialize)
	if errKalturaMappedObjectsCsvJobData != nil {
		return []byte{}, errKalturaMappedObjectsCsvJobData
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaCategoriesCsvJobData struct {
	value *KalturaCategoriesCsvJobData
	isSet bool
}

func (v NullableKalturaCategoriesCsvJobData) Get() *KalturaCategoriesCsvJobData {
	return v.value
}

func (v *NullableKalturaCategoriesCsvJobData) Set(val *KalturaCategoriesCsvJobData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaCategoriesCsvJobData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaCategoriesCsvJobData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaCategoriesCsvJobData(val *KalturaCategoriesCsvJobData) *NullableKalturaCategoriesCsvJobData {
	return &NullableKalturaCategoriesCsvJobData{value: val, isSet: true}
}

func (v NullableKalturaCategoriesCsvJobData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaCategoriesCsvJobData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


