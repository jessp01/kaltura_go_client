/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaEntryVendorTaskFilter struct for KalturaEntryVendorTaskFilter
type KalturaEntryVendorTaskFilter struct {
	KalturaEntryVendorTaskBaseFilter
}

// NewKalturaEntryVendorTaskFilter instantiates a new KalturaEntryVendorTaskFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaEntryVendorTaskFilter() *KalturaEntryVendorTaskFilter {
	this := KalturaEntryVendorTaskFilter{}
	return &this
}

// NewKalturaEntryVendorTaskFilterWithDefaults instantiates a new KalturaEntryVendorTaskFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaEntryVendorTaskFilterWithDefaults() *KalturaEntryVendorTaskFilter {
	this := KalturaEntryVendorTaskFilter{}
	return &this
}

func (o KalturaEntryVendorTaskFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaEntryVendorTaskBaseFilter, errKalturaEntryVendorTaskBaseFilter := json.Marshal(o.KalturaEntryVendorTaskBaseFilter)
	if errKalturaEntryVendorTaskBaseFilter != nil {
		return []byte{}, errKalturaEntryVendorTaskBaseFilter
	}
	errKalturaEntryVendorTaskBaseFilter = json.Unmarshal([]byte(serializedKalturaEntryVendorTaskBaseFilter), &toSerialize)
	if errKalturaEntryVendorTaskBaseFilter != nil {
		return []byte{}, errKalturaEntryVendorTaskBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaEntryVendorTaskFilter struct {
	value *KalturaEntryVendorTaskFilter
	isSet bool
}

func (v NullableKalturaEntryVendorTaskFilter) Get() *KalturaEntryVendorTaskFilter {
	return v.value
}

func (v *NullableKalturaEntryVendorTaskFilter) Set(val *KalturaEntryVendorTaskFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaEntryVendorTaskFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaEntryVendorTaskFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaEntryVendorTaskFilter(val *KalturaEntryVendorTaskFilter) *NullableKalturaEntryVendorTaskFilter {
	return &NullableKalturaEntryVendorTaskFilter{value: val, isSet: true}
}

func (v NullableKalturaEntryVendorTaskFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaEntryVendorTaskFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


