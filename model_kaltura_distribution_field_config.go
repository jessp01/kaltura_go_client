/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaDistributionFieldConfig struct for KalturaDistributionFieldConfig
type KalturaDistributionFieldConfig struct {
	// An XSLT string that extracts the right value from the Kaltura entry MRSS XML.      The value of the current connector field will be the one that is returned from transforming the Kaltura entry MRSS XML using this XSLT string.
	EntryMrssXslt *string `json:"entryMrssXslt,omitempty"`
	// A value taken from a connector field enum which associates the current configuration to that connector field      Field enum class should be returned by the provider's getFieldEnumClass function.
	FieldName *string `json:"fieldName,omitempty"`
	// `readOnly`  Is this field config is the default for the distribution provider?
	IsDefault *bool `json:"isDefault,omitempty"`
	// Enum Type: `KalturaDistributionFieldRequiredStatus`  Is the field required to have a value for submission ?
	IsRequired *int32 `json:"isRequired,omitempty"`
	// Is an error on this field going to trigger deletion of distributed content?
	TriggerDeleteOnError *bool `json:"triggerDeleteOnError,omitempty"`
	Type *string `json:"type,omitempty"`
	// Trigger distribution update when this field changes or not ?
	UpdateOnChange *bool `json:"updateOnChange,omitempty"`
	UpdateParams []KalturaString `json:"updateParams,omitempty"`
	// A string that will be shown to the user as the field name in error messages related to the current field
	UserFriendlyFieldName *string `json:"userFriendlyFieldName,omitempty"`
}

// NewKalturaDistributionFieldConfig instantiates a new KalturaDistributionFieldConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaDistributionFieldConfig() *KalturaDistributionFieldConfig {
	this := KalturaDistributionFieldConfig{}
	return &this
}

// NewKalturaDistributionFieldConfigWithDefaults instantiates a new KalturaDistributionFieldConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaDistributionFieldConfigWithDefaults() *KalturaDistributionFieldConfig {
	this := KalturaDistributionFieldConfig{}
	return &this
}

// GetEntryMrssXslt returns the EntryMrssXslt field value if set, zero value otherwise.
func (o *KalturaDistributionFieldConfig) GetEntryMrssXslt() string {
	if o == nil || o.EntryMrssXslt == nil {
		var ret string
		return ret
	}
	return *o.EntryMrssXslt
}

// GetEntryMrssXsltOk returns a tuple with the EntryMrssXslt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDistributionFieldConfig) GetEntryMrssXsltOk() (*string, bool) {
	if o == nil || o.EntryMrssXslt == nil {
		return nil, false
	}
	return o.EntryMrssXslt, true
}

// HasEntryMrssXslt returns a boolean if a field has been set.
func (o *KalturaDistributionFieldConfig) HasEntryMrssXslt() bool {
	if o != nil && o.EntryMrssXslt != nil {
		return true
	}

	return false
}

// SetEntryMrssXslt gets a reference to the given string and assigns it to the EntryMrssXslt field.
func (o *KalturaDistributionFieldConfig) SetEntryMrssXslt(v string) {
	o.EntryMrssXslt = &v
}

// GetFieldName returns the FieldName field value if set, zero value otherwise.
func (o *KalturaDistributionFieldConfig) GetFieldName() string {
	if o == nil || o.FieldName == nil {
		var ret string
		return ret
	}
	return *o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDistributionFieldConfig) GetFieldNameOk() (*string, bool) {
	if o == nil || o.FieldName == nil {
		return nil, false
	}
	return o.FieldName, true
}

// HasFieldName returns a boolean if a field has been set.
func (o *KalturaDistributionFieldConfig) HasFieldName() bool {
	if o != nil && o.FieldName != nil {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given string and assigns it to the FieldName field.
func (o *KalturaDistributionFieldConfig) SetFieldName(v string) {
	o.FieldName = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *KalturaDistributionFieldConfig) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDistributionFieldConfig) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *KalturaDistributionFieldConfig) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *KalturaDistributionFieldConfig) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetIsRequired returns the IsRequired field value if set, zero value otherwise.
func (o *KalturaDistributionFieldConfig) GetIsRequired() int32 {
	if o == nil || o.IsRequired == nil {
		var ret int32
		return ret
	}
	return *o.IsRequired
}

// GetIsRequiredOk returns a tuple with the IsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDistributionFieldConfig) GetIsRequiredOk() (*int32, bool) {
	if o == nil || o.IsRequired == nil {
		return nil, false
	}
	return o.IsRequired, true
}

// HasIsRequired returns a boolean if a field has been set.
func (o *KalturaDistributionFieldConfig) HasIsRequired() bool {
	if o != nil && o.IsRequired != nil {
		return true
	}

	return false
}

// SetIsRequired gets a reference to the given int32 and assigns it to the IsRequired field.
func (o *KalturaDistributionFieldConfig) SetIsRequired(v int32) {
	o.IsRequired = &v
}

// GetTriggerDeleteOnError returns the TriggerDeleteOnError field value if set, zero value otherwise.
func (o *KalturaDistributionFieldConfig) GetTriggerDeleteOnError() bool {
	if o == nil || o.TriggerDeleteOnError == nil {
		var ret bool
		return ret
	}
	return *o.TriggerDeleteOnError
}

// GetTriggerDeleteOnErrorOk returns a tuple with the TriggerDeleteOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDistributionFieldConfig) GetTriggerDeleteOnErrorOk() (*bool, bool) {
	if o == nil || o.TriggerDeleteOnError == nil {
		return nil, false
	}
	return o.TriggerDeleteOnError, true
}

// HasTriggerDeleteOnError returns a boolean if a field has been set.
func (o *KalturaDistributionFieldConfig) HasTriggerDeleteOnError() bool {
	if o != nil && o.TriggerDeleteOnError != nil {
		return true
	}

	return false
}

// SetTriggerDeleteOnError gets a reference to the given bool and assigns it to the TriggerDeleteOnError field.
func (o *KalturaDistributionFieldConfig) SetTriggerDeleteOnError(v bool) {
	o.TriggerDeleteOnError = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaDistributionFieldConfig) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDistributionFieldConfig) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaDistributionFieldConfig) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *KalturaDistributionFieldConfig) SetType(v string) {
	o.Type = &v
}

// GetUpdateOnChange returns the UpdateOnChange field value if set, zero value otherwise.
func (o *KalturaDistributionFieldConfig) GetUpdateOnChange() bool {
	if o == nil || o.UpdateOnChange == nil {
		var ret bool
		return ret
	}
	return *o.UpdateOnChange
}

// GetUpdateOnChangeOk returns a tuple with the UpdateOnChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDistributionFieldConfig) GetUpdateOnChangeOk() (*bool, bool) {
	if o == nil || o.UpdateOnChange == nil {
		return nil, false
	}
	return o.UpdateOnChange, true
}

// HasUpdateOnChange returns a boolean if a field has been set.
func (o *KalturaDistributionFieldConfig) HasUpdateOnChange() bool {
	if o != nil && o.UpdateOnChange != nil {
		return true
	}

	return false
}

// SetUpdateOnChange gets a reference to the given bool and assigns it to the UpdateOnChange field.
func (o *KalturaDistributionFieldConfig) SetUpdateOnChange(v bool) {
	o.UpdateOnChange = &v
}

// GetUpdateParams returns the UpdateParams field value if set, zero value otherwise.
func (o *KalturaDistributionFieldConfig) GetUpdateParams() []KalturaString {
	if o == nil || o.UpdateParams == nil {
		var ret []KalturaString
		return ret
	}
	return o.UpdateParams
}

// GetUpdateParamsOk returns a tuple with the UpdateParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDistributionFieldConfig) GetUpdateParamsOk() ([]KalturaString, bool) {
	if o == nil || o.UpdateParams == nil {
		return nil, false
	}
	return o.UpdateParams, true
}

// HasUpdateParams returns a boolean if a field has been set.
func (o *KalturaDistributionFieldConfig) HasUpdateParams() bool {
	if o != nil && o.UpdateParams != nil {
		return true
	}

	return false
}

// SetUpdateParams gets a reference to the given []KalturaString and assigns it to the UpdateParams field.
func (o *KalturaDistributionFieldConfig) SetUpdateParams(v []KalturaString) {
	o.UpdateParams = v
}

// GetUserFriendlyFieldName returns the UserFriendlyFieldName field value if set, zero value otherwise.
func (o *KalturaDistributionFieldConfig) GetUserFriendlyFieldName() string {
	if o == nil || o.UserFriendlyFieldName == nil {
		var ret string
		return ret
	}
	return *o.UserFriendlyFieldName
}

// GetUserFriendlyFieldNameOk returns a tuple with the UserFriendlyFieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDistributionFieldConfig) GetUserFriendlyFieldNameOk() (*string, bool) {
	if o == nil || o.UserFriendlyFieldName == nil {
		return nil, false
	}
	return o.UserFriendlyFieldName, true
}

// HasUserFriendlyFieldName returns a boolean if a field has been set.
func (o *KalturaDistributionFieldConfig) HasUserFriendlyFieldName() bool {
	if o != nil && o.UserFriendlyFieldName != nil {
		return true
	}

	return false
}

// SetUserFriendlyFieldName gets a reference to the given string and assigns it to the UserFriendlyFieldName field.
func (o *KalturaDistributionFieldConfig) SetUserFriendlyFieldName(v string) {
	o.UserFriendlyFieldName = &v
}

func (o KalturaDistributionFieldConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntryMrssXslt != nil {
		toSerialize["entryMrssXslt"] = o.EntryMrssXslt
	}
	if o.FieldName != nil {
		toSerialize["fieldName"] = o.FieldName
	}
	if o.IsDefault != nil {
		toSerialize["isDefault"] = o.IsDefault
	}
	if o.IsRequired != nil {
		toSerialize["isRequired"] = o.IsRequired
	}
	if o.TriggerDeleteOnError != nil {
		toSerialize["triggerDeleteOnError"] = o.TriggerDeleteOnError
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdateOnChange != nil {
		toSerialize["updateOnChange"] = o.UpdateOnChange
	}
	if o.UpdateParams != nil {
		toSerialize["updateParams"] = o.UpdateParams
	}
	if o.UserFriendlyFieldName != nil {
		toSerialize["userFriendlyFieldName"] = o.UserFriendlyFieldName
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaDistributionFieldConfig struct {
	value *KalturaDistributionFieldConfig
	isSet bool
}

func (v NullableKalturaDistributionFieldConfig) Get() *KalturaDistributionFieldConfig {
	return v.value
}

func (v *NullableKalturaDistributionFieldConfig) Set(val *KalturaDistributionFieldConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaDistributionFieldConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaDistributionFieldConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaDistributionFieldConfig(val *KalturaDistributionFieldConfig) *NullableKalturaDistributionFieldConfig {
	return &NullableKalturaDistributionFieldConfig{value: val, isSet: true}
}

func (v NullableKalturaDistributionFieldConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaDistributionFieldConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


