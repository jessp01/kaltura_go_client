/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPdfFlavorParamsFilter struct for KalturaPdfFlavorParamsFilter
type KalturaPdfFlavorParamsFilter struct {
	KalturaPdfFlavorParamsBaseFilter
}

// NewKalturaPdfFlavorParamsFilter instantiates a new KalturaPdfFlavorParamsFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPdfFlavorParamsFilter() *KalturaPdfFlavorParamsFilter {
	this := KalturaPdfFlavorParamsFilter{}
	return &this
}

// NewKalturaPdfFlavorParamsFilterWithDefaults instantiates a new KalturaPdfFlavorParamsFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPdfFlavorParamsFilterWithDefaults() *KalturaPdfFlavorParamsFilter {
	this := KalturaPdfFlavorParamsFilter{}
	return &this
}

func (o KalturaPdfFlavorParamsFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaPdfFlavorParamsBaseFilter, errKalturaPdfFlavorParamsBaseFilter := json.Marshal(o.KalturaPdfFlavorParamsBaseFilter)
	if errKalturaPdfFlavorParamsBaseFilter != nil {
		return []byte{}, errKalturaPdfFlavorParamsBaseFilter
	}
	errKalturaPdfFlavorParamsBaseFilter = json.Unmarshal([]byte(serializedKalturaPdfFlavorParamsBaseFilter), &toSerialize)
	if errKalturaPdfFlavorParamsBaseFilter != nil {
		return []byte{}, errKalturaPdfFlavorParamsBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPdfFlavorParamsFilter struct {
	value *KalturaPdfFlavorParamsFilter
	isSet bool
}

func (v NullableKalturaPdfFlavorParamsFilter) Get() *KalturaPdfFlavorParamsFilter {
	return v.value
}

func (v *NullableKalturaPdfFlavorParamsFilter) Set(val *KalturaPdfFlavorParamsFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPdfFlavorParamsFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPdfFlavorParamsFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPdfFlavorParamsFilter(val *KalturaPdfFlavorParamsFilter) *NullableKalturaPdfFlavorParamsFilter {
	return &NullableKalturaPdfFlavorParamsFilter{value: val, isSet: true}
}

func (v NullableKalturaPdfFlavorParamsFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPdfFlavorParamsFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


