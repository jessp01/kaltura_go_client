/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBusinessProcessServerFilter struct for KalturaBusinessProcessServerFilter
type KalturaBusinessProcessServerFilter struct {
	KalturaBusinessProcessServerBaseFilter
}

// NewKalturaBusinessProcessServerFilter instantiates a new KalturaBusinessProcessServerFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBusinessProcessServerFilter() *KalturaBusinessProcessServerFilter {
	this := KalturaBusinessProcessServerFilter{}
	return &this
}

// NewKalturaBusinessProcessServerFilterWithDefaults instantiates a new KalturaBusinessProcessServerFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBusinessProcessServerFilterWithDefaults() *KalturaBusinessProcessServerFilter {
	this := KalturaBusinessProcessServerFilter{}
	return &this
}

func (o KalturaBusinessProcessServerFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBusinessProcessServerBaseFilter, errKalturaBusinessProcessServerBaseFilter := json.Marshal(o.KalturaBusinessProcessServerBaseFilter)
	if errKalturaBusinessProcessServerBaseFilter != nil {
		return []byte{}, errKalturaBusinessProcessServerBaseFilter
	}
	errKalturaBusinessProcessServerBaseFilter = json.Unmarshal([]byte(serializedKalturaBusinessProcessServerBaseFilter), &toSerialize)
	if errKalturaBusinessProcessServerBaseFilter != nil {
		return []byte{}, errKalturaBusinessProcessServerBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBusinessProcessServerFilter struct {
	value *KalturaBusinessProcessServerFilter
	isSet bool
}

func (v NullableKalturaBusinessProcessServerFilter) Get() *KalturaBusinessProcessServerFilter {
	return v.value
}

func (v *NullableKalturaBusinessProcessServerFilter) Set(val *KalturaBusinessProcessServerFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBusinessProcessServerFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBusinessProcessServerFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBusinessProcessServerFilter(val *KalturaBusinessProcessServerFilter) *NullableKalturaBusinessProcessServerFilter {
	return &NullableKalturaBusinessProcessServerFilter{value: val, isSet: true}
}

func (v NullableKalturaBusinessProcessServerFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBusinessProcessServerFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


