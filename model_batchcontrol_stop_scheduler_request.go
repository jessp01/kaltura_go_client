/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchcontrolStopSchedulerRequest struct for BatchcontrolStopSchedulerRequest
type BatchcontrolStopSchedulerRequest struct {
	AdminId int32 `json:"adminId"`
	Cause string `json:"cause"`
	SchedulerId int32 `json:"schedulerId"`
}

// NewBatchcontrolStopSchedulerRequest instantiates a new BatchcontrolStopSchedulerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchcontrolStopSchedulerRequest(adminId int32, cause string, schedulerId int32) *BatchcontrolStopSchedulerRequest {
	this := BatchcontrolStopSchedulerRequest{}
	this.AdminId = adminId
	this.Cause = cause
	this.SchedulerId = schedulerId
	return &this
}

// NewBatchcontrolStopSchedulerRequestWithDefaults instantiates a new BatchcontrolStopSchedulerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchcontrolStopSchedulerRequestWithDefaults() *BatchcontrolStopSchedulerRequest {
	this := BatchcontrolStopSchedulerRequest{}
	return &this
}

// GetAdminId returns the AdminId field value
func (o *BatchcontrolStopSchedulerRequest) GetAdminId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AdminId
}

// GetAdminIdOk returns a tuple with the AdminId field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolStopSchedulerRequest) GetAdminIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminId, true
}

// SetAdminId sets field value
func (o *BatchcontrolStopSchedulerRequest) SetAdminId(v int32) {
	o.AdminId = v
}

// GetCause returns the Cause field value
func (o *BatchcontrolStopSchedulerRequest) GetCause() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cause
}

// GetCauseOk returns a tuple with the Cause field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolStopSchedulerRequest) GetCauseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cause, true
}

// SetCause sets field value
func (o *BatchcontrolStopSchedulerRequest) SetCause(v string) {
	o.Cause = v
}

// GetSchedulerId returns the SchedulerId field value
func (o *BatchcontrolStopSchedulerRequest) GetSchedulerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SchedulerId
}

// GetSchedulerIdOk returns a tuple with the SchedulerId field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolStopSchedulerRequest) GetSchedulerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchedulerId, true
}

// SetSchedulerId sets field value
func (o *BatchcontrolStopSchedulerRequest) SetSchedulerId(v int32) {
	o.SchedulerId = v
}

func (o BatchcontrolStopSchedulerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["adminId"] = o.AdminId
	}
	if true {
		toSerialize["cause"] = o.Cause
	}
	if true {
		toSerialize["schedulerId"] = o.SchedulerId
	}
	return json.Marshal(toSerialize)
}

type NullableBatchcontrolStopSchedulerRequest struct {
	value *BatchcontrolStopSchedulerRequest
	isSet bool
}

func (v NullableBatchcontrolStopSchedulerRequest) Get() *BatchcontrolStopSchedulerRequest {
	return v.value
}

func (v *NullableBatchcontrolStopSchedulerRequest) Set(val *BatchcontrolStopSchedulerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchcontrolStopSchedulerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchcontrolStopSchedulerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchcontrolStopSchedulerRequest(val *BatchcontrolStopSchedulerRequest) *NullableBatchcontrolStopSchedulerRequest {
	return &NullableBatchcontrolStopSchedulerRequest{value: val, isSet: true}
}

func (v NullableBatchcontrolStopSchedulerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchcontrolStopSchedulerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


