/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBulkUploadResultJob struct for KalturaBulkUploadResultJob
type KalturaBulkUploadResultJob struct {
	KalturaBulkUploadResult
}

// NewKalturaBulkUploadResultJob instantiates a new KalturaBulkUploadResultJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBulkUploadResultJob() *KalturaBulkUploadResultJob {
	this := KalturaBulkUploadResultJob{}
	return &this
}

// NewKalturaBulkUploadResultJobWithDefaults instantiates a new KalturaBulkUploadResultJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBulkUploadResultJobWithDefaults() *KalturaBulkUploadResultJob {
	this := KalturaBulkUploadResultJob{}
	return &this
}

func (o KalturaBulkUploadResultJob) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBulkUploadResult, errKalturaBulkUploadResult := json.Marshal(o.KalturaBulkUploadResult)
	if errKalturaBulkUploadResult != nil {
		return []byte{}, errKalturaBulkUploadResult
	}
	errKalturaBulkUploadResult = json.Unmarshal([]byte(serializedKalturaBulkUploadResult), &toSerialize)
	if errKalturaBulkUploadResult != nil {
		return []byte{}, errKalturaBulkUploadResult
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBulkUploadResultJob struct {
	value *KalturaBulkUploadResultJob
	isSet bool
}

func (v NullableKalturaBulkUploadResultJob) Get() *KalturaBulkUploadResultJob {
	return v.value
}

func (v *NullableKalturaBulkUploadResultJob) Set(val *KalturaBulkUploadResultJob) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBulkUploadResultJob) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBulkUploadResultJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBulkUploadResultJob(val *KalturaBulkUploadResultJob) *NullableKalturaBulkUploadResultJob {
	return &NullableKalturaBulkUploadResultJob{value: val, isSet: true}
}

func (v NullableKalturaBulkUploadResultJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBulkUploadResultJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


