/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaEventNotificationParameter struct for KalturaEventNotificationParameter
type KalturaEventNotificationParameter struct {
	Description *string `json:"description,omitempty"`
	// The key in the subject and body to be replaced with the dynamic value
	Key *string `json:"key,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	Value *KalturaStringValue `json:"value,omitempty"`
}

// NewKalturaEventNotificationParameter instantiates a new KalturaEventNotificationParameter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaEventNotificationParameter() *KalturaEventNotificationParameter {
	this := KalturaEventNotificationParameter{}
	return &this
}

// NewKalturaEventNotificationParameterWithDefaults instantiates a new KalturaEventNotificationParameter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaEventNotificationParameterWithDefaults() *KalturaEventNotificationParameter {
	this := KalturaEventNotificationParameter{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KalturaEventNotificationParameter) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationParameter) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KalturaEventNotificationParameter) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KalturaEventNotificationParameter) SetDescription(v string) {
	o.Description = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *KalturaEventNotificationParameter) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationParameter) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *KalturaEventNotificationParameter) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *KalturaEventNotificationParameter) SetKey(v string) {
	o.Key = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaEventNotificationParameter) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationParameter) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaEventNotificationParameter) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaEventNotificationParameter) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *KalturaEventNotificationParameter) GetValue() KalturaStringValue {
	if o == nil || o.Value == nil {
		var ret KalturaStringValue
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEventNotificationParameter) GetValueOk() (*KalturaStringValue, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *KalturaEventNotificationParameter) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given KalturaStringValue and assigns it to the Value field.
func (o *KalturaEventNotificationParameter) SetValue(v KalturaStringValue) {
	o.Value = &v
}

func (o KalturaEventNotificationParameter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaEventNotificationParameter struct {
	value *KalturaEventNotificationParameter
	isSet bool
}

func (v NullableKalturaEventNotificationParameter) Get() *KalturaEventNotificationParameter {
	return v.value
}

func (v *NullableKalturaEventNotificationParameter) Set(val *KalturaEventNotificationParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaEventNotificationParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaEventNotificationParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaEventNotificationParameter(val *KalturaEventNotificationParameter) *NullableKalturaEventNotificationParameter {
	return &NullableKalturaEventNotificationParameter{value: val, isSet: true}
}

func (v NullableKalturaEventNotificationParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaEventNotificationParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


