/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaThumbParamsOutput struct for KalturaThumbParamsOutput
type KalturaThumbParamsOutput struct {
	KalturaThumbParams
}

// NewKalturaThumbParamsOutput instantiates a new KalturaThumbParamsOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaThumbParamsOutput() *KalturaThumbParamsOutput {
	this := KalturaThumbParamsOutput{}
	return &this
}

// NewKalturaThumbParamsOutputWithDefaults instantiates a new KalturaThumbParamsOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaThumbParamsOutputWithDefaults() *KalturaThumbParamsOutput {
	this := KalturaThumbParamsOutput{}
	return &this
}

func (o KalturaThumbParamsOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaThumbParams, errKalturaThumbParams := json.Marshal(o.KalturaThumbParams)
	if errKalturaThumbParams != nil {
		return []byte{}, errKalturaThumbParams
	}
	errKalturaThumbParams = json.Unmarshal([]byte(serializedKalturaThumbParams), &toSerialize)
	if errKalturaThumbParams != nil {
		return []byte{}, errKalturaThumbParams
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaThumbParamsOutput struct {
	value *KalturaThumbParamsOutput
	isSet bool
}

func (v NullableKalturaThumbParamsOutput) Get() *KalturaThumbParamsOutput {
	return v.value
}

func (v *NullableKalturaThumbParamsOutput) Set(val *KalturaThumbParamsOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaThumbParamsOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaThumbParamsOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaThumbParamsOutput(val *KalturaThumbParamsOutput) *NullableKalturaThumbParamsOutput {
	return &NullableKalturaThumbParamsOutput{value: val, isSet: true}
}

func (v NullableKalturaThumbParamsOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaThumbParamsOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


