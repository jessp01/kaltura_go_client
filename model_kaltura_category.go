/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaCategory struct for KalturaCategory
type KalturaCategory struct {
	AdminTags *string `json:"adminTags,omitempty"`
	// List of aggregation channels the category belongs to
	AggregationCategories *string `json:"aggregationCategories,omitempty"`
	// Enum Type: `KalturaAppearInListType`  If category will be returned for list action.
	AppearInList *int32 `json:"appearInList,omitempty"`
	// Enum Type: `KalturaContributionPolicyType`  who can assign entries to this category
	ContributionPolicy *int32 `json:"contributionPolicy,omitempty"`
	// `readOnly`  Creation date as Unix timestamp (In seconds)
	CreatedAt *int32 `json:"createdAt,omitempty"`
	// Enum Type: `KalturaCategoryOrderBy`  Enable client side applications to define how to sort the category child categories
	DefaultOrderBy *string `json:"defaultOrderBy,omitempty"`
	// Enum Type: `KalturaCategoryUserPermissionLevel`  Default permissionLevel for new users
	DefaultPermissionLevel *int32 `json:"defaultPermissionLevel,omitempty"`
	// `readOnly`
	Depth *int32 `json:"depth,omitempty"`
	// Category description
	Description *string `json:"description,omitempty"`
	// `readOnly`  Number of entries that belong to this category directly
	DirectEntriesCount *int32 `json:"directEntriesCount,omitempty"`
	// `readOnly`  Number of direct children categories
	DirectSubCategoriesCount *int32 `json:"directSubCategoriesCount,omitempty"`
	// `readOnly`  Number of entries in this Category (including child categories)
	EntriesCount *int32 `json:"entriesCount,omitempty"`
	// `readOnly`  The full ids of the Category
	FullIds *string `json:"fullIds,omitempty"`
	// `readOnly`  The full name of the Category
	FullName *string `json:"fullName,omitempty"`
	// `readOnly`  The id of the Category
	Id *int32 `json:"id,omitempty"`
	// Enum Type: `KalturaInheritanceType`  If Category members are inherited from parent category or set manualy.
	InheritanceType *int32 `json:"inheritanceType,omitempty"`
	// `readOnly`  The category id that this category inherit its members and members permission (for contribution and join)
	InheritedParentId *int32 `json:"inheritedParentId,omitempty"`
	// Enum Type: `KalturaNullableBoolean`  Flag indicating that the category is an aggregation category
	IsAggregationCategory *int32 `json:"isAggregationCategory,omitempty"`
	// `readOnly`  Number of active members for this category
	MembersCount *int32 `json:"membersCount,omitempty"`
	// Enum Type: `KalturaNullableBoolean`  Moderation to add entries to this category by users that are not of permission level Manager or Moderator.
	Moderation *int32 `json:"moderation,omitempty"`
	// The name of the Category.   The following characters are not allowed: '<', '>', ','
	Name *string `json:"name,omitempty"`
	// Category Owner (User id)
	Owner *string `json:"owner,omitempty"`
	ParentId *int32 `json:"parentId,omitempty"`
	// Can be used to store various partner related data as a string
	PartnerData *string `json:"partnerData,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// Can be used to store various partner related data as a numeric value
	PartnerSortValue *int32 `json:"partnerSortValue,omitempty"`
	// `readOnly`  Nunber of pending moderation entries
	PendingEntriesCount *int32 `json:"pendingEntriesCount,omitempty"`
	// `readOnly`  Number of pending members for this category
	PendingMembersCount *int32 `json:"pendingMembersCount,omitempty"`
	// Enum Type: `KalturaPrivacyType`  defines the privacy of the entries that assigned to this category
	Privacy *int32 `json:"privacy,omitempty"`
	// Set privacy context for search entries that assiged to private and public categories. the entries will be private if the search context is set with those categories.
	PrivacyContext *string `json:"privacyContext,omitempty"`
	// `readOnly`  comma separated parents that defines a privacyContext for search
	PrivacyContexts *string `json:"privacyContexts,omitempty"`
	// Category external id, controlled and managed by the partner.
	ReferenceId *string `json:"referenceId,omitempty"`
	// `readOnly`  Enum Type: `KalturaCategoryStatus`  Status
	Status *int32 `json:"status,omitempty"`
	// Category tags
	Tags *string `json:"tags,omitempty"`
	// `readOnly`  Update date as Unix timestamp (In seconds)
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
	// `readOnly`  Enum Type: `KalturaUserJoinPolicyType`  Who can ask to join this category
	UserJoinPolicy *int32 `json:"userJoinPolicy,omitempty"`
}

// NewKalturaCategory instantiates a new KalturaCategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaCategory() *KalturaCategory {
	this := KalturaCategory{}
	return &this
}

// NewKalturaCategoryWithDefaults instantiates a new KalturaCategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaCategoryWithDefaults() *KalturaCategory {
	this := KalturaCategory{}
	return &this
}

// GetAdminTags returns the AdminTags field value if set, zero value otherwise.
func (o *KalturaCategory) GetAdminTags() string {
	if o == nil || o.AdminTags == nil {
		var ret string
		return ret
	}
	return *o.AdminTags
}

// GetAdminTagsOk returns a tuple with the AdminTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetAdminTagsOk() (*string, bool) {
	if o == nil || o.AdminTags == nil {
		return nil, false
	}
	return o.AdminTags, true
}

// HasAdminTags returns a boolean if a field has been set.
func (o *KalturaCategory) HasAdminTags() bool {
	if o != nil && o.AdminTags != nil {
		return true
	}

	return false
}

// SetAdminTags gets a reference to the given string and assigns it to the AdminTags field.
func (o *KalturaCategory) SetAdminTags(v string) {
	o.AdminTags = &v
}

// GetAggregationCategories returns the AggregationCategories field value if set, zero value otherwise.
func (o *KalturaCategory) GetAggregationCategories() string {
	if o == nil || o.AggregationCategories == nil {
		var ret string
		return ret
	}
	return *o.AggregationCategories
}

// GetAggregationCategoriesOk returns a tuple with the AggregationCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetAggregationCategoriesOk() (*string, bool) {
	if o == nil || o.AggregationCategories == nil {
		return nil, false
	}
	return o.AggregationCategories, true
}

// HasAggregationCategories returns a boolean if a field has been set.
func (o *KalturaCategory) HasAggregationCategories() bool {
	if o != nil && o.AggregationCategories != nil {
		return true
	}

	return false
}

// SetAggregationCategories gets a reference to the given string and assigns it to the AggregationCategories field.
func (o *KalturaCategory) SetAggregationCategories(v string) {
	o.AggregationCategories = &v
}

// GetAppearInList returns the AppearInList field value if set, zero value otherwise.
func (o *KalturaCategory) GetAppearInList() int32 {
	if o == nil || o.AppearInList == nil {
		var ret int32
		return ret
	}
	return *o.AppearInList
}

// GetAppearInListOk returns a tuple with the AppearInList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetAppearInListOk() (*int32, bool) {
	if o == nil || o.AppearInList == nil {
		return nil, false
	}
	return o.AppearInList, true
}

// HasAppearInList returns a boolean if a field has been set.
func (o *KalturaCategory) HasAppearInList() bool {
	if o != nil && o.AppearInList != nil {
		return true
	}

	return false
}

// SetAppearInList gets a reference to the given int32 and assigns it to the AppearInList field.
func (o *KalturaCategory) SetAppearInList(v int32) {
	o.AppearInList = &v
}

// GetContributionPolicy returns the ContributionPolicy field value if set, zero value otherwise.
func (o *KalturaCategory) GetContributionPolicy() int32 {
	if o == nil || o.ContributionPolicy == nil {
		var ret int32
		return ret
	}
	return *o.ContributionPolicy
}

// GetContributionPolicyOk returns a tuple with the ContributionPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetContributionPolicyOk() (*int32, bool) {
	if o == nil || o.ContributionPolicy == nil {
		return nil, false
	}
	return o.ContributionPolicy, true
}

// HasContributionPolicy returns a boolean if a field has been set.
func (o *KalturaCategory) HasContributionPolicy() bool {
	if o != nil && o.ContributionPolicy != nil {
		return true
	}

	return false
}

// SetContributionPolicy gets a reference to the given int32 and assigns it to the ContributionPolicy field.
func (o *KalturaCategory) SetContributionPolicy(v int32) {
	o.ContributionPolicy = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaCategory) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaCategory) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaCategory) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDefaultOrderBy returns the DefaultOrderBy field value if set, zero value otherwise.
func (o *KalturaCategory) GetDefaultOrderBy() string {
	if o == nil || o.DefaultOrderBy == nil {
		var ret string
		return ret
	}
	return *o.DefaultOrderBy
}

// GetDefaultOrderByOk returns a tuple with the DefaultOrderBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetDefaultOrderByOk() (*string, bool) {
	if o == nil || o.DefaultOrderBy == nil {
		return nil, false
	}
	return o.DefaultOrderBy, true
}

// HasDefaultOrderBy returns a boolean if a field has been set.
func (o *KalturaCategory) HasDefaultOrderBy() bool {
	if o != nil && o.DefaultOrderBy != nil {
		return true
	}

	return false
}

// SetDefaultOrderBy gets a reference to the given string and assigns it to the DefaultOrderBy field.
func (o *KalturaCategory) SetDefaultOrderBy(v string) {
	o.DefaultOrderBy = &v
}

// GetDefaultPermissionLevel returns the DefaultPermissionLevel field value if set, zero value otherwise.
func (o *KalturaCategory) GetDefaultPermissionLevel() int32 {
	if o == nil || o.DefaultPermissionLevel == nil {
		var ret int32
		return ret
	}
	return *o.DefaultPermissionLevel
}

// GetDefaultPermissionLevelOk returns a tuple with the DefaultPermissionLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetDefaultPermissionLevelOk() (*int32, bool) {
	if o == nil || o.DefaultPermissionLevel == nil {
		return nil, false
	}
	return o.DefaultPermissionLevel, true
}

// HasDefaultPermissionLevel returns a boolean if a field has been set.
func (o *KalturaCategory) HasDefaultPermissionLevel() bool {
	if o != nil && o.DefaultPermissionLevel != nil {
		return true
	}

	return false
}

// SetDefaultPermissionLevel gets a reference to the given int32 and assigns it to the DefaultPermissionLevel field.
func (o *KalturaCategory) SetDefaultPermissionLevel(v int32) {
	o.DefaultPermissionLevel = &v
}

// GetDepth returns the Depth field value if set, zero value otherwise.
func (o *KalturaCategory) GetDepth() int32 {
	if o == nil || o.Depth == nil {
		var ret int32
		return ret
	}
	return *o.Depth
}

// GetDepthOk returns a tuple with the Depth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetDepthOk() (*int32, bool) {
	if o == nil || o.Depth == nil {
		return nil, false
	}
	return o.Depth, true
}

// HasDepth returns a boolean if a field has been set.
func (o *KalturaCategory) HasDepth() bool {
	if o != nil && o.Depth != nil {
		return true
	}

	return false
}

// SetDepth gets a reference to the given int32 and assigns it to the Depth field.
func (o *KalturaCategory) SetDepth(v int32) {
	o.Depth = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KalturaCategory) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KalturaCategory) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KalturaCategory) SetDescription(v string) {
	o.Description = &v
}

// GetDirectEntriesCount returns the DirectEntriesCount field value if set, zero value otherwise.
func (o *KalturaCategory) GetDirectEntriesCount() int32 {
	if o == nil || o.DirectEntriesCount == nil {
		var ret int32
		return ret
	}
	return *o.DirectEntriesCount
}

// GetDirectEntriesCountOk returns a tuple with the DirectEntriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetDirectEntriesCountOk() (*int32, bool) {
	if o == nil || o.DirectEntriesCount == nil {
		return nil, false
	}
	return o.DirectEntriesCount, true
}

// HasDirectEntriesCount returns a boolean if a field has been set.
func (o *KalturaCategory) HasDirectEntriesCount() bool {
	if o != nil && o.DirectEntriesCount != nil {
		return true
	}

	return false
}

// SetDirectEntriesCount gets a reference to the given int32 and assigns it to the DirectEntriesCount field.
func (o *KalturaCategory) SetDirectEntriesCount(v int32) {
	o.DirectEntriesCount = &v
}

// GetDirectSubCategoriesCount returns the DirectSubCategoriesCount field value if set, zero value otherwise.
func (o *KalturaCategory) GetDirectSubCategoriesCount() int32 {
	if o == nil || o.DirectSubCategoriesCount == nil {
		var ret int32
		return ret
	}
	return *o.DirectSubCategoriesCount
}

// GetDirectSubCategoriesCountOk returns a tuple with the DirectSubCategoriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetDirectSubCategoriesCountOk() (*int32, bool) {
	if o == nil || o.DirectSubCategoriesCount == nil {
		return nil, false
	}
	return o.DirectSubCategoriesCount, true
}

// HasDirectSubCategoriesCount returns a boolean if a field has been set.
func (o *KalturaCategory) HasDirectSubCategoriesCount() bool {
	if o != nil && o.DirectSubCategoriesCount != nil {
		return true
	}

	return false
}

// SetDirectSubCategoriesCount gets a reference to the given int32 and assigns it to the DirectSubCategoriesCount field.
func (o *KalturaCategory) SetDirectSubCategoriesCount(v int32) {
	o.DirectSubCategoriesCount = &v
}

// GetEntriesCount returns the EntriesCount field value if set, zero value otherwise.
func (o *KalturaCategory) GetEntriesCount() int32 {
	if o == nil || o.EntriesCount == nil {
		var ret int32
		return ret
	}
	return *o.EntriesCount
}

// GetEntriesCountOk returns a tuple with the EntriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetEntriesCountOk() (*int32, bool) {
	if o == nil || o.EntriesCount == nil {
		return nil, false
	}
	return o.EntriesCount, true
}

// HasEntriesCount returns a boolean if a field has been set.
func (o *KalturaCategory) HasEntriesCount() bool {
	if o != nil && o.EntriesCount != nil {
		return true
	}

	return false
}

// SetEntriesCount gets a reference to the given int32 and assigns it to the EntriesCount field.
func (o *KalturaCategory) SetEntriesCount(v int32) {
	o.EntriesCount = &v
}

// GetFullIds returns the FullIds field value if set, zero value otherwise.
func (o *KalturaCategory) GetFullIds() string {
	if o == nil || o.FullIds == nil {
		var ret string
		return ret
	}
	return *o.FullIds
}

// GetFullIdsOk returns a tuple with the FullIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetFullIdsOk() (*string, bool) {
	if o == nil || o.FullIds == nil {
		return nil, false
	}
	return o.FullIds, true
}

// HasFullIds returns a boolean if a field has been set.
func (o *KalturaCategory) HasFullIds() bool {
	if o != nil && o.FullIds != nil {
		return true
	}

	return false
}

// SetFullIds gets a reference to the given string and assigns it to the FullIds field.
func (o *KalturaCategory) SetFullIds(v string) {
	o.FullIds = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *KalturaCategory) GetFullName() string {
	if o == nil || o.FullName == nil {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetFullNameOk() (*string, bool) {
	if o == nil || o.FullName == nil {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *KalturaCategory) HasFullName() bool {
	if o != nil && o.FullName != nil {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *KalturaCategory) SetFullName(v string) {
	o.FullName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaCategory) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaCategory) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaCategory) SetId(v int32) {
	o.Id = &v
}

// GetInheritanceType returns the InheritanceType field value if set, zero value otherwise.
func (o *KalturaCategory) GetInheritanceType() int32 {
	if o == nil || o.InheritanceType == nil {
		var ret int32
		return ret
	}
	return *o.InheritanceType
}

// GetInheritanceTypeOk returns a tuple with the InheritanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetInheritanceTypeOk() (*int32, bool) {
	if o == nil || o.InheritanceType == nil {
		return nil, false
	}
	return o.InheritanceType, true
}

// HasInheritanceType returns a boolean if a field has been set.
func (o *KalturaCategory) HasInheritanceType() bool {
	if o != nil && o.InheritanceType != nil {
		return true
	}

	return false
}

// SetInheritanceType gets a reference to the given int32 and assigns it to the InheritanceType field.
func (o *KalturaCategory) SetInheritanceType(v int32) {
	o.InheritanceType = &v
}

// GetInheritedParentId returns the InheritedParentId field value if set, zero value otherwise.
func (o *KalturaCategory) GetInheritedParentId() int32 {
	if o == nil || o.InheritedParentId == nil {
		var ret int32
		return ret
	}
	return *o.InheritedParentId
}

// GetInheritedParentIdOk returns a tuple with the InheritedParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetInheritedParentIdOk() (*int32, bool) {
	if o == nil || o.InheritedParentId == nil {
		return nil, false
	}
	return o.InheritedParentId, true
}

// HasInheritedParentId returns a boolean if a field has been set.
func (o *KalturaCategory) HasInheritedParentId() bool {
	if o != nil && o.InheritedParentId != nil {
		return true
	}

	return false
}

// SetInheritedParentId gets a reference to the given int32 and assigns it to the InheritedParentId field.
func (o *KalturaCategory) SetInheritedParentId(v int32) {
	o.InheritedParentId = &v
}

// GetIsAggregationCategory returns the IsAggregationCategory field value if set, zero value otherwise.
func (o *KalturaCategory) GetIsAggregationCategory() int32 {
	if o == nil || o.IsAggregationCategory == nil {
		var ret int32
		return ret
	}
	return *o.IsAggregationCategory
}

// GetIsAggregationCategoryOk returns a tuple with the IsAggregationCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetIsAggregationCategoryOk() (*int32, bool) {
	if o == nil || o.IsAggregationCategory == nil {
		return nil, false
	}
	return o.IsAggregationCategory, true
}

// HasIsAggregationCategory returns a boolean if a field has been set.
func (o *KalturaCategory) HasIsAggregationCategory() bool {
	if o != nil && o.IsAggregationCategory != nil {
		return true
	}

	return false
}

// SetIsAggregationCategory gets a reference to the given int32 and assigns it to the IsAggregationCategory field.
func (o *KalturaCategory) SetIsAggregationCategory(v int32) {
	o.IsAggregationCategory = &v
}

// GetMembersCount returns the MembersCount field value if set, zero value otherwise.
func (o *KalturaCategory) GetMembersCount() int32 {
	if o == nil || o.MembersCount == nil {
		var ret int32
		return ret
	}
	return *o.MembersCount
}

// GetMembersCountOk returns a tuple with the MembersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetMembersCountOk() (*int32, bool) {
	if o == nil || o.MembersCount == nil {
		return nil, false
	}
	return o.MembersCount, true
}

// HasMembersCount returns a boolean if a field has been set.
func (o *KalturaCategory) HasMembersCount() bool {
	if o != nil && o.MembersCount != nil {
		return true
	}

	return false
}

// SetMembersCount gets a reference to the given int32 and assigns it to the MembersCount field.
func (o *KalturaCategory) SetMembersCount(v int32) {
	o.MembersCount = &v
}

// GetModeration returns the Moderation field value if set, zero value otherwise.
func (o *KalturaCategory) GetModeration() int32 {
	if o == nil || o.Moderation == nil {
		var ret int32
		return ret
	}
	return *o.Moderation
}

// GetModerationOk returns a tuple with the Moderation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetModerationOk() (*int32, bool) {
	if o == nil || o.Moderation == nil {
		return nil, false
	}
	return o.Moderation, true
}

// HasModeration returns a boolean if a field has been set.
func (o *KalturaCategory) HasModeration() bool {
	if o != nil && o.Moderation != nil {
		return true
	}

	return false
}

// SetModeration gets a reference to the given int32 and assigns it to the Moderation field.
func (o *KalturaCategory) SetModeration(v int32) {
	o.Moderation = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KalturaCategory) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KalturaCategory) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KalturaCategory) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *KalturaCategory) GetOwner() string {
	if o == nil || o.Owner == nil {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetOwnerOk() (*string, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *KalturaCategory) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *KalturaCategory) SetOwner(v string) {
	o.Owner = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *KalturaCategory) GetParentId() int32 {
	if o == nil || o.ParentId == nil {
		var ret int32
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetParentIdOk() (*int32, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *KalturaCategory) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given int32 and assigns it to the ParentId field.
func (o *KalturaCategory) SetParentId(v int32) {
	o.ParentId = &v
}

// GetPartnerData returns the PartnerData field value if set, zero value otherwise.
func (o *KalturaCategory) GetPartnerData() string {
	if o == nil || o.PartnerData == nil {
		var ret string
		return ret
	}
	return *o.PartnerData
}

// GetPartnerDataOk returns a tuple with the PartnerData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetPartnerDataOk() (*string, bool) {
	if o == nil || o.PartnerData == nil {
		return nil, false
	}
	return o.PartnerData, true
}

// HasPartnerData returns a boolean if a field has been set.
func (o *KalturaCategory) HasPartnerData() bool {
	if o != nil && o.PartnerData != nil {
		return true
	}

	return false
}

// SetPartnerData gets a reference to the given string and assigns it to the PartnerData field.
func (o *KalturaCategory) SetPartnerData(v string) {
	o.PartnerData = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaCategory) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaCategory) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaCategory) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetPartnerSortValue returns the PartnerSortValue field value if set, zero value otherwise.
func (o *KalturaCategory) GetPartnerSortValue() int32 {
	if o == nil || o.PartnerSortValue == nil {
		var ret int32
		return ret
	}
	return *o.PartnerSortValue
}

// GetPartnerSortValueOk returns a tuple with the PartnerSortValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetPartnerSortValueOk() (*int32, bool) {
	if o == nil || o.PartnerSortValue == nil {
		return nil, false
	}
	return o.PartnerSortValue, true
}

// HasPartnerSortValue returns a boolean if a field has been set.
func (o *KalturaCategory) HasPartnerSortValue() bool {
	if o != nil && o.PartnerSortValue != nil {
		return true
	}

	return false
}

// SetPartnerSortValue gets a reference to the given int32 and assigns it to the PartnerSortValue field.
func (o *KalturaCategory) SetPartnerSortValue(v int32) {
	o.PartnerSortValue = &v
}

// GetPendingEntriesCount returns the PendingEntriesCount field value if set, zero value otherwise.
func (o *KalturaCategory) GetPendingEntriesCount() int32 {
	if o == nil || o.PendingEntriesCount == nil {
		var ret int32
		return ret
	}
	return *o.PendingEntriesCount
}

// GetPendingEntriesCountOk returns a tuple with the PendingEntriesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetPendingEntriesCountOk() (*int32, bool) {
	if o == nil || o.PendingEntriesCount == nil {
		return nil, false
	}
	return o.PendingEntriesCount, true
}

// HasPendingEntriesCount returns a boolean if a field has been set.
func (o *KalturaCategory) HasPendingEntriesCount() bool {
	if o != nil && o.PendingEntriesCount != nil {
		return true
	}

	return false
}

// SetPendingEntriesCount gets a reference to the given int32 and assigns it to the PendingEntriesCount field.
func (o *KalturaCategory) SetPendingEntriesCount(v int32) {
	o.PendingEntriesCount = &v
}

// GetPendingMembersCount returns the PendingMembersCount field value if set, zero value otherwise.
func (o *KalturaCategory) GetPendingMembersCount() int32 {
	if o == nil || o.PendingMembersCount == nil {
		var ret int32
		return ret
	}
	return *o.PendingMembersCount
}

// GetPendingMembersCountOk returns a tuple with the PendingMembersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetPendingMembersCountOk() (*int32, bool) {
	if o == nil || o.PendingMembersCount == nil {
		return nil, false
	}
	return o.PendingMembersCount, true
}

// HasPendingMembersCount returns a boolean if a field has been set.
func (o *KalturaCategory) HasPendingMembersCount() bool {
	if o != nil && o.PendingMembersCount != nil {
		return true
	}

	return false
}

// SetPendingMembersCount gets a reference to the given int32 and assigns it to the PendingMembersCount field.
func (o *KalturaCategory) SetPendingMembersCount(v int32) {
	o.PendingMembersCount = &v
}

// GetPrivacy returns the Privacy field value if set, zero value otherwise.
func (o *KalturaCategory) GetPrivacy() int32 {
	if o == nil || o.Privacy == nil {
		var ret int32
		return ret
	}
	return *o.Privacy
}

// GetPrivacyOk returns a tuple with the Privacy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetPrivacyOk() (*int32, bool) {
	if o == nil || o.Privacy == nil {
		return nil, false
	}
	return o.Privacy, true
}

// HasPrivacy returns a boolean if a field has been set.
func (o *KalturaCategory) HasPrivacy() bool {
	if o != nil && o.Privacy != nil {
		return true
	}

	return false
}

// SetPrivacy gets a reference to the given int32 and assigns it to the Privacy field.
func (o *KalturaCategory) SetPrivacy(v int32) {
	o.Privacy = &v
}

// GetPrivacyContext returns the PrivacyContext field value if set, zero value otherwise.
func (o *KalturaCategory) GetPrivacyContext() string {
	if o == nil || o.PrivacyContext == nil {
		var ret string
		return ret
	}
	return *o.PrivacyContext
}

// GetPrivacyContextOk returns a tuple with the PrivacyContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetPrivacyContextOk() (*string, bool) {
	if o == nil || o.PrivacyContext == nil {
		return nil, false
	}
	return o.PrivacyContext, true
}

// HasPrivacyContext returns a boolean if a field has been set.
func (o *KalturaCategory) HasPrivacyContext() bool {
	if o != nil && o.PrivacyContext != nil {
		return true
	}

	return false
}

// SetPrivacyContext gets a reference to the given string and assigns it to the PrivacyContext field.
func (o *KalturaCategory) SetPrivacyContext(v string) {
	o.PrivacyContext = &v
}

// GetPrivacyContexts returns the PrivacyContexts field value if set, zero value otherwise.
func (o *KalturaCategory) GetPrivacyContexts() string {
	if o == nil || o.PrivacyContexts == nil {
		var ret string
		return ret
	}
	return *o.PrivacyContexts
}

// GetPrivacyContextsOk returns a tuple with the PrivacyContexts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetPrivacyContextsOk() (*string, bool) {
	if o == nil || o.PrivacyContexts == nil {
		return nil, false
	}
	return o.PrivacyContexts, true
}

// HasPrivacyContexts returns a boolean if a field has been set.
func (o *KalturaCategory) HasPrivacyContexts() bool {
	if o != nil && o.PrivacyContexts != nil {
		return true
	}

	return false
}

// SetPrivacyContexts gets a reference to the given string and assigns it to the PrivacyContexts field.
func (o *KalturaCategory) SetPrivacyContexts(v string) {
	o.PrivacyContexts = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *KalturaCategory) GetReferenceId() string {
	if o == nil || o.ReferenceId == nil {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetReferenceIdOk() (*string, bool) {
	if o == nil || o.ReferenceId == nil {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *KalturaCategory) HasReferenceId() bool {
	if o != nil && o.ReferenceId != nil {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *KalturaCategory) SetReferenceId(v string) {
	o.ReferenceId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaCategory) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaCategory) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KalturaCategory) SetStatus(v int32) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *KalturaCategory) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *KalturaCategory) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *KalturaCategory) SetTags(v string) {
	o.Tags = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaCategory) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaCategory) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaCategory) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUserJoinPolicy returns the UserJoinPolicy field value if set, zero value otherwise.
func (o *KalturaCategory) GetUserJoinPolicy() int32 {
	if o == nil || o.UserJoinPolicy == nil {
		var ret int32
		return ret
	}
	return *o.UserJoinPolicy
}

// GetUserJoinPolicyOk returns a tuple with the UserJoinPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCategory) GetUserJoinPolicyOk() (*int32, bool) {
	if o == nil || o.UserJoinPolicy == nil {
		return nil, false
	}
	return o.UserJoinPolicy, true
}

// HasUserJoinPolicy returns a boolean if a field has been set.
func (o *KalturaCategory) HasUserJoinPolicy() bool {
	if o != nil && o.UserJoinPolicy != nil {
		return true
	}

	return false
}

// SetUserJoinPolicy gets a reference to the given int32 and assigns it to the UserJoinPolicy field.
func (o *KalturaCategory) SetUserJoinPolicy(v int32) {
	o.UserJoinPolicy = &v
}

func (o KalturaCategory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminTags != nil {
		toSerialize["adminTags"] = o.AdminTags
	}
	if o.AggregationCategories != nil {
		toSerialize["aggregationCategories"] = o.AggregationCategories
	}
	if o.AppearInList != nil {
		toSerialize["appearInList"] = o.AppearInList
	}
	if o.ContributionPolicy != nil {
		toSerialize["contributionPolicy"] = o.ContributionPolicy
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.DefaultOrderBy != nil {
		toSerialize["defaultOrderBy"] = o.DefaultOrderBy
	}
	if o.DefaultPermissionLevel != nil {
		toSerialize["defaultPermissionLevel"] = o.DefaultPermissionLevel
	}
	if o.Depth != nil {
		toSerialize["depth"] = o.Depth
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DirectEntriesCount != nil {
		toSerialize["directEntriesCount"] = o.DirectEntriesCount
	}
	if o.DirectSubCategoriesCount != nil {
		toSerialize["directSubCategoriesCount"] = o.DirectSubCategoriesCount
	}
	if o.EntriesCount != nil {
		toSerialize["entriesCount"] = o.EntriesCount
	}
	if o.FullIds != nil {
		toSerialize["fullIds"] = o.FullIds
	}
	if o.FullName != nil {
		toSerialize["fullName"] = o.FullName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.InheritanceType != nil {
		toSerialize["inheritanceType"] = o.InheritanceType
	}
	if o.InheritedParentId != nil {
		toSerialize["inheritedParentId"] = o.InheritedParentId
	}
	if o.IsAggregationCategory != nil {
		toSerialize["isAggregationCategory"] = o.IsAggregationCategory
	}
	if o.MembersCount != nil {
		toSerialize["membersCount"] = o.MembersCount
	}
	if o.Moderation != nil {
		toSerialize["moderation"] = o.Moderation
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.ParentId != nil {
		toSerialize["parentId"] = o.ParentId
	}
	if o.PartnerData != nil {
		toSerialize["partnerData"] = o.PartnerData
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.PartnerSortValue != nil {
		toSerialize["partnerSortValue"] = o.PartnerSortValue
	}
	if o.PendingEntriesCount != nil {
		toSerialize["pendingEntriesCount"] = o.PendingEntriesCount
	}
	if o.PendingMembersCount != nil {
		toSerialize["pendingMembersCount"] = o.PendingMembersCount
	}
	if o.Privacy != nil {
		toSerialize["privacy"] = o.Privacy
	}
	if o.PrivacyContext != nil {
		toSerialize["privacyContext"] = o.PrivacyContext
	}
	if o.PrivacyContexts != nil {
		toSerialize["privacyContexts"] = o.PrivacyContexts
	}
	if o.ReferenceId != nil {
		toSerialize["referenceId"] = o.ReferenceId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.UserJoinPolicy != nil {
		toSerialize["userJoinPolicy"] = o.UserJoinPolicy
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaCategory struct {
	value *KalturaCategory
	isSet bool
}

func (v NullableKalturaCategory) Get() *KalturaCategory {
	return v.value
}

func (v *NullableKalturaCategory) Set(val *KalturaCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaCategory(val *KalturaCategory) *NullableKalturaCategory {
	return &NullableKalturaCategory{value: val, isSet: true}
}

func (v NullableKalturaCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


