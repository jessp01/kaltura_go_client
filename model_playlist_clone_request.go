/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PlaylistCloneRequest struct for PlaylistCloneRequest
type PlaylistCloneRequest struct {
	Id string `json:"id"`
	NewPlaylist *KalturaPlaylist `json:"newPlaylist,omitempty"`
}

// NewPlaylistCloneRequest instantiates a new PlaylistCloneRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaylistCloneRequest(id string) *PlaylistCloneRequest {
	this := PlaylistCloneRequest{}
	this.Id = id
	return &this
}

// NewPlaylistCloneRequestWithDefaults instantiates a new PlaylistCloneRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaylistCloneRequestWithDefaults() *PlaylistCloneRequest {
	this := PlaylistCloneRequest{}
	return &this
}

// GetId returns the Id field value
func (o *PlaylistCloneRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PlaylistCloneRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PlaylistCloneRequest) SetId(v string) {
	o.Id = v
}

// GetNewPlaylist returns the NewPlaylist field value if set, zero value otherwise.
func (o *PlaylistCloneRequest) GetNewPlaylist() KalturaPlaylist {
	if o == nil || o.NewPlaylist == nil {
		var ret KalturaPlaylist
		return ret
	}
	return *o.NewPlaylist
}

// GetNewPlaylistOk returns a tuple with the NewPlaylist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaylistCloneRequest) GetNewPlaylistOk() (*KalturaPlaylist, bool) {
	if o == nil || o.NewPlaylist == nil {
		return nil, false
	}
	return o.NewPlaylist, true
}

// HasNewPlaylist returns a boolean if a field has been set.
func (o *PlaylistCloneRequest) HasNewPlaylist() bool {
	if o != nil && o.NewPlaylist != nil {
		return true
	}

	return false
}

// SetNewPlaylist gets a reference to the given KalturaPlaylist and assigns it to the NewPlaylist field.
func (o *PlaylistCloneRequest) SetNewPlaylist(v KalturaPlaylist) {
	o.NewPlaylist = &v
}

func (o PlaylistCloneRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.NewPlaylist != nil {
		toSerialize["newPlaylist"] = o.NewPlaylist
	}
	return json.Marshal(toSerialize)
}

type NullablePlaylistCloneRequest struct {
	value *PlaylistCloneRequest
	isSet bool
}

func (v NullablePlaylistCloneRequest) Get() *PlaylistCloneRequest {
	return v.value
}

func (v *NullablePlaylistCloneRequest) Set(val *PlaylistCloneRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaylistCloneRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaylistCloneRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaylistCloneRequest(val *PlaylistCloneRequest) *NullablePlaylistCloneRequest {
	return &NullablePlaylistCloneRequest{value: val, isSet: true}
}

func (v NullablePlaylistCloneRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaylistCloneRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


