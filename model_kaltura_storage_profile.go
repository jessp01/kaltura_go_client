/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaStorageProfile struct for KalturaStorageProfile
type KalturaStorageProfile struct {
	// Flag sugnifying that the storage exported content should be deleted when soure entry is deleted
	AllowAutoDelete *int32 `json:"allowAutoDelete,omitempty"`
	// Indicates to the local file transfer manager to create a link to the file instead of copying it
	CreateFileLink *bool `json:"createFileLink,omitempty"`
	// `readOnly`
	CreatedAt *int32 `json:"createdAt,omitempty"`
	// Delivery Priority
	DeliveryPriority *int32 `json:"deliveryPriority,omitempty"`
	DeliveryProfileIds []KalturaKeyValue `json:"deliveryProfileIds,omitempty"`
	// Enum Type: `KalturaStorageProfileDeliveryStatus`
	DeliveryStatus *int32 `json:"deliveryStatus,omitempty"`
	Desciption *string `json:"desciption,omitempty"`
	ExcludedEntryTypes *string `json:"excludedEntryTypes,omitempty"`
	ExcludedFlavorParamsIds *string `json:"excludedFlavorParamsIds,omitempty"`
	ExportPeriodically *bool `json:"exportPeriodically,omitempty"`
	FlavorParamsIds *string `json:"flavorParamsIds,omitempty"`
	// `readOnly`
	Id *int32 `json:"id,omitempty"`
	MaxConcurrentConnections *int32 `json:"maxConcurrentConnections,omitempty"`
	MaxFileSize *int32 `json:"maxFileSize,omitempty"`
	MinFileSize *int32 `json:"minFileSize,omitempty"`
	Name *string `json:"name,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	PackagerUrl *string `json:"packagerUrl,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	PassPhrase *string `json:"passPhrase,omitempty"`
	PathManagerClass *string `json:"pathManagerClass,omitempty"`
	PathManagerParams []KalturaKeyValue `json:"pathManagerParams,omitempty"`
	PathPrefix *string `json:"pathPrefix,omitempty"`
	Port *int32 `json:"port,omitempty"`
	PrivateKey *string `json:"privateKey,omitempty"`
	// Enum Type: `KalturaStorageProfileProtocol`
	Protocol *string `json:"protocol,omitempty"`
	PublicKey *string `json:"publicKey,omitempty"`
	// Enum Type: `KalturaStorageProfileReadyBehavior`
	ReadyBehavior *int32 `json:"readyBehavior,omitempty"`
	Rules []KalturaRule `json:"rules,omitempty"`
	ShouldExportCaptions *bool `json:"shouldExportCaptions,omitempty"`
	ShouldExportThumbs *bool `json:"shouldExportThumbs,omitempty"`
	// Enum Type: `KalturaStorageProfileStatus`
	Status *int32 `json:"status,omitempty"`
	StorageBaseDir *string `json:"storageBaseDir,omitempty"`
	StorageFtpPassiveMode *bool `json:"storageFtpPassiveMode,omitempty"`
	StoragePassword *string `json:"storagePassword,omitempty"`
	StorageUrl *string `json:"storageUrl,omitempty"`
	StorageUsername *string `json:"storageUsername,omitempty"`
	SystemName *string `json:"systemName,omitempty"`
	// No need to create enum for temp field
	Trigger *int32 `json:"trigger,omitempty"`
	// `readOnly`
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
}

// NewKalturaStorageProfile instantiates a new KalturaStorageProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaStorageProfile() *KalturaStorageProfile {
	this := KalturaStorageProfile{}
	return &this
}

// NewKalturaStorageProfileWithDefaults instantiates a new KalturaStorageProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaStorageProfileWithDefaults() *KalturaStorageProfile {
	this := KalturaStorageProfile{}
	return &this
}

// GetAllowAutoDelete returns the AllowAutoDelete field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetAllowAutoDelete() int32 {
	if o == nil || o.AllowAutoDelete == nil {
		var ret int32
		return ret
	}
	return *o.AllowAutoDelete
}

// GetAllowAutoDeleteOk returns a tuple with the AllowAutoDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetAllowAutoDeleteOk() (*int32, bool) {
	if o == nil || o.AllowAutoDelete == nil {
		return nil, false
	}
	return o.AllowAutoDelete, true
}

// HasAllowAutoDelete returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasAllowAutoDelete() bool {
	if o != nil && o.AllowAutoDelete != nil {
		return true
	}

	return false
}

// SetAllowAutoDelete gets a reference to the given int32 and assigns it to the AllowAutoDelete field.
func (o *KalturaStorageProfile) SetAllowAutoDelete(v int32) {
	o.AllowAutoDelete = &v
}

// GetCreateFileLink returns the CreateFileLink field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetCreateFileLink() bool {
	if o == nil || o.CreateFileLink == nil {
		var ret bool
		return ret
	}
	return *o.CreateFileLink
}

// GetCreateFileLinkOk returns a tuple with the CreateFileLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetCreateFileLinkOk() (*bool, bool) {
	if o == nil || o.CreateFileLink == nil {
		return nil, false
	}
	return o.CreateFileLink, true
}

// HasCreateFileLink returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasCreateFileLink() bool {
	if o != nil && o.CreateFileLink != nil {
		return true
	}

	return false
}

// SetCreateFileLink gets a reference to the given bool and assigns it to the CreateFileLink field.
func (o *KalturaStorageProfile) SetCreateFileLink(v bool) {
	o.CreateFileLink = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaStorageProfile) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDeliveryPriority returns the DeliveryPriority field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetDeliveryPriority() int32 {
	if o == nil || o.DeliveryPriority == nil {
		var ret int32
		return ret
	}
	return *o.DeliveryPriority
}

// GetDeliveryPriorityOk returns a tuple with the DeliveryPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetDeliveryPriorityOk() (*int32, bool) {
	if o == nil || o.DeliveryPriority == nil {
		return nil, false
	}
	return o.DeliveryPriority, true
}

// HasDeliveryPriority returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasDeliveryPriority() bool {
	if o != nil && o.DeliveryPriority != nil {
		return true
	}

	return false
}

// SetDeliveryPriority gets a reference to the given int32 and assigns it to the DeliveryPriority field.
func (o *KalturaStorageProfile) SetDeliveryPriority(v int32) {
	o.DeliveryPriority = &v
}

// GetDeliveryProfileIds returns the DeliveryProfileIds field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetDeliveryProfileIds() []KalturaKeyValue {
	if o == nil || o.DeliveryProfileIds == nil {
		var ret []KalturaKeyValue
		return ret
	}
	return o.DeliveryProfileIds
}

// GetDeliveryProfileIdsOk returns a tuple with the DeliveryProfileIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetDeliveryProfileIdsOk() ([]KalturaKeyValue, bool) {
	if o == nil || o.DeliveryProfileIds == nil {
		return nil, false
	}
	return o.DeliveryProfileIds, true
}

// HasDeliveryProfileIds returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasDeliveryProfileIds() bool {
	if o != nil && o.DeliveryProfileIds != nil {
		return true
	}

	return false
}

// SetDeliveryProfileIds gets a reference to the given []KalturaKeyValue and assigns it to the DeliveryProfileIds field.
func (o *KalturaStorageProfile) SetDeliveryProfileIds(v []KalturaKeyValue) {
	o.DeliveryProfileIds = v
}

// GetDeliveryStatus returns the DeliveryStatus field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetDeliveryStatus() int32 {
	if o == nil || o.DeliveryStatus == nil {
		var ret int32
		return ret
	}
	return *o.DeliveryStatus
}

// GetDeliveryStatusOk returns a tuple with the DeliveryStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetDeliveryStatusOk() (*int32, bool) {
	if o == nil || o.DeliveryStatus == nil {
		return nil, false
	}
	return o.DeliveryStatus, true
}

// HasDeliveryStatus returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasDeliveryStatus() bool {
	if o != nil && o.DeliveryStatus != nil {
		return true
	}

	return false
}

// SetDeliveryStatus gets a reference to the given int32 and assigns it to the DeliveryStatus field.
func (o *KalturaStorageProfile) SetDeliveryStatus(v int32) {
	o.DeliveryStatus = &v
}

// GetDesciption returns the Desciption field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetDesciption() string {
	if o == nil || o.Desciption == nil {
		var ret string
		return ret
	}
	return *o.Desciption
}

// GetDesciptionOk returns a tuple with the Desciption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetDesciptionOk() (*string, bool) {
	if o == nil || o.Desciption == nil {
		return nil, false
	}
	return o.Desciption, true
}

// HasDesciption returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasDesciption() bool {
	if o != nil && o.Desciption != nil {
		return true
	}

	return false
}

// SetDesciption gets a reference to the given string and assigns it to the Desciption field.
func (o *KalturaStorageProfile) SetDesciption(v string) {
	o.Desciption = &v
}

// GetExcludedEntryTypes returns the ExcludedEntryTypes field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetExcludedEntryTypes() string {
	if o == nil || o.ExcludedEntryTypes == nil {
		var ret string
		return ret
	}
	return *o.ExcludedEntryTypes
}

// GetExcludedEntryTypesOk returns a tuple with the ExcludedEntryTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetExcludedEntryTypesOk() (*string, bool) {
	if o == nil || o.ExcludedEntryTypes == nil {
		return nil, false
	}
	return o.ExcludedEntryTypes, true
}

// HasExcludedEntryTypes returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasExcludedEntryTypes() bool {
	if o != nil && o.ExcludedEntryTypes != nil {
		return true
	}

	return false
}

// SetExcludedEntryTypes gets a reference to the given string and assigns it to the ExcludedEntryTypes field.
func (o *KalturaStorageProfile) SetExcludedEntryTypes(v string) {
	o.ExcludedEntryTypes = &v
}

// GetExcludedFlavorParamsIds returns the ExcludedFlavorParamsIds field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetExcludedFlavorParamsIds() string {
	if o == nil || o.ExcludedFlavorParamsIds == nil {
		var ret string
		return ret
	}
	return *o.ExcludedFlavorParamsIds
}

// GetExcludedFlavorParamsIdsOk returns a tuple with the ExcludedFlavorParamsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetExcludedFlavorParamsIdsOk() (*string, bool) {
	if o == nil || o.ExcludedFlavorParamsIds == nil {
		return nil, false
	}
	return o.ExcludedFlavorParamsIds, true
}

// HasExcludedFlavorParamsIds returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasExcludedFlavorParamsIds() bool {
	if o != nil && o.ExcludedFlavorParamsIds != nil {
		return true
	}

	return false
}

// SetExcludedFlavorParamsIds gets a reference to the given string and assigns it to the ExcludedFlavorParamsIds field.
func (o *KalturaStorageProfile) SetExcludedFlavorParamsIds(v string) {
	o.ExcludedFlavorParamsIds = &v
}

// GetExportPeriodically returns the ExportPeriodically field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetExportPeriodically() bool {
	if o == nil || o.ExportPeriodically == nil {
		var ret bool
		return ret
	}
	return *o.ExportPeriodically
}

// GetExportPeriodicallyOk returns a tuple with the ExportPeriodically field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetExportPeriodicallyOk() (*bool, bool) {
	if o == nil || o.ExportPeriodically == nil {
		return nil, false
	}
	return o.ExportPeriodically, true
}

// HasExportPeriodically returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasExportPeriodically() bool {
	if o != nil && o.ExportPeriodically != nil {
		return true
	}

	return false
}

// SetExportPeriodically gets a reference to the given bool and assigns it to the ExportPeriodically field.
func (o *KalturaStorageProfile) SetExportPeriodically(v bool) {
	o.ExportPeriodically = &v
}

// GetFlavorParamsIds returns the FlavorParamsIds field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetFlavorParamsIds() string {
	if o == nil || o.FlavorParamsIds == nil {
		var ret string
		return ret
	}
	return *o.FlavorParamsIds
}

// GetFlavorParamsIdsOk returns a tuple with the FlavorParamsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetFlavorParamsIdsOk() (*string, bool) {
	if o == nil || o.FlavorParamsIds == nil {
		return nil, false
	}
	return o.FlavorParamsIds, true
}

// HasFlavorParamsIds returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasFlavorParamsIds() bool {
	if o != nil && o.FlavorParamsIds != nil {
		return true
	}

	return false
}

// SetFlavorParamsIds gets a reference to the given string and assigns it to the FlavorParamsIds field.
func (o *KalturaStorageProfile) SetFlavorParamsIds(v string) {
	o.FlavorParamsIds = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaStorageProfile) SetId(v int32) {
	o.Id = &v
}

// GetMaxConcurrentConnections returns the MaxConcurrentConnections field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetMaxConcurrentConnections() int32 {
	if o == nil || o.MaxConcurrentConnections == nil {
		var ret int32
		return ret
	}
	return *o.MaxConcurrentConnections
}

// GetMaxConcurrentConnectionsOk returns a tuple with the MaxConcurrentConnections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetMaxConcurrentConnectionsOk() (*int32, bool) {
	if o == nil || o.MaxConcurrentConnections == nil {
		return nil, false
	}
	return o.MaxConcurrentConnections, true
}

// HasMaxConcurrentConnections returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasMaxConcurrentConnections() bool {
	if o != nil && o.MaxConcurrentConnections != nil {
		return true
	}

	return false
}

// SetMaxConcurrentConnections gets a reference to the given int32 and assigns it to the MaxConcurrentConnections field.
func (o *KalturaStorageProfile) SetMaxConcurrentConnections(v int32) {
	o.MaxConcurrentConnections = &v
}

// GetMaxFileSize returns the MaxFileSize field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetMaxFileSize() int32 {
	if o == nil || o.MaxFileSize == nil {
		var ret int32
		return ret
	}
	return *o.MaxFileSize
}

// GetMaxFileSizeOk returns a tuple with the MaxFileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetMaxFileSizeOk() (*int32, bool) {
	if o == nil || o.MaxFileSize == nil {
		return nil, false
	}
	return o.MaxFileSize, true
}

// HasMaxFileSize returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasMaxFileSize() bool {
	if o != nil && o.MaxFileSize != nil {
		return true
	}

	return false
}

// SetMaxFileSize gets a reference to the given int32 and assigns it to the MaxFileSize field.
func (o *KalturaStorageProfile) SetMaxFileSize(v int32) {
	o.MaxFileSize = &v
}

// GetMinFileSize returns the MinFileSize field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetMinFileSize() int32 {
	if o == nil || o.MinFileSize == nil {
		var ret int32
		return ret
	}
	return *o.MinFileSize
}

// GetMinFileSizeOk returns a tuple with the MinFileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetMinFileSizeOk() (*int32, bool) {
	if o == nil || o.MinFileSize == nil {
		return nil, false
	}
	return o.MinFileSize, true
}

// HasMinFileSize returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasMinFileSize() bool {
	if o != nil && o.MinFileSize != nil {
		return true
	}

	return false
}

// SetMinFileSize gets a reference to the given int32 and assigns it to the MinFileSize field.
func (o *KalturaStorageProfile) SetMinFileSize(v int32) {
	o.MinFileSize = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KalturaStorageProfile) SetName(v string) {
	o.Name = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaStorageProfile) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetPackagerUrl returns the PackagerUrl field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetPackagerUrl() string {
	if o == nil || o.PackagerUrl == nil {
		var ret string
		return ret
	}
	return *o.PackagerUrl
}

// GetPackagerUrlOk returns a tuple with the PackagerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetPackagerUrlOk() (*string, bool) {
	if o == nil || o.PackagerUrl == nil {
		return nil, false
	}
	return o.PackagerUrl, true
}

// HasPackagerUrl returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasPackagerUrl() bool {
	if o != nil && o.PackagerUrl != nil {
		return true
	}

	return false
}

// SetPackagerUrl gets a reference to the given string and assigns it to the PackagerUrl field.
func (o *KalturaStorageProfile) SetPackagerUrl(v string) {
	o.PackagerUrl = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaStorageProfile) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetPassPhrase returns the PassPhrase field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetPassPhrase() string {
	if o == nil || o.PassPhrase == nil {
		var ret string
		return ret
	}
	return *o.PassPhrase
}

// GetPassPhraseOk returns a tuple with the PassPhrase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetPassPhraseOk() (*string, bool) {
	if o == nil || o.PassPhrase == nil {
		return nil, false
	}
	return o.PassPhrase, true
}

// HasPassPhrase returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasPassPhrase() bool {
	if o != nil && o.PassPhrase != nil {
		return true
	}

	return false
}

// SetPassPhrase gets a reference to the given string and assigns it to the PassPhrase field.
func (o *KalturaStorageProfile) SetPassPhrase(v string) {
	o.PassPhrase = &v
}

// GetPathManagerClass returns the PathManagerClass field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetPathManagerClass() string {
	if o == nil || o.PathManagerClass == nil {
		var ret string
		return ret
	}
	return *o.PathManagerClass
}

// GetPathManagerClassOk returns a tuple with the PathManagerClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetPathManagerClassOk() (*string, bool) {
	if o == nil || o.PathManagerClass == nil {
		return nil, false
	}
	return o.PathManagerClass, true
}

// HasPathManagerClass returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasPathManagerClass() bool {
	if o != nil && o.PathManagerClass != nil {
		return true
	}

	return false
}

// SetPathManagerClass gets a reference to the given string and assigns it to the PathManagerClass field.
func (o *KalturaStorageProfile) SetPathManagerClass(v string) {
	o.PathManagerClass = &v
}

// GetPathManagerParams returns the PathManagerParams field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetPathManagerParams() []KalturaKeyValue {
	if o == nil || o.PathManagerParams == nil {
		var ret []KalturaKeyValue
		return ret
	}
	return o.PathManagerParams
}

// GetPathManagerParamsOk returns a tuple with the PathManagerParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetPathManagerParamsOk() ([]KalturaKeyValue, bool) {
	if o == nil || o.PathManagerParams == nil {
		return nil, false
	}
	return o.PathManagerParams, true
}

// HasPathManagerParams returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasPathManagerParams() bool {
	if o != nil && o.PathManagerParams != nil {
		return true
	}

	return false
}

// SetPathManagerParams gets a reference to the given []KalturaKeyValue and assigns it to the PathManagerParams field.
func (o *KalturaStorageProfile) SetPathManagerParams(v []KalturaKeyValue) {
	o.PathManagerParams = v
}

// GetPathPrefix returns the PathPrefix field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetPathPrefix() string {
	if o == nil || o.PathPrefix == nil {
		var ret string
		return ret
	}
	return *o.PathPrefix
}

// GetPathPrefixOk returns a tuple with the PathPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetPathPrefixOk() (*string, bool) {
	if o == nil || o.PathPrefix == nil {
		return nil, false
	}
	return o.PathPrefix, true
}

// HasPathPrefix returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasPathPrefix() bool {
	if o != nil && o.PathPrefix != nil {
		return true
	}

	return false
}

// SetPathPrefix gets a reference to the given string and assigns it to the PathPrefix field.
func (o *KalturaStorageProfile) SetPathPrefix(v string) {
	o.PathPrefix = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *KalturaStorageProfile) SetPort(v int32) {
	o.Port = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetPrivateKey() string {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetPrivateKeyOk() (*string, bool) {
	if o == nil || o.PrivateKey == nil {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasPrivateKey() bool {
	if o != nil && o.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *KalturaStorageProfile) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *KalturaStorageProfile) SetProtocol(v string) {
	o.Protocol = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetPublicKeyOk() (*string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *KalturaStorageProfile) SetPublicKey(v string) {
	o.PublicKey = &v
}

// GetReadyBehavior returns the ReadyBehavior field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetReadyBehavior() int32 {
	if o == nil || o.ReadyBehavior == nil {
		var ret int32
		return ret
	}
	return *o.ReadyBehavior
}

// GetReadyBehaviorOk returns a tuple with the ReadyBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetReadyBehaviorOk() (*int32, bool) {
	if o == nil || o.ReadyBehavior == nil {
		return nil, false
	}
	return o.ReadyBehavior, true
}

// HasReadyBehavior returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasReadyBehavior() bool {
	if o != nil && o.ReadyBehavior != nil {
		return true
	}

	return false
}

// SetReadyBehavior gets a reference to the given int32 and assigns it to the ReadyBehavior field.
func (o *KalturaStorageProfile) SetReadyBehavior(v int32) {
	o.ReadyBehavior = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetRules() []KalturaRule {
	if o == nil || o.Rules == nil {
		var ret []KalturaRule
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetRulesOk() ([]KalturaRule, bool) {
	if o == nil || o.Rules == nil {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasRules() bool {
	if o != nil && o.Rules != nil {
		return true
	}

	return false
}

// SetRules gets a reference to the given []KalturaRule and assigns it to the Rules field.
func (o *KalturaStorageProfile) SetRules(v []KalturaRule) {
	o.Rules = v
}

// GetShouldExportCaptions returns the ShouldExportCaptions field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetShouldExportCaptions() bool {
	if o == nil || o.ShouldExportCaptions == nil {
		var ret bool
		return ret
	}
	return *o.ShouldExportCaptions
}

// GetShouldExportCaptionsOk returns a tuple with the ShouldExportCaptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetShouldExportCaptionsOk() (*bool, bool) {
	if o == nil || o.ShouldExportCaptions == nil {
		return nil, false
	}
	return o.ShouldExportCaptions, true
}

// HasShouldExportCaptions returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasShouldExportCaptions() bool {
	if o != nil && o.ShouldExportCaptions != nil {
		return true
	}

	return false
}

// SetShouldExportCaptions gets a reference to the given bool and assigns it to the ShouldExportCaptions field.
func (o *KalturaStorageProfile) SetShouldExportCaptions(v bool) {
	o.ShouldExportCaptions = &v
}

// GetShouldExportThumbs returns the ShouldExportThumbs field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetShouldExportThumbs() bool {
	if o == nil || o.ShouldExportThumbs == nil {
		var ret bool
		return ret
	}
	return *o.ShouldExportThumbs
}

// GetShouldExportThumbsOk returns a tuple with the ShouldExportThumbs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetShouldExportThumbsOk() (*bool, bool) {
	if o == nil || o.ShouldExportThumbs == nil {
		return nil, false
	}
	return o.ShouldExportThumbs, true
}

// HasShouldExportThumbs returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasShouldExportThumbs() bool {
	if o != nil && o.ShouldExportThumbs != nil {
		return true
	}

	return false
}

// SetShouldExportThumbs gets a reference to the given bool and assigns it to the ShouldExportThumbs field.
func (o *KalturaStorageProfile) SetShouldExportThumbs(v bool) {
	o.ShouldExportThumbs = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KalturaStorageProfile) SetStatus(v int32) {
	o.Status = &v
}

// GetStorageBaseDir returns the StorageBaseDir field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetStorageBaseDir() string {
	if o == nil || o.StorageBaseDir == nil {
		var ret string
		return ret
	}
	return *o.StorageBaseDir
}

// GetStorageBaseDirOk returns a tuple with the StorageBaseDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetStorageBaseDirOk() (*string, bool) {
	if o == nil || o.StorageBaseDir == nil {
		return nil, false
	}
	return o.StorageBaseDir, true
}

// HasStorageBaseDir returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasStorageBaseDir() bool {
	if o != nil && o.StorageBaseDir != nil {
		return true
	}

	return false
}

// SetStorageBaseDir gets a reference to the given string and assigns it to the StorageBaseDir field.
func (o *KalturaStorageProfile) SetStorageBaseDir(v string) {
	o.StorageBaseDir = &v
}

// GetStorageFtpPassiveMode returns the StorageFtpPassiveMode field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetStorageFtpPassiveMode() bool {
	if o == nil || o.StorageFtpPassiveMode == nil {
		var ret bool
		return ret
	}
	return *o.StorageFtpPassiveMode
}

// GetStorageFtpPassiveModeOk returns a tuple with the StorageFtpPassiveMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetStorageFtpPassiveModeOk() (*bool, bool) {
	if o == nil || o.StorageFtpPassiveMode == nil {
		return nil, false
	}
	return o.StorageFtpPassiveMode, true
}

// HasStorageFtpPassiveMode returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasStorageFtpPassiveMode() bool {
	if o != nil && o.StorageFtpPassiveMode != nil {
		return true
	}

	return false
}

// SetStorageFtpPassiveMode gets a reference to the given bool and assigns it to the StorageFtpPassiveMode field.
func (o *KalturaStorageProfile) SetStorageFtpPassiveMode(v bool) {
	o.StorageFtpPassiveMode = &v
}

// GetStoragePassword returns the StoragePassword field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetStoragePassword() string {
	if o == nil || o.StoragePassword == nil {
		var ret string
		return ret
	}
	return *o.StoragePassword
}

// GetStoragePasswordOk returns a tuple with the StoragePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetStoragePasswordOk() (*string, bool) {
	if o == nil || o.StoragePassword == nil {
		return nil, false
	}
	return o.StoragePassword, true
}

// HasStoragePassword returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasStoragePassword() bool {
	if o != nil && o.StoragePassword != nil {
		return true
	}

	return false
}

// SetStoragePassword gets a reference to the given string and assigns it to the StoragePassword field.
func (o *KalturaStorageProfile) SetStoragePassword(v string) {
	o.StoragePassword = &v
}

// GetStorageUrl returns the StorageUrl field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetStorageUrl() string {
	if o == nil || o.StorageUrl == nil {
		var ret string
		return ret
	}
	return *o.StorageUrl
}

// GetStorageUrlOk returns a tuple with the StorageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetStorageUrlOk() (*string, bool) {
	if o == nil || o.StorageUrl == nil {
		return nil, false
	}
	return o.StorageUrl, true
}

// HasStorageUrl returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasStorageUrl() bool {
	if o != nil && o.StorageUrl != nil {
		return true
	}

	return false
}

// SetStorageUrl gets a reference to the given string and assigns it to the StorageUrl field.
func (o *KalturaStorageProfile) SetStorageUrl(v string) {
	o.StorageUrl = &v
}

// GetStorageUsername returns the StorageUsername field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetStorageUsername() string {
	if o == nil || o.StorageUsername == nil {
		var ret string
		return ret
	}
	return *o.StorageUsername
}

// GetStorageUsernameOk returns a tuple with the StorageUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetStorageUsernameOk() (*string, bool) {
	if o == nil || o.StorageUsername == nil {
		return nil, false
	}
	return o.StorageUsername, true
}

// HasStorageUsername returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasStorageUsername() bool {
	if o != nil && o.StorageUsername != nil {
		return true
	}

	return false
}

// SetStorageUsername gets a reference to the given string and assigns it to the StorageUsername field.
func (o *KalturaStorageProfile) SetStorageUsername(v string) {
	o.StorageUsername = &v
}

// GetSystemName returns the SystemName field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetSystemName() string {
	if o == nil || o.SystemName == nil {
		var ret string
		return ret
	}
	return *o.SystemName
}

// GetSystemNameOk returns a tuple with the SystemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetSystemNameOk() (*string, bool) {
	if o == nil || o.SystemName == nil {
		return nil, false
	}
	return o.SystemName, true
}

// HasSystemName returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasSystemName() bool {
	if o != nil && o.SystemName != nil {
		return true
	}

	return false
}

// SetSystemName gets a reference to the given string and assigns it to the SystemName field.
func (o *KalturaStorageProfile) SetSystemName(v string) {
	o.SystemName = &v
}

// GetTrigger returns the Trigger field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetTrigger() int32 {
	if o == nil || o.Trigger == nil {
		var ret int32
		return ret
	}
	return *o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetTriggerOk() (*int32, bool) {
	if o == nil || o.Trigger == nil {
		return nil, false
	}
	return o.Trigger, true
}

// HasTrigger returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasTrigger() bool {
	if o != nil && o.Trigger != nil {
		return true
	}

	return false
}

// SetTrigger gets a reference to the given int32 and assigns it to the Trigger field.
func (o *KalturaStorageProfile) SetTrigger(v int32) {
	o.Trigger = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaStorageProfile) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStorageProfile) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaStorageProfile) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaStorageProfile) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

func (o KalturaStorageProfile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowAutoDelete != nil {
		toSerialize["allowAutoDelete"] = o.AllowAutoDelete
	}
	if o.CreateFileLink != nil {
		toSerialize["createFileLink"] = o.CreateFileLink
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.DeliveryPriority != nil {
		toSerialize["deliveryPriority"] = o.DeliveryPriority
	}
	if o.DeliveryProfileIds != nil {
		toSerialize["deliveryProfileIds"] = o.DeliveryProfileIds
	}
	if o.DeliveryStatus != nil {
		toSerialize["deliveryStatus"] = o.DeliveryStatus
	}
	if o.Desciption != nil {
		toSerialize["desciption"] = o.Desciption
	}
	if o.ExcludedEntryTypes != nil {
		toSerialize["excludedEntryTypes"] = o.ExcludedEntryTypes
	}
	if o.ExcludedFlavorParamsIds != nil {
		toSerialize["excludedFlavorParamsIds"] = o.ExcludedFlavorParamsIds
	}
	if o.ExportPeriodically != nil {
		toSerialize["exportPeriodically"] = o.ExportPeriodically
	}
	if o.FlavorParamsIds != nil {
		toSerialize["flavorParamsIds"] = o.FlavorParamsIds
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MaxConcurrentConnections != nil {
		toSerialize["maxConcurrentConnections"] = o.MaxConcurrentConnections
	}
	if o.MaxFileSize != nil {
		toSerialize["maxFileSize"] = o.MaxFileSize
	}
	if o.MinFileSize != nil {
		toSerialize["minFileSize"] = o.MinFileSize
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.PackagerUrl != nil {
		toSerialize["packagerUrl"] = o.PackagerUrl
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.PassPhrase != nil {
		toSerialize["passPhrase"] = o.PassPhrase
	}
	if o.PathManagerClass != nil {
		toSerialize["pathManagerClass"] = o.PathManagerClass
	}
	if o.PathManagerParams != nil {
		toSerialize["pathManagerParams"] = o.PathManagerParams
	}
	if o.PathPrefix != nil {
		toSerialize["pathPrefix"] = o.PathPrefix
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.PrivateKey != nil {
		toSerialize["privateKey"] = o.PrivateKey
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	if o.PublicKey != nil {
		toSerialize["publicKey"] = o.PublicKey
	}
	if o.ReadyBehavior != nil {
		toSerialize["readyBehavior"] = o.ReadyBehavior
	}
	if o.Rules != nil {
		toSerialize["rules"] = o.Rules
	}
	if o.ShouldExportCaptions != nil {
		toSerialize["shouldExportCaptions"] = o.ShouldExportCaptions
	}
	if o.ShouldExportThumbs != nil {
		toSerialize["shouldExportThumbs"] = o.ShouldExportThumbs
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StorageBaseDir != nil {
		toSerialize["storageBaseDir"] = o.StorageBaseDir
	}
	if o.StorageFtpPassiveMode != nil {
		toSerialize["storageFtpPassiveMode"] = o.StorageFtpPassiveMode
	}
	if o.StoragePassword != nil {
		toSerialize["storagePassword"] = o.StoragePassword
	}
	if o.StorageUrl != nil {
		toSerialize["storageUrl"] = o.StorageUrl
	}
	if o.StorageUsername != nil {
		toSerialize["storageUsername"] = o.StorageUsername
	}
	if o.SystemName != nil {
		toSerialize["systemName"] = o.SystemName
	}
	if o.Trigger != nil {
		toSerialize["trigger"] = o.Trigger
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaStorageProfile struct {
	value *KalturaStorageProfile
	isSet bool
}

func (v NullableKalturaStorageProfile) Get() *KalturaStorageProfile {
	return v.value
}

func (v *NullableKalturaStorageProfile) Set(val *KalturaStorageProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaStorageProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaStorageProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaStorageProfile(val *KalturaStorageProfile) *NullableKalturaStorageProfile {
	return &NullableKalturaStorageProfile{value: val, isSet: true}
}

func (v NullableKalturaStorageProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaStorageProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


