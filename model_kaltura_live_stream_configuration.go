/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLiveStreamConfiguration A representation of a live stream configuration
type KalturaLiveStreamConfiguration struct {
	BackupUrl *string `json:"backupUrl,omitempty"`
	// Enum Type: `KalturaPlaybackProtocol`
	Protocol *string `json:"protocol,omitempty"`
	PublishUrl *string `json:"publishUrl,omitempty"`
	StreamName *string `json:"streamName,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewKalturaLiveStreamConfiguration instantiates a new KalturaLiveStreamConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLiveStreamConfiguration() *KalturaLiveStreamConfiguration {
	this := KalturaLiveStreamConfiguration{}
	return &this
}

// NewKalturaLiveStreamConfigurationWithDefaults instantiates a new KalturaLiveStreamConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLiveStreamConfigurationWithDefaults() *KalturaLiveStreamConfiguration {
	this := KalturaLiveStreamConfiguration{}
	return &this
}

// GetBackupUrl returns the BackupUrl field value if set, zero value otherwise.
func (o *KalturaLiveStreamConfiguration) GetBackupUrl() string {
	if o == nil || o.BackupUrl == nil {
		var ret string
		return ret
	}
	return *o.BackupUrl
}

// GetBackupUrlOk returns a tuple with the BackupUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamConfiguration) GetBackupUrlOk() (*string, bool) {
	if o == nil || o.BackupUrl == nil {
		return nil, false
	}
	return o.BackupUrl, true
}

// HasBackupUrl returns a boolean if a field has been set.
func (o *KalturaLiveStreamConfiguration) HasBackupUrl() bool {
	if o != nil && o.BackupUrl != nil {
		return true
	}

	return false
}

// SetBackupUrl gets a reference to the given string and assigns it to the BackupUrl field.
func (o *KalturaLiveStreamConfiguration) SetBackupUrl(v string) {
	o.BackupUrl = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *KalturaLiveStreamConfiguration) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamConfiguration) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *KalturaLiveStreamConfiguration) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *KalturaLiveStreamConfiguration) SetProtocol(v string) {
	o.Protocol = &v
}

// GetPublishUrl returns the PublishUrl field value if set, zero value otherwise.
func (o *KalturaLiveStreamConfiguration) GetPublishUrl() string {
	if o == nil || o.PublishUrl == nil {
		var ret string
		return ret
	}
	return *o.PublishUrl
}

// GetPublishUrlOk returns a tuple with the PublishUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamConfiguration) GetPublishUrlOk() (*string, bool) {
	if o == nil || o.PublishUrl == nil {
		return nil, false
	}
	return o.PublishUrl, true
}

// HasPublishUrl returns a boolean if a field has been set.
func (o *KalturaLiveStreamConfiguration) HasPublishUrl() bool {
	if o != nil && o.PublishUrl != nil {
		return true
	}

	return false
}

// SetPublishUrl gets a reference to the given string and assigns it to the PublishUrl field.
func (o *KalturaLiveStreamConfiguration) SetPublishUrl(v string) {
	o.PublishUrl = &v
}

// GetStreamName returns the StreamName field value if set, zero value otherwise.
func (o *KalturaLiveStreamConfiguration) GetStreamName() string {
	if o == nil || o.StreamName == nil {
		var ret string
		return ret
	}
	return *o.StreamName
}

// GetStreamNameOk returns a tuple with the StreamName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamConfiguration) GetStreamNameOk() (*string, bool) {
	if o == nil || o.StreamName == nil {
		return nil, false
	}
	return o.StreamName, true
}

// HasStreamName returns a boolean if a field has been set.
func (o *KalturaLiveStreamConfiguration) HasStreamName() bool {
	if o != nil && o.StreamName != nil {
		return true
	}

	return false
}

// SetStreamName gets a reference to the given string and assigns it to the StreamName field.
func (o *KalturaLiveStreamConfiguration) SetStreamName(v string) {
	o.StreamName = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *KalturaLiveStreamConfiguration) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamConfiguration) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *KalturaLiveStreamConfiguration) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *KalturaLiveStreamConfiguration) SetUrl(v string) {
	o.Url = &v
}

func (o KalturaLiveStreamConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BackupUrl != nil {
		toSerialize["backupUrl"] = o.BackupUrl
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	if o.PublishUrl != nil {
		toSerialize["publishUrl"] = o.PublishUrl
	}
	if o.StreamName != nil {
		toSerialize["streamName"] = o.StreamName
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLiveStreamConfiguration struct {
	value *KalturaLiveStreamConfiguration
	isSet bool
}

func (v NullableKalturaLiveStreamConfiguration) Get() *KalturaLiveStreamConfiguration {
	return v.value
}

func (v *NullableKalturaLiveStreamConfiguration) Set(val *KalturaLiveStreamConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLiveStreamConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLiveStreamConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLiveStreamConfiguration(val *KalturaLiveStreamConfiguration) *NullableKalturaLiveStreamConfiguration {
	return &NullableKalturaLiveStreamConfiguration{value: val, isSet: true}
}

func (v NullableKalturaLiveStreamConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLiveStreamConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


