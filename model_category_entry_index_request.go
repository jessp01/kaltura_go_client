/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CategoryEntryIndexRequest struct for CategoryEntryIndexRequest
type CategoryEntryIndexRequest struct {
	CategoryId int32 `json:"categoryId"`
	EntryId string `json:"entryId"`
	ShouldUpdate *bool `json:"shouldUpdate,omitempty"`
}

// NewCategoryEntryIndexRequest instantiates a new CategoryEntryIndexRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryEntryIndexRequest(categoryId int32, entryId string) *CategoryEntryIndexRequest {
	this := CategoryEntryIndexRequest{}
	this.CategoryId = categoryId
	this.EntryId = entryId
	var shouldUpdate bool = true
	this.ShouldUpdate = &shouldUpdate
	return &this
}

// NewCategoryEntryIndexRequestWithDefaults instantiates a new CategoryEntryIndexRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryEntryIndexRequestWithDefaults() *CategoryEntryIndexRequest {
	this := CategoryEntryIndexRequest{}
	var shouldUpdate bool = true
	this.ShouldUpdate = &shouldUpdate
	return &this
}

// GetCategoryId returns the CategoryId field value
func (o *CategoryEntryIndexRequest) GetCategoryId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value
// and a boolean to check if the value has been set.
func (o *CategoryEntryIndexRequest) GetCategoryIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryId, true
}

// SetCategoryId sets field value
func (o *CategoryEntryIndexRequest) SetCategoryId(v int32) {
	o.CategoryId = v
}

// GetEntryId returns the EntryId field value
func (o *CategoryEntryIndexRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *CategoryEntryIndexRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *CategoryEntryIndexRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetShouldUpdate returns the ShouldUpdate field value if set, zero value otherwise.
func (o *CategoryEntryIndexRequest) GetShouldUpdate() bool {
	if o == nil || o.ShouldUpdate == nil {
		var ret bool
		return ret
	}
	return *o.ShouldUpdate
}

// GetShouldUpdateOk returns a tuple with the ShouldUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryEntryIndexRequest) GetShouldUpdateOk() (*bool, bool) {
	if o == nil || o.ShouldUpdate == nil {
		return nil, false
	}
	return o.ShouldUpdate, true
}

// HasShouldUpdate returns a boolean if a field has been set.
func (o *CategoryEntryIndexRequest) HasShouldUpdate() bool {
	if o != nil && o.ShouldUpdate != nil {
		return true
	}

	return false
}

// SetShouldUpdate gets a reference to the given bool and assigns it to the ShouldUpdate field.
func (o *CategoryEntryIndexRequest) SetShouldUpdate(v bool) {
	o.ShouldUpdate = &v
}

func (o CategoryEntryIndexRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["categoryId"] = o.CategoryId
	}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if o.ShouldUpdate != nil {
		toSerialize["shouldUpdate"] = o.ShouldUpdate
	}
	return json.Marshal(toSerialize)
}

type NullableCategoryEntryIndexRequest struct {
	value *CategoryEntryIndexRequest
	isSet bool
}

func (v NullableCategoryEntryIndexRequest) Get() *CategoryEntryIndexRequest {
	return v.value
}

func (v *NullableCategoryEntryIndexRequest) Set(val *CategoryEntryIndexRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryEntryIndexRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryEntryIndexRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryEntryIndexRequest(val *CategoryEntryIndexRequest) *NullableCategoryEntryIndexRequest {
	return &NullableCategoryEntryIndexRequest{value: val, isSet: true}
}

func (v NullableCategoryEntryIndexRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryEntryIndexRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


