/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BaseEntryUpdateContentRequest struct for BaseEntryUpdateContentRequest
type BaseEntryUpdateContentRequest struct {
	AdvancedOptions *KalturaEntryReplacementOptions `json:"advancedOptions,omitempty"`
	ConversionProfileId *int32 `json:"conversionProfileId,omitempty"`
	EntryId string `json:"entryId"`
	Resource KalturaResource `json:"resource"`
}

// NewBaseEntryUpdateContentRequest instantiates a new BaseEntryUpdateContentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseEntryUpdateContentRequest(entryId string, resource KalturaResource) *BaseEntryUpdateContentRequest {
	this := BaseEntryUpdateContentRequest{}
	this.EntryId = entryId
	this.Resource = resource
	return &this
}

// NewBaseEntryUpdateContentRequestWithDefaults instantiates a new BaseEntryUpdateContentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseEntryUpdateContentRequestWithDefaults() *BaseEntryUpdateContentRequest {
	this := BaseEntryUpdateContentRequest{}
	return &this
}

// GetAdvancedOptions returns the AdvancedOptions field value if set, zero value otherwise.
func (o *BaseEntryUpdateContentRequest) GetAdvancedOptions() KalturaEntryReplacementOptions {
	if o == nil || o.AdvancedOptions == nil {
		var ret KalturaEntryReplacementOptions
		return ret
	}
	return *o.AdvancedOptions
}

// GetAdvancedOptionsOk returns a tuple with the AdvancedOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEntryUpdateContentRequest) GetAdvancedOptionsOk() (*KalturaEntryReplacementOptions, bool) {
	if o == nil || o.AdvancedOptions == nil {
		return nil, false
	}
	return o.AdvancedOptions, true
}

// HasAdvancedOptions returns a boolean if a field has been set.
func (o *BaseEntryUpdateContentRequest) HasAdvancedOptions() bool {
	if o != nil && o.AdvancedOptions != nil {
		return true
	}

	return false
}

// SetAdvancedOptions gets a reference to the given KalturaEntryReplacementOptions and assigns it to the AdvancedOptions field.
func (o *BaseEntryUpdateContentRequest) SetAdvancedOptions(v KalturaEntryReplacementOptions) {
	o.AdvancedOptions = &v
}

// GetConversionProfileId returns the ConversionProfileId field value if set, zero value otherwise.
func (o *BaseEntryUpdateContentRequest) GetConversionProfileId() int32 {
	if o == nil || o.ConversionProfileId == nil {
		var ret int32
		return ret
	}
	return *o.ConversionProfileId
}

// GetConversionProfileIdOk returns a tuple with the ConversionProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEntryUpdateContentRequest) GetConversionProfileIdOk() (*int32, bool) {
	if o == nil || o.ConversionProfileId == nil {
		return nil, false
	}
	return o.ConversionProfileId, true
}

// HasConversionProfileId returns a boolean if a field has been set.
func (o *BaseEntryUpdateContentRequest) HasConversionProfileId() bool {
	if o != nil && o.ConversionProfileId != nil {
		return true
	}

	return false
}

// SetConversionProfileId gets a reference to the given int32 and assigns it to the ConversionProfileId field.
func (o *BaseEntryUpdateContentRequest) SetConversionProfileId(v int32) {
	o.ConversionProfileId = &v
}

// GetEntryId returns the EntryId field value
func (o *BaseEntryUpdateContentRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *BaseEntryUpdateContentRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *BaseEntryUpdateContentRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetResource returns the Resource field value
func (o *BaseEntryUpdateContentRequest) GetResource() KalturaResource {
	if o == nil {
		var ret KalturaResource
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *BaseEntryUpdateContentRequest) GetResourceOk() (*KalturaResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *BaseEntryUpdateContentRequest) SetResource(v KalturaResource) {
	o.Resource = v
}

func (o BaseEntryUpdateContentRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdvancedOptions != nil {
		toSerialize["advancedOptions"] = o.AdvancedOptions
	}
	if o.ConversionProfileId != nil {
		toSerialize["conversionProfileId"] = o.ConversionProfileId
	}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if true {
		toSerialize["resource"] = o.Resource
	}
	return json.Marshal(toSerialize)
}

type NullableBaseEntryUpdateContentRequest struct {
	value *BaseEntryUpdateContentRequest
	isSet bool
}

func (v NullableBaseEntryUpdateContentRequest) Get() *BaseEntryUpdateContentRequest {
	return v.value
}

func (v *NullableBaseEntryUpdateContentRequest) Set(val *BaseEntryUpdateContentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseEntryUpdateContentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseEntryUpdateContentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseEntryUpdateContentRequest(val *BaseEntryUpdateContentRequest) *NullableBaseEntryUpdateContentRequest {
	return &NullableBaseEntryUpdateContentRequest{value: val, isSet: true}
}

func (v NullableBaseEntryUpdateContentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseEntryUpdateContentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


