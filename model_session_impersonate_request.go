/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SessionImpersonateRequest struct for SessionImpersonateRequest
type SessionImpersonateRequest struct {
	Expiry *int32 `json:"expiry,omitempty"`
	ImpersonatedPartnerId int32 `json:"impersonatedPartnerId"`
	PartnerId *int32 `json:"partnerId,omitempty"`
	Privileges *string `json:"privileges,omitempty"`
	Secret string `json:"secret"`
	Type *int32 `json:"type,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewSessionImpersonateRequest instantiates a new SessionImpersonateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionImpersonateRequest(impersonatedPartnerId int32, secret string) *SessionImpersonateRequest {
	this := SessionImpersonateRequest{}
	this.ImpersonatedPartnerId = impersonatedPartnerId
	this.Secret = secret
	return &this
}

// NewSessionImpersonateRequestWithDefaults instantiates a new SessionImpersonateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionImpersonateRequestWithDefaults() *SessionImpersonateRequest {
	this := SessionImpersonateRequest{}
	return &this
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *SessionImpersonateRequest) GetExpiry() int32 {
	if o == nil || o.Expiry == nil {
		var ret int32
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionImpersonateRequest) GetExpiryOk() (*int32, bool) {
	if o == nil || o.Expiry == nil {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *SessionImpersonateRequest) HasExpiry() bool {
	if o != nil && o.Expiry != nil {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given int32 and assigns it to the Expiry field.
func (o *SessionImpersonateRequest) SetExpiry(v int32) {
	o.Expiry = &v
}

// GetImpersonatedPartnerId returns the ImpersonatedPartnerId field value
func (o *SessionImpersonateRequest) GetImpersonatedPartnerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ImpersonatedPartnerId
}

// GetImpersonatedPartnerIdOk returns a tuple with the ImpersonatedPartnerId field value
// and a boolean to check if the value has been set.
func (o *SessionImpersonateRequest) GetImpersonatedPartnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImpersonatedPartnerId, true
}

// SetImpersonatedPartnerId sets field value
func (o *SessionImpersonateRequest) SetImpersonatedPartnerId(v int32) {
	o.ImpersonatedPartnerId = v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *SessionImpersonateRequest) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionImpersonateRequest) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *SessionImpersonateRequest) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *SessionImpersonateRequest) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetPrivileges returns the Privileges field value if set, zero value otherwise.
func (o *SessionImpersonateRequest) GetPrivileges() string {
	if o == nil || o.Privileges == nil {
		var ret string
		return ret
	}
	return *o.Privileges
}

// GetPrivilegesOk returns a tuple with the Privileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionImpersonateRequest) GetPrivilegesOk() (*string, bool) {
	if o == nil || o.Privileges == nil {
		return nil, false
	}
	return o.Privileges, true
}

// HasPrivileges returns a boolean if a field has been set.
func (o *SessionImpersonateRequest) HasPrivileges() bool {
	if o != nil && o.Privileges != nil {
		return true
	}

	return false
}

// SetPrivileges gets a reference to the given string and assigns it to the Privileges field.
func (o *SessionImpersonateRequest) SetPrivileges(v string) {
	o.Privileges = &v
}

// GetSecret returns the Secret field value
func (o *SessionImpersonateRequest) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *SessionImpersonateRequest) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *SessionImpersonateRequest) SetSecret(v string) {
	o.Secret = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SessionImpersonateRequest) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionImpersonateRequest) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SessionImpersonateRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *SessionImpersonateRequest) SetType(v int32) {
	o.Type = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *SessionImpersonateRequest) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionImpersonateRequest) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *SessionImpersonateRequest) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *SessionImpersonateRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o SessionImpersonateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Expiry != nil {
		toSerialize["expiry"] = o.Expiry
	}
	if true {
		toSerialize["impersonatedPartnerId"] = o.ImpersonatedPartnerId
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.Privileges != nil {
		toSerialize["privileges"] = o.Privileges
	}
	if true {
		toSerialize["secret"] = o.Secret
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableSessionImpersonateRequest struct {
	value *SessionImpersonateRequest
	isSet bool
}

func (v NullableSessionImpersonateRequest) Get() *SessionImpersonateRequest {
	return v.value
}

func (v *NullableSessionImpersonateRequest) Set(val *SessionImpersonateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionImpersonateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionImpersonateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionImpersonateRequest(val *SessionImpersonateRequest) *NullableSessionImpersonateRequest {
	return &NullableSessionImpersonateRequest{value: val, isSet: true}
}

func (v NullableSessionImpersonateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionImpersonateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


