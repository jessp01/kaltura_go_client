/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaReportInputFilter struct for KalturaReportInputFilter
type KalturaReportInputFilter struct {
	KalturaReportInputBaseFilter
}

// NewKalturaReportInputFilter instantiates a new KalturaReportInputFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaReportInputFilter() *KalturaReportInputFilter {
	this := KalturaReportInputFilter{}
	return &this
}

// NewKalturaReportInputFilterWithDefaults instantiates a new KalturaReportInputFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaReportInputFilterWithDefaults() *KalturaReportInputFilter {
	this := KalturaReportInputFilter{}
	return &this
}

func (o KalturaReportInputFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaReportInputBaseFilter, errKalturaReportInputBaseFilter := json.Marshal(o.KalturaReportInputBaseFilter)
	if errKalturaReportInputBaseFilter != nil {
		return []byte{}, errKalturaReportInputBaseFilter
	}
	errKalturaReportInputBaseFilter = json.Unmarshal([]byte(serializedKalturaReportInputBaseFilter), &toSerialize)
	if errKalturaReportInputBaseFilter != nil {
		return []byte{}, errKalturaReportInputBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaReportInputFilter struct {
	value *KalturaReportInputFilter
	isSet bool
}

func (v NullableKalturaReportInputFilter) Get() *KalturaReportInputFilter {
	return v.value
}

func (v *NullableKalturaReportInputFilter) Set(val *KalturaReportInputFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaReportInputFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaReportInputFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaReportInputFilter(val *KalturaReportInputFilter) *NullableKalturaReportInputFilter {
	return &NullableKalturaReportInputFilter{value: val, isSet: true}
}

func (v NullableKalturaReportInputFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaReportInputFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


