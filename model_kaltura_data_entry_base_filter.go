/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaDataEntryBaseFilter `abstract`
type KalturaDataEntryBaseFilter struct {
	KalturaBaseEntryFilter
}

// NewKalturaDataEntryBaseFilter instantiates a new KalturaDataEntryBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaDataEntryBaseFilter() *KalturaDataEntryBaseFilter {
	this := KalturaDataEntryBaseFilter{}
	return &this
}

// NewKalturaDataEntryBaseFilterWithDefaults instantiates a new KalturaDataEntryBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaDataEntryBaseFilterWithDefaults() *KalturaDataEntryBaseFilter {
	this := KalturaDataEntryBaseFilter{}
	return &this
}

func (o KalturaDataEntryBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBaseEntryFilter, errKalturaBaseEntryFilter := json.Marshal(o.KalturaBaseEntryFilter)
	if errKalturaBaseEntryFilter != nil {
		return []byte{}, errKalturaBaseEntryFilter
	}
	errKalturaBaseEntryFilter = json.Unmarshal([]byte(serializedKalturaBaseEntryFilter), &toSerialize)
	if errKalturaBaseEntryFilter != nil {
		return []byte{}, errKalturaBaseEntryFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaDataEntryBaseFilter struct {
	value *KalturaDataEntryBaseFilter
	isSet bool
}

func (v NullableKalturaDataEntryBaseFilter) Get() *KalturaDataEntryBaseFilter {
	return v.value
}

func (v *NullableKalturaDataEntryBaseFilter) Set(val *KalturaDataEntryBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaDataEntryBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaDataEntryBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaDataEntryBaseFilter(val *KalturaDataEntryBaseFilter) *NullableKalturaDataEntryBaseFilter {
	return &NullableKalturaDataEntryBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaDataEntryBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaDataEntryBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


