/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaAnonymousIPCondition struct for KalturaAnonymousIPCondition
type KalturaAnonymousIPCondition struct {
	KalturaMatchCondition
}

// NewKalturaAnonymousIPCondition instantiates a new KalturaAnonymousIPCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaAnonymousIPCondition() *KalturaAnonymousIPCondition {
	this := KalturaAnonymousIPCondition{}
	return &this
}

// NewKalturaAnonymousIPConditionWithDefaults instantiates a new KalturaAnonymousIPCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaAnonymousIPConditionWithDefaults() *KalturaAnonymousIPCondition {
	this := KalturaAnonymousIPCondition{}
	return &this
}

func (o KalturaAnonymousIPCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaMatchCondition, errKalturaMatchCondition := json.Marshal(o.KalturaMatchCondition)
	if errKalturaMatchCondition != nil {
		return []byte{}, errKalturaMatchCondition
	}
	errKalturaMatchCondition = json.Unmarshal([]byte(serializedKalturaMatchCondition), &toSerialize)
	if errKalturaMatchCondition != nil {
		return []byte{}, errKalturaMatchCondition
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaAnonymousIPCondition struct {
	value *KalturaAnonymousIPCondition
	isSet bool
}

func (v NullableKalturaAnonymousIPCondition) Get() *KalturaAnonymousIPCondition {
	return v.value
}

func (v *NullableKalturaAnonymousIPCondition) Set(val *KalturaAnonymousIPCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaAnonymousIPCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaAnonymousIPCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaAnonymousIPCondition(val *KalturaAnonymousIPCondition) *NullableKalturaAnonymousIPCondition {
	return &NullableKalturaAnonymousIPCondition{value: val, isSet: true}
}

func (v NullableKalturaAnonymousIPCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaAnonymousIPCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


