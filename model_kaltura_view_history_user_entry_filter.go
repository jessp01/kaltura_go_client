/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaViewHistoryUserEntryFilter struct for KalturaViewHistoryUserEntryFilter
type KalturaViewHistoryUserEntryFilter struct {
	KalturaUserEntryFilter
}

// NewKalturaViewHistoryUserEntryFilter instantiates a new KalturaViewHistoryUserEntryFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaViewHistoryUserEntryFilter() *KalturaViewHistoryUserEntryFilter {
	this := KalturaViewHistoryUserEntryFilter{}
	return &this
}

// NewKalturaViewHistoryUserEntryFilterWithDefaults instantiates a new KalturaViewHistoryUserEntryFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaViewHistoryUserEntryFilterWithDefaults() *KalturaViewHistoryUserEntryFilter {
	this := KalturaViewHistoryUserEntryFilter{}
	return &this
}

func (o KalturaViewHistoryUserEntryFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaUserEntryFilter, errKalturaUserEntryFilter := json.Marshal(o.KalturaUserEntryFilter)
	if errKalturaUserEntryFilter != nil {
		return []byte{}, errKalturaUserEntryFilter
	}
	errKalturaUserEntryFilter = json.Unmarshal([]byte(serializedKalturaUserEntryFilter), &toSerialize)
	if errKalturaUserEntryFilter != nil {
		return []byte{}, errKalturaUserEntryFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaViewHistoryUserEntryFilter struct {
	value *KalturaViewHistoryUserEntryFilter
	isSet bool
}

func (v NullableKalturaViewHistoryUserEntryFilter) Get() *KalturaViewHistoryUserEntryFilter {
	return v.value
}

func (v *NullableKalturaViewHistoryUserEntryFilter) Set(val *KalturaViewHistoryUserEntryFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaViewHistoryUserEntryFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaViewHistoryUserEntryFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaViewHistoryUserEntryFilter(val *KalturaViewHistoryUserEntryFilter) *NullableKalturaViewHistoryUserEntryFilter {
	return &NullableKalturaViewHistoryUserEntryFilter{value: val, isSet: true}
}

func (v NullableKalturaViewHistoryUserEntryFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaViewHistoryUserEntryFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


