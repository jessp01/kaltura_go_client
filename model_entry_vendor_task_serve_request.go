/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EntryVendorTaskServeRequest struct for EntryVendorTaskServeRequest
type EntryVendorTaskServeRequest struct {
	DueDate *string `json:"dueDate,omitempty"`
	PartnerId *int32 `json:"partnerId,omitempty"`
	Status *int32 `json:"status,omitempty"`
	VendorPartnerId *int32 `json:"vendorPartnerId,omitempty"`
}

// NewEntryVendorTaskServeRequest instantiates a new EntryVendorTaskServeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntryVendorTaskServeRequest() *EntryVendorTaskServeRequest {
	this := EntryVendorTaskServeRequest{}
	return &this
}

// NewEntryVendorTaskServeRequestWithDefaults instantiates a new EntryVendorTaskServeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntryVendorTaskServeRequestWithDefaults() *EntryVendorTaskServeRequest {
	this := EntryVendorTaskServeRequest{}
	return &this
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *EntryVendorTaskServeRequest) GetDueDate() string {
	if o == nil || o.DueDate == nil {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntryVendorTaskServeRequest) GetDueDateOk() (*string, bool) {
	if o == nil || o.DueDate == nil {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *EntryVendorTaskServeRequest) HasDueDate() bool {
	if o != nil && o.DueDate != nil {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *EntryVendorTaskServeRequest) SetDueDate(v string) {
	o.DueDate = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *EntryVendorTaskServeRequest) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntryVendorTaskServeRequest) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *EntryVendorTaskServeRequest) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *EntryVendorTaskServeRequest) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EntryVendorTaskServeRequest) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntryVendorTaskServeRequest) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EntryVendorTaskServeRequest) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *EntryVendorTaskServeRequest) SetStatus(v int32) {
	o.Status = &v
}

// GetVendorPartnerId returns the VendorPartnerId field value if set, zero value otherwise.
func (o *EntryVendorTaskServeRequest) GetVendorPartnerId() int32 {
	if o == nil || o.VendorPartnerId == nil {
		var ret int32
		return ret
	}
	return *o.VendorPartnerId
}

// GetVendorPartnerIdOk returns a tuple with the VendorPartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntryVendorTaskServeRequest) GetVendorPartnerIdOk() (*int32, bool) {
	if o == nil || o.VendorPartnerId == nil {
		return nil, false
	}
	return o.VendorPartnerId, true
}

// HasVendorPartnerId returns a boolean if a field has been set.
func (o *EntryVendorTaskServeRequest) HasVendorPartnerId() bool {
	if o != nil && o.VendorPartnerId != nil {
		return true
	}

	return false
}

// SetVendorPartnerId gets a reference to the given int32 and assigns it to the VendorPartnerId field.
func (o *EntryVendorTaskServeRequest) SetVendorPartnerId(v int32) {
	o.VendorPartnerId = &v
}

func (o EntryVendorTaskServeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DueDate != nil {
		toSerialize["dueDate"] = o.DueDate
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.VendorPartnerId != nil {
		toSerialize["vendorPartnerId"] = o.VendorPartnerId
	}
	return json.Marshal(toSerialize)
}

type NullableEntryVendorTaskServeRequest struct {
	value *EntryVendorTaskServeRequest
	isSet bool
}

func (v NullableEntryVendorTaskServeRequest) Get() *EntryVendorTaskServeRequest {
	return v.value
}

func (v *NullableEntryVendorTaskServeRequest) Set(val *EntryVendorTaskServeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEntryVendorTaskServeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEntryVendorTaskServeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntryVendorTaskServeRequest(val *EntryVendorTaskServeRequest) *NullableEntryVendorTaskServeRequest {
	return &NullableEntryVendorTaskServeRequest{value: val, isSet: true}
}

func (v NullableEntryVendorTaskServeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntryVendorTaskServeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


