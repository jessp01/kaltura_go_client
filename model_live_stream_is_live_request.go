/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LiveStreamIsLiveRequest struct for LiveStreamIsLiveRequest
type LiveStreamIsLiveRequest struct {
	Id string `json:"id"`
	Protocol *string `json:"protocol,omitempty"`
}

// NewLiveStreamIsLiveRequest instantiates a new LiveStreamIsLiveRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamIsLiveRequest(id string) *LiveStreamIsLiveRequest {
	this := LiveStreamIsLiveRequest{}
	this.Id = id
	return &this
}

// NewLiveStreamIsLiveRequestWithDefaults instantiates a new LiveStreamIsLiveRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamIsLiveRequestWithDefaults() *LiveStreamIsLiveRequest {
	this := LiveStreamIsLiveRequest{}
	return &this
}

// GetId returns the Id field value
func (o *LiveStreamIsLiveRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LiveStreamIsLiveRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LiveStreamIsLiveRequest) SetId(v string) {
	o.Id = v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *LiveStreamIsLiveRequest) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamIsLiveRequest) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *LiveStreamIsLiveRequest) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *LiveStreamIsLiveRequest) SetProtocol(v string) {
	o.Protocol = &v
}

func (o LiveStreamIsLiveRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	return json.Marshal(toSerialize)
}

type NullableLiveStreamIsLiveRequest struct {
	value *LiveStreamIsLiveRequest
	isSet bool
}

func (v NullableLiveStreamIsLiveRequest) Get() *LiveStreamIsLiveRequest {
	return v.value
}

func (v *NullableLiveStreamIsLiveRequest) Set(val *LiveStreamIsLiveRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamIsLiveRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamIsLiveRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamIsLiveRequest(val *LiveStreamIsLiveRequest) *NullableLiveStreamIsLiveRequest {
	return &NullableLiveStreamIsLiveRequest{value: val, isSet: true}
}

func (v NullableLiveStreamIsLiveRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveStreamIsLiveRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


