/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPlayReadyLicenseDetails struct for KalturaPlayReadyLicenseDetails
type KalturaPlayReadyLicenseDetails struct {
	// License begin date
	BeginDate *int32 `json:"beginDate,omitempty"`
	// License expiration date
	ExpirationDate *int32 `json:"expirationDate,omitempty"`
	Policy *KalturaPlayReadyPolicy `json:"policy,omitempty"`
	// License removal date
	RemovalDate *int32 `json:"removalDate,omitempty"`
}

// NewKalturaPlayReadyLicenseDetails instantiates a new KalturaPlayReadyLicenseDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPlayReadyLicenseDetails() *KalturaPlayReadyLicenseDetails {
	this := KalturaPlayReadyLicenseDetails{}
	return &this
}

// NewKalturaPlayReadyLicenseDetailsWithDefaults instantiates a new KalturaPlayReadyLicenseDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPlayReadyLicenseDetailsWithDefaults() *KalturaPlayReadyLicenseDetails {
	this := KalturaPlayReadyLicenseDetails{}
	return &this
}

// GetBeginDate returns the BeginDate field value if set, zero value otherwise.
func (o *KalturaPlayReadyLicenseDetails) GetBeginDate() int32 {
	if o == nil || o.BeginDate == nil {
		var ret int32
		return ret
	}
	return *o.BeginDate
}

// GetBeginDateOk returns a tuple with the BeginDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPlayReadyLicenseDetails) GetBeginDateOk() (*int32, bool) {
	if o == nil || o.BeginDate == nil {
		return nil, false
	}
	return o.BeginDate, true
}

// HasBeginDate returns a boolean if a field has been set.
func (o *KalturaPlayReadyLicenseDetails) HasBeginDate() bool {
	if o != nil && o.BeginDate != nil {
		return true
	}

	return false
}

// SetBeginDate gets a reference to the given int32 and assigns it to the BeginDate field.
func (o *KalturaPlayReadyLicenseDetails) SetBeginDate(v int32) {
	o.BeginDate = &v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *KalturaPlayReadyLicenseDetails) GetExpirationDate() int32 {
	if o == nil || o.ExpirationDate == nil {
		var ret int32
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPlayReadyLicenseDetails) GetExpirationDateOk() (*int32, bool) {
	if o == nil || o.ExpirationDate == nil {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *KalturaPlayReadyLicenseDetails) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate != nil {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given int32 and assigns it to the ExpirationDate field.
func (o *KalturaPlayReadyLicenseDetails) SetExpirationDate(v int32) {
	o.ExpirationDate = &v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *KalturaPlayReadyLicenseDetails) GetPolicy() KalturaPlayReadyPolicy {
	if o == nil || o.Policy == nil {
		var ret KalturaPlayReadyPolicy
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPlayReadyLicenseDetails) GetPolicyOk() (*KalturaPlayReadyPolicy, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *KalturaPlayReadyLicenseDetails) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given KalturaPlayReadyPolicy and assigns it to the Policy field.
func (o *KalturaPlayReadyLicenseDetails) SetPolicy(v KalturaPlayReadyPolicy) {
	o.Policy = &v
}

// GetRemovalDate returns the RemovalDate field value if set, zero value otherwise.
func (o *KalturaPlayReadyLicenseDetails) GetRemovalDate() int32 {
	if o == nil || o.RemovalDate == nil {
		var ret int32
		return ret
	}
	return *o.RemovalDate
}

// GetRemovalDateOk returns a tuple with the RemovalDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPlayReadyLicenseDetails) GetRemovalDateOk() (*int32, bool) {
	if o == nil || o.RemovalDate == nil {
		return nil, false
	}
	return o.RemovalDate, true
}

// HasRemovalDate returns a boolean if a field has been set.
func (o *KalturaPlayReadyLicenseDetails) HasRemovalDate() bool {
	if o != nil && o.RemovalDate != nil {
		return true
	}

	return false
}

// SetRemovalDate gets a reference to the given int32 and assigns it to the RemovalDate field.
func (o *KalturaPlayReadyLicenseDetails) SetRemovalDate(v int32) {
	o.RemovalDate = &v
}

func (o KalturaPlayReadyLicenseDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BeginDate != nil {
		toSerialize["beginDate"] = o.BeginDate
	}
	if o.ExpirationDate != nil {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	if o.RemovalDate != nil {
		toSerialize["removalDate"] = o.RemovalDate
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPlayReadyLicenseDetails struct {
	value *KalturaPlayReadyLicenseDetails
	isSet bool
}

func (v NullableKalturaPlayReadyLicenseDetails) Get() *KalturaPlayReadyLicenseDetails {
	return v.value
}

func (v *NullableKalturaPlayReadyLicenseDetails) Set(val *KalturaPlayReadyLicenseDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPlayReadyLicenseDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPlayReadyLicenseDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPlayReadyLicenseDetails(val *KalturaPlayReadyLicenseDetails) *NullableKalturaPlayReadyLicenseDetails {
	return &NullableKalturaPlayReadyLicenseDetails{value: val, isSet: true}
}

func (v NullableKalturaPlayReadyLicenseDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPlayReadyLicenseDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


