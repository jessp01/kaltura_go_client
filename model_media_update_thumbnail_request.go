/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MediaUpdateThumbnailRequest struct for MediaUpdateThumbnailRequest
type MediaUpdateThumbnailRequest struct {
	EntryId string `json:"entryId"`
	FlavorParamsId *int32 `json:"flavorParamsId,omitempty"`
	TimeOffset int32 `json:"timeOffset"`
}

// NewMediaUpdateThumbnailRequest instantiates a new MediaUpdateThumbnailRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaUpdateThumbnailRequest(entryId string, timeOffset int32) *MediaUpdateThumbnailRequest {
	this := MediaUpdateThumbnailRequest{}
	this.EntryId = entryId
	this.TimeOffset = timeOffset
	return &this
}

// NewMediaUpdateThumbnailRequestWithDefaults instantiates a new MediaUpdateThumbnailRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaUpdateThumbnailRequestWithDefaults() *MediaUpdateThumbnailRequest {
	this := MediaUpdateThumbnailRequest{}
	return &this
}

// GetEntryId returns the EntryId field value
func (o *MediaUpdateThumbnailRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *MediaUpdateThumbnailRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *MediaUpdateThumbnailRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetFlavorParamsId returns the FlavorParamsId field value if set, zero value otherwise.
func (o *MediaUpdateThumbnailRequest) GetFlavorParamsId() int32 {
	if o == nil || o.FlavorParamsId == nil {
		var ret int32
		return ret
	}
	return *o.FlavorParamsId
}

// GetFlavorParamsIdOk returns a tuple with the FlavorParamsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaUpdateThumbnailRequest) GetFlavorParamsIdOk() (*int32, bool) {
	if o == nil || o.FlavorParamsId == nil {
		return nil, false
	}
	return o.FlavorParamsId, true
}

// HasFlavorParamsId returns a boolean if a field has been set.
func (o *MediaUpdateThumbnailRequest) HasFlavorParamsId() bool {
	if o != nil && o.FlavorParamsId != nil {
		return true
	}

	return false
}

// SetFlavorParamsId gets a reference to the given int32 and assigns it to the FlavorParamsId field.
func (o *MediaUpdateThumbnailRequest) SetFlavorParamsId(v int32) {
	o.FlavorParamsId = &v
}

// GetTimeOffset returns the TimeOffset field value
func (o *MediaUpdateThumbnailRequest) GetTimeOffset() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TimeOffset
}

// GetTimeOffsetOk returns a tuple with the TimeOffset field value
// and a boolean to check if the value has been set.
func (o *MediaUpdateThumbnailRequest) GetTimeOffsetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeOffset, true
}

// SetTimeOffset sets field value
func (o *MediaUpdateThumbnailRequest) SetTimeOffset(v int32) {
	o.TimeOffset = v
}

func (o MediaUpdateThumbnailRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if o.FlavorParamsId != nil {
		toSerialize["flavorParamsId"] = o.FlavorParamsId
	}
	if true {
		toSerialize["timeOffset"] = o.TimeOffset
	}
	return json.Marshal(toSerialize)
}

type NullableMediaUpdateThumbnailRequest struct {
	value *MediaUpdateThumbnailRequest
	isSet bool
}

func (v NullableMediaUpdateThumbnailRequest) Get() *MediaUpdateThumbnailRequest {
	return v.value
}

func (v *NullableMediaUpdateThumbnailRequest) Set(val *MediaUpdateThumbnailRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaUpdateThumbnailRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaUpdateThumbnailRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaUpdateThumbnailRequest(val *MediaUpdateThumbnailRequest) *NullableMediaUpdateThumbnailRequest {
	return &NullableMediaUpdateThumbnailRequest{value: val, isSet: true}
}

func (v NullableMediaUpdateThumbnailRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaUpdateThumbnailRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


