/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaUserLoginDataFilter struct for KalturaUserLoginDataFilter
type KalturaUserLoginDataFilter struct {
	KalturaUserLoginDataBaseFilter
}

// NewKalturaUserLoginDataFilter instantiates a new KalturaUserLoginDataFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaUserLoginDataFilter() *KalturaUserLoginDataFilter {
	this := KalturaUserLoginDataFilter{}
	return &this
}

// NewKalturaUserLoginDataFilterWithDefaults instantiates a new KalturaUserLoginDataFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaUserLoginDataFilterWithDefaults() *KalturaUserLoginDataFilter {
	this := KalturaUserLoginDataFilter{}
	return &this
}

func (o KalturaUserLoginDataFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaUserLoginDataBaseFilter, errKalturaUserLoginDataBaseFilter := json.Marshal(o.KalturaUserLoginDataBaseFilter)
	if errKalturaUserLoginDataBaseFilter != nil {
		return []byte{}, errKalturaUserLoginDataBaseFilter
	}
	errKalturaUserLoginDataBaseFilter = json.Unmarshal([]byte(serializedKalturaUserLoginDataBaseFilter), &toSerialize)
	if errKalturaUserLoginDataBaseFilter != nil {
		return []byte{}, errKalturaUserLoginDataBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaUserLoginDataFilter struct {
	value *KalturaUserLoginDataFilter
	isSet bool
}

func (v NullableKalturaUserLoginDataFilter) Get() *KalturaUserLoginDataFilter {
	return v.value
}

func (v *NullableKalturaUserLoginDataFilter) Set(val *KalturaUserLoginDataFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaUserLoginDataFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaUserLoginDataFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaUserLoginDataFilter(val *KalturaUserLoginDataFilter) *NullableKalturaUserLoginDataFilter {
	return &NullableKalturaUserLoginDataFilter{value: val, isSet: true}
}

func (v NullableKalturaUserLoginDataFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaUserLoginDataFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


