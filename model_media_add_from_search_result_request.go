/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MediaAddFromSearchResultRequest struct for MediaAddFromSearchResultRequest
type MediaAddFromSearchResultRequest struct {
	MediaEntry *KalturaMediaEntry `json:"mediaEntry,omitempty"`
	SearchResult *KalturaSearchResult `json:"searchResult,omitempty"`
}

// NewMediaAddFromSearchResultRequest instantiates a new MediaAddFromSearchResultRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaAddFromSearchResultRequest() *MediaAddFromSearchResultRequest {
	this := MediaAddFromSearchResultRequest{}
	return &this
}

// NewMediaAddFromSearchResultRequestWithDefaults instantiates a new MediaAddFromSearchResultRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaAddFromSearchResultRequestWithDefaults() *MediaAddFromSearchResultRequest {
	this := MediaAddFromSearchResultRequest{}
	return &this
}

// GetMediaEntry returns the MediaEntry field value if set, zero value otherwise.
func (o *MediaAddFromSearchResultRequest) GetMediaEntry() KalturaMediaEntry {
	if o == nil || o.MediaEntry == nil {
		var ret KalturaMediaEntry
		return ret
	}
	return *o.MediaEntry
}

// GetMediaEntryOk returns a tuple with the MediaEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaAddFromSearchResultRequest) GetMediaEntryOk() (*KalturaMediaEntry, bool) {
	if o == nil || o.MediaEntry == nil {
		return nil, false
	}
	return o.MediaEntry, true
}

// HasMediaEntry returns a boolean if a field has been set.
func (o *MediaAddFromSearchResultRequest) HasMediaEntry() bool {
	if o != nil && o.MediaEntry != nil {
		return true
	}

	return false
}

// SetMediaEntry gets a reference to the given KalturaMediaEntry and assigns it to the MediaEntry field.
func (o *MediaAddFromSearchResultRequest) SetMediaEntry(v KalturaMediaEntry) {
	o.MediaEntry = &v
}

// GetSearchResult returns the SearchResult field value if set, zero value otherwise.
func (o *MediaAddFromSearchResultRequest) GetSearchResult() KalturaSearchResult {
	if o == nil || o.SearchResult == nil {
		var ret KalturaSearchResult
		return ret
	}
	return *o.SearchResult
}

// GetSearchResultOk returns a tuple with the SearchResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaAddFromSearchResultRequest) GetSearchResultOk() (*KalturaSearchResult, bool) {
	if o == nil || o.SearchResult == nil {
		return nil, false
	}
	return o.SearchResult, true
}

// HasSearchResult returns a boolean if a field has been set.
func (o *MediaAddFromSearchResultRequest) HasSearchResult() bool {
	if o != nil && o.SearchResult != nil {
		return true
	}

	return false
}

// SetSearchResult gets a reference to the given KalturaSearchResult and assigns it to the SearchResult field.
func (o *MediaAddFromSearchResultRequest) SetSearchResult(v KalturaSearchResult) {
	o.SearchResult = &v
}

func (o MediaAddFromSearchResultRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MediaEntry != nil {
		toSerialize["mediaEntry"] = o.MediaEntry
	}
	if o.SearchResult != nil {
		toSerialize["searchResult"] = o.SearchResult
	}
	return json.Marshal(toSerialize)
}

type NullableMediaAddFromSearchResultRequest struct {
	value *MediaAddFromSearchResultRequest
	isSet bool
}

func (v NullableMediaAddFromSearchResultRequest) Get() *MediaAddFromSearchResultRequest {
	return v.value
}

func (v *NullableMediaAddFromSearchResultRequest) Set(val *MediaAddFromSearchResultRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaAddFromSearchResultRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaAddFromSearchResultRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaAddFromSearchResultRequest(val *MediaAddFromSearchResultRequest) *NullableMediaAddFromSearchResultRequest {
	return &NullableMediaAddFromSearchResultRequest{value: val, isSet: true}
}

func (v NullableMediaAddFromSearchResultRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaAddFromSearchResultRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


