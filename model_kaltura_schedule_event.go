/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaScheduleEvent `abstract`
type KalturaScheduleEvent struct {
	// Enum Type: `KalturaScheduleEventClassificationType`
	ClassificationType *int32 `json:"classificationType,omitempty"`
	// Specifies non-processing information intended to provide a comment to the calendar user.
	Comment *string `json:"comment,omitempty"`
	// Used to represent contact information or alternately a reference to contact information.
	Contact *string `json:"contact,omitempty"`
	// `readOnly`  Creation date as Unix timestamp (In seconds)
	CreatedAt *int32 `json:"createdAt,omitempty"`
	Description *string `json:"description,omitempty"`
	// Duration in seconds
	Duration *int32 `json:"duration,omitempty"`
	EndDate *int32 `json:"endDate,omitempty"`
	// Specifies the global position for the activity
	GeoLatitude *float32 `json:"geoLatitude,omitempty"`
	// Specifies the global position for the activity
	GeoLongitude *float32 `json:"geoLongitude,omitempty"`
	// `readOnly`  Auto-generated unique identifier
	Id *int32 `json:"id,omitempty"`
	// An array of Schedule Event Ids that their start time depends on the end of the current.
	LinkedBy *string `json:"linkedBy,omitempty"`
	LinkedTo *KalturaLinkedScheduleEvent `json:"linkedTo,omitempty"`
	// Defines the intended venue for the activity
	Location *string `json:"location,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	Organizer *string `json:"organizer,omitempty"`
	OwnerId *string `json:"ownerId,omitempty"`
	// `readOnly`
	ParentId *int32 `json:"parentId,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// The value for the priority field.
	Priority *int32 `json:"priority,omitempty"`
	Recurrence *KalturaScheduleEventRecurrence `json:"recurrence,omitempty"`
	// Enum Type: `KalturaScheduleEventRecurrenceType`
	RecurrenceType *int32 `json:"recurrenceType,omitempty"`
	ReferenceId *string `json:"referenceId,omitempty"`
	// Defines the revision sequence number.
	Sequence *int32 `json:"sequence,omitempty"`
	StartDate *int32 `json:"startDate,omitempty"`
	// `readOnly`  Enum Type: `KalturaScheduleEventStatus`
	Status *int32 `json:"status,omitempty"`
	// Defines a short summary or subject for the event
	Summary *string `json:"summary,omitempty"`
	Tags *string `json:"tags,omitempty"`
	// `readOnly`  Last update as Unix timestamp (In seconds)
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
}

// NewKalturaScheduleEvent instantiates a new KalturaScheduleEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaScheduleEvent() *KalturaScheduleEvent {
	this := KalturaScheduleEvent{}
	return &this
}

// NewKalturaScheduleEventWithDefaults instantiates a new KalturaScheduleEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaScheduleEventWithDefaults() *KalturaScheduleEvent {
	this := KalturaScheduleEvent{}
	return &this
}

// GetClassificationType returns the ClassificationType field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetClassificationType() int32 {
	if o == nil || o.ClassificationType == nil {
		var ret int32
		return ret
	}
	return *o.ClassificationType
}

// GetClassificationTypeOk returns a tuple with the ClassificationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetClassificationTypeOk() (*int32, bool) {
	if o == nil || o.ClassificationType == nil {
		return nil, false
	}
	return o.ClassificationType, true
}

// HasClassificationType returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasClassificationType() bool {
	if o != nil && o.ClassificationType != nil {
		return true
	}

	return false
}

// SetClassificationType gets a reference to the given int32 and assigns it to the ClassificationType field.
func (o *KalturaScheduleEvent) SetClassificationType(v int32) {
	o.ClassificationType = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetComment() string {
	if o == nil || o.Comment == nil {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetCommentOk() (*string, bool) {
	if o == nil || o.Comment == nil {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasComment() bool {
	if o != nil && o.Comment != nil {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *KalturaScheduleEvent) SetComment(v string) {
	o.Comment = &v
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetContact() string {
	if o == nil || o.Contact == nil {
		var ret string
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetContactOk() (*string, bool) {
	if o == nil || o.Contact == nil {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasContact() bool {
	if o != nil && o.Contact != nil {
		return true
	}

	return false
}

// SetContact gets a reference to the given string and assigns it to the Contact field.
func (o *KalturaScheduleEvent) SetContact(v string) {
	o.Contact = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaScheduleEvent) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KalturaScheduleEvent) SetDescription(v string) {
	o.Description = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetDuration() int32 {
	if o == nil || o.Duration == nil {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetDurationOk() (*int32, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *KalturaScheduleEvent) SetDuration(v int32) {
	o.Duration = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetEndDate() int32 {
	if o == nil || o.EndDate == nil {
		var ret int32
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetEndDateOk() (*int32, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given int32 and assigns it to the EndDate field.
func (o *KalturaScheduleEvent) SetEndDate(v int32) {
	o.EndDate = &v
}

// GetGeoLatitude returns the GeoLatitude field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetGeoLatitude() float32 {
	if o == nil || o.GeoLatitude == nil {
		var ret float32
		return ret
	}
	return *o.GeoLatitude
}

// GetGeoLatitudeOk returns a tuple with the GeoLatitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetGeoLatitudeOk() (*float32, bool) {
	if o == nil || o.GeoLatitude == nil {
		return nil, false
	}
	return o.GeoLatitude, true
}

// HasGeoLatitude returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasGeoLatitude() bool {
	if o != nil && o.GeoLatitude != nil {
		return true
	}

	return false
}

// SetGeoLatitude gets a reference to the given float32 and assigns it to the GeoLatitude field.
func (o *KalturaScheduleEvent) SetGeoLatitude(v float32) {
	o.GeoLatitude = &v
}

// GetGeoLongitude returns the GeoLongitude field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetGeoLongitude() float32 {
	if o == nil || o.GeoLongitude == nil {
		var ret float32
		return ret
	}
	return *o.GeoLongitude
}

// GetGeoLongitudeOk returns a tuple with the GeoLongitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetGeoLongitudeOk() (*float32, bool) {
	if o == nil || o.GeoLongitude == nil {
		return nil, false
	}
	return o.GeoLongitude, true
}

// HasGeoLongitude returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasGeoLongitude() bool {
	if o != nil && o.GeoLongitude != nil {
		return true
	}

	return false
}

// SetGeoLongitude gets a reference to the given float32 and assigns it to the GeoLongitude field.
func (o *KalturaScheduleEvent) SetGeoLongitude(v float32) {
	o.GeoLongitude = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaScheduleEvent) SetId(v int32) {
	o.Id = &v
}

// GetLinkedBy returns the LinkedBy field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetLinkedBy() string {
	if o == nil || o.LinkedBy == nil {
		var ret string
		return ret
	}
	return *o.LinkedBy
}

// GetLinkedByOk returns a tuple with the LinkedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetLinkedByOk() (*string, bool) {
	if o == nil || o.LinkedBy == nil {
		return nil, false
	}
	return o.LinkedBy, true
}

// HasLinkedBy returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasLinkedBy() bool {
	if o != nil && o.LinkedBy != nil {
		return true
	}

	return false
}

// SetLinkedBy gets a reference to the given string and assigns it to the LinkedBy field.
func (o *KalturaScheduleEvent) SetLinkedBy(v string) {
	o.LinkedBy = &v
}

// GetLinkedTo returns the LinkedTo field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetLinkedTo() KalturaLinkedScheduleEvent {
	if o == nil || o.LinkedTo == nil {
		var ret KalturaLinkedScheduleEvent
		return ret
	}
	return *o.LinkedTo
}

// GetLinkedToOk returns a tuple with the LinkedTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetLinkedToOk() (*KalturaLinkedScheduleEvent, bool) {
	if o == nil || o.LinkedTo == nil {
		return nil, false
	}
	return o.LinkedTo, true
}

// HasLinkedTo returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasLinkedTo() bool {
	if o != nil && o.LinkedTo != nil {
		return true
	}

	return false
}

// SetLinkedTo gets a reference to the given KalturaLinkedScheduleEvent and assigns it to the LinkedTo field.
func (o *KalturaScheduleEvent) SetLinkedTo(v KalturaLinkedScheduleEvent) {
	o.LinkedTo = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *KalturaScheduleEvent) SetLocation(v string) {
	o.Location = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaScheduleEvent) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetOrganizer returns the Organizer field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetOrganizer() string {
	if o == nil || o.Organizer == nil {
		var ret string
		return ret
	}
	return *o.Organizer
}

// GetOrganizerOk returns a tuple with the Organizer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetOrganizerOk() (*string, bool) {
	if o == nil || o.Organizer == nil {
		return nil, false
	}
	return o.Organizer, true
}

// HasOrganizer returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasOrganizer() bool {
	if o != nil && o.Organizer != nil {
		return true
	}

	return false
}

// SetOrganizer gets a reference to the given string and assigns it to the Organizer field.
func (o *KalturaScheduleEvent) SetOrganizer(v string) {
	o.Organizer = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetOwnerId() string {
	if o == nil || o.OwnerId == nil {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetOwnerIdOk() (*string, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *KalturaScheduleEvent) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetParentId() int32 {
	if o == nil || o.ParentId == nil {
		var ret int32
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetParentIdOk() (*int32, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given int32 and assigns it to the ParentId field.
func (o *KalturaScheduleEvent) SetParentId(v int32) {
	o.ParentId = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaScheduleEvent) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetPriority() int32 {
	if o == nil || o.Priority == nil {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetPriorityOk() (*int32, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *KalturaScheduleEvent) SetPriority(v int32) {
	o.Priority = &v
}

// GetRecurrence returns the Recurrence field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetRecurrence() KalturaScheduleEventRecurrence {
	if o == nil || o.Recurrence == nil {
		var ret KalturaScheduleEventRecurrence
		return ret
	}
	return *o.Recurrence
}

// GetRecurrenceOk returns a tuple with the Recurrence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetRecurrenceOk() (*KalturaScheduleEventRecurrence, bool) {
	if o == nil || o.Recurrence == nil {
		return nil, false
	}
	return o.Recurrence, true
}

// HasRecurrence returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasRecurrence() bool {
	if o != nil && o.Recurrence != nil {
		return true
	}

	return false
}

// SetRecurrence gets a reference to the given KalturaScheduleEventRecurrence and assigns it to the Recurrence field.
func (o *KalturaScheduleEvent) SetRecurrence(v KalturaScheduleEventRecurrence) {
	o.Recurrence = &v
}

// GetRecurrenceType returns the RecurrenceType field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetRecurrenceType() int32 {
	if o == nil || o.RecurrenceType == nil {
		var ret int32
		return ret
	}
	return *o.RecurrenceType
}

// GetRecurrenceTypeOk returns a tuple with the RecurrenceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetRecurrenceTypeOk() (*int32, bool) {
	if o == nil || o.RecurrenceType == nil {
		return nil, false
	}
	return o.RecurrenceType, true
}

// HasRecurrenceType returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasRecurrenceType() bool {
	if o != nil && o.RecurrenceType != nil {
		return true
	}

	return false
}

// SetRecurrenceType gets a reference to the given int32 and assigns it to the RecurrenceType field.
func (o *KalturaScheduleEvent) SetRecurrenceType(v int32) {
	o.RecurrenceType = &v
}

// GetReferenceId returns the ReferenceId field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetReferenceId() string {
	if o == nil || o.ReferenceId == nil {
		var ret string
		return ret
	}
	return *o.ReferenceId
}

// GetReferenceIdOk returns a tuple with the ReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetReferenceIdOk() (*string, bool) {
	if o == nil || o.ReferenceId == nil {
		return nil, false
	}
	return o.ReferenceId, true
}

// HasReferenceId returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasReferenceId() bool {
	if o != nil && o.ReferenceId != nil {
		return true
	}

	return false
}

// SetReferenceId gets a reference to the given string and assigns it to the ReferenceId field.
func (o *KalturaScheduleEvent) SetReferenceId(v string) {
	o.ReferenceId = &v
}

// GetSequence returns the Sequence field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetSequence() int32 {
	if o == nil || o.Sequence == nil {
		var ret int32
		return ret
	}
	return *o.Sequence
}

// GetSequenceOk returns a tuple with the Sequence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetSequenceOk() (*int32, bool) {
	if o == nil || o.Sequence == nil {
		return nil, false
	}
	return o.Sequence, true
}

// HasSequence returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasSequence() bool {
	if o != nil && o.Sequence != nil {
		return true
	}

	return false
}

// SetSequence gets a reference to the given int32 and assigns it to the Sequence field.
func (o *KalturaScheduleEvent) SetSequence(v int32) {
	o.Sequence = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetStartDate() int32 {
	if o == nil || o.StartDate == nil {
		var ret int32
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetStartDateOk() (*int32, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given int32 and assigns it to the StartDate field.
func (o *KalturaScheduleEvent) SetStartDate(v int32) {
	o.StartDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KalturaScheduleEvent) SetStatus(v int32) {
	o.Status = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetSummary() string {
	if o == nil || o.Summary == nil {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetSummaryOk() (*string, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *KalturaScheduleEvent) SetSummary(v string) {
	o.Summary = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *KalturaScheduleEvent) SetTags(v string) {
	o.Tags = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaScheduleEvent) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEvent) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaScheduleEvent) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaScheduleEvent) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

func (o KalturaScheduleEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClassificationType != nil {
		toSerialize["classificationType"] = o.ClassificationType
	}
	if o.Comment != nil {
		toSerialize["comment"] = o.Comment
	}
	if o.Contact != nil {
		toSerialize["contact"] = o.Contact
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.GeoLatitude != nil {
		toSerialize["geoLatitude"] = o.GeoLatitude
	}
	if o.GeoLongitude != nil {
		toSerialize["geoLongitude"] = o.GeoLongitude
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LinkedBy != nil {
		toSerialize["linkedBy"] = o.LinkedBy
	}
	if o.LinkedTo != nil {
		toSerialize["linkedTo"] = o.LinkedTo
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.Organizer != nil {
		toSerialize["organizer"] = o.Organizer
	}
	if o.OwnerId != nil {
		toSerialize["ownerId"] = o.OwnerId
	}
	if o.ParentId != nil {
		toSerialize["parentId"] = o.ParentId
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	if o.Recurrence != nil {
		toSerialize["recurrence"] = o.Recurrence
	}
	if o.RecurrenceType != nil {
		toSerialize["recurrenceType"] = o.RecurrenceType
	}
	if o.ReferenceId != nil {
		toSerialize["referenceId"] = o.ReferenceId
	}
	if o.Sequence != nil {
		toSerialize["sequence"] = o.Sequence
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Summary != nil {
		toSerialize["summary"] = o.Summary
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaScheduleEvent struct {
	value *KalturaScheduleEvent
	isSet bool
}

func (v NullableKalturaScheduleEvent) Get() *KalturaScheduleEvent {
	return v.value
}

func (v *NullableKalturaScheduleEvent) Set(val *KalturaScheduleEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaScheduleEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaScheduleEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaScheduleEvent(val *KalturaScheduleEvent) *NullableKalturaScheduleEvent {
	return &NullableKalturaScheduleEvent{value: val, isSet: true}
}

func (v NullableKalturaScheduleEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaScheduleEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


