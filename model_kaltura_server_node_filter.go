/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaServerNodeFilter struct for KalturaServerNodeFilter
type KalturaServerNodeFilter struct {
	KalturaServerNodeBaseFilter
}

// NewKalturaServerNodeFilter instantiates a new KalturaServerNodeFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaServerNodeFilter() *KalturaServerNodeFilter {
	this := KalturaServerNodeFilter{}
	return &this
}

// NewKalturaServerNodeFilterWithDefaults instantiates a new KalturaServerNodeFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaServerNodeFilterWithDefaults() *KalturaServerNodeFilter {
	this := KalturaServerNodeFilter{}
	return &this
}

func (o KalturaServerNodeFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaServerNodeBaseFilter, errKalturaServerNodeBaseFilter := json.Marshal(o.KalturaServerNodeBaseFilter)
	if errKalturaServerNodeBaseFilter != nil {
		return []byte{}, errKalturaServerNodeBaseFilter
	}
	errKalturaServerNodeBaseFilter = json.Unmarshal([]byte(serializedKalturaServerNodeBaseFilter), &toSerialize)
	if errKalturaServerNodeBaseFilter != nil {
		return []byte{}, errKalturaServerNodeBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaServerNodeFilter struct {
	value *KalturaServerNodeFilter
	isSet bool
}

func (v NullableKalturaServerNodeFilter) Get() *KalturaServerNodeFilter {
	return v.value
}

func (v *NullableKalturaServerNodeFilter) Set(val *KalturaServerNodeFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaServerNodeFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaServerNodeFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaServerNodeFilter(val *KalturaServerNodeFilter) *NullableKalturaServerNodeFilter {
	return &NullableKalturaServerNodeFilter{value: val, isSet: true}
}

func (v NullableKalturaServerNodeFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaServerNodeFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


