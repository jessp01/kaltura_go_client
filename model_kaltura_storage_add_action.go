/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaStorageAddAction struct for KalturaStorageAddAction
type KalturaStorageAddAction struct {
	KalturaRuleAction
}

// NewKalturaStorageAddAction instantiates a new KalturaStorageAddAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaStorageAddAction() *KalturaStorageAddAction {
	this := KalturaStorageAddAction{}
	return &this
}

// NewKalturaStorageAddActionWithDefaults instantiates a new KalturaStorageAddAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaStorageAddActionWithDefaults() *KalturaStorageAddAction {
	this := KalturaStorageAddAction{}
	return &this
}

func (o KalturaStorageAddAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaRuleAction, errKalturaRuleAction := json.Marshal(o.KalturaRuleAction)
	if errKalturaRuleAction != nil {
		return []byte{}, errKalturaRuleAction
	}
	errKalturaRuleAction = json.Unmarshal([]byte(serializedKalturaRuleAction), &toSerialize)
	if errKalturaRuleAction != nil {
		return []byte{}, errKalturaRuleAction
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaStorageAddAction struct {
	value *KalturaStorageAddAction
	isSet bool
}

func (v NullableKalturaStorageAddAction) Get() *KalturaStorageAddAction {
	return v.value
}

func (v *NullableKalturaStorageAddAction) Set(val *KalturaStorageAddAction) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaStorageAddAction) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaStorageAddAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaStorageAddAction(val *KalturaStorageAddAction) *NullableKalturaStorageAddAction {
	return &NullableKalturaStorageAddAction{value: val, isSet: true}
}

func (v NullableKalturaStorageAddAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaStorageAddAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


