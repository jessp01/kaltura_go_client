/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaDrmPlaybackPluginData struct for KalturaDrmPlaybackPluginData
type KalturaDrmPlaybackPluginData struct {
	KalturaPluginData
}

// NewKalturaDrmPlaybackPluginData instantiates a new KalturaDrmPlaybackPluginData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaDrmPlaybackPluginData() *KalturaDrmPlaybackPluginData {
	this := KalturaDrmPlaybackPluginData{}
	return &this
}

// NewKalturaDrmPlaybackPluginDataWithDefaults instantiates a new KalturaDrmPlaybackPluginData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaDrmPlaybackPluginDataWithDefaults() *KalturaDrmPlaybackPluginData {
	this := KalturaDrmPlaybackPluginData{}
	return &this
}

func (o KalturaDrmPlaybackPluginData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaPluginData, errKalturaPluginData := json.Marshal(o.KalturaPluginData)
	if errKalturaPluginData != nil {
		return []byte{}, errKalturaPluginData
	}
	errKalturaPluginData = json.Unmarshal([]byte(serializedKalturaPluginData), &toSerialize)
	if errKalturaPluginData != nil {
		return []byte{}, errKalturaPluginData
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaDrmPlaybackPluginData struct {
	value *KalturaDrmPlaybackPluginData
	isSet bool
}

func (v NullableKalturaDrmPlaybackPluginData) Get() *KalturaDrmPlaybackPluginData {
	return v.value
}

func (v *NullableKalturaDrmPlaybackPluginData) Set(val *KalturaDrmPlaybackPluginData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaDrmPlaybackPluginData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaDrmPlaybackPluginData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaDrmPlaybackPluginData(val *KalturaDrmPlaybackPluginData) *NullableKalturaDrmPlaybackPluginData {
	return &NullableKalturaDrmPlaybackPluginData{value: val, isSet: true}
}

func (v NullableKalturaDrmPlaybackPluginData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaDrmPlaybackPluginData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


