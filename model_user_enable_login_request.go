/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserEnableLoginRequest struct for UserEnableLoginRequest
type UserEnableLoginRequest struct {
	LoginId string `json:"loginId"`
	Password *string `json:"password,omitempty"`
	UserId string `json:"userId"`
}

// NewUserEnableLoginRequest instantiates a new UserEnableLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserEnableLoginRequest(loginId string, userId string) *UserEnableLoginRequest {
	this := UserEnableLoginRequest{}
	this.LoginId = loginId
	this.UserId = userId
	return &this
}

// NewUserEnableLoginRequestWithDefaults instantiates a new UserEnableLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserEnableLoginRequestWithDefaults() *UserEnableLoginRequest {
	this := UserEnableLoginRequest{}
	return &this
}

// GetLoginId returns the LoginId field value
func (o *UserEnableLoginRequest) GetLoginId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoginId
}

// GetLoginIdOk returns a tuple with the LoginId field value
// and a boolean to check if the value has been set.
func (o *UserEnableLoginRequest) GetLoginIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoginId, true
}

// SetLoginId sets field value
func (o *UserEnableLoginRequest) SetLoginId(v string) {
	o.LoginId = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UserEnableLoginRequest) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserEnableLoginRequest) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UserEnableLoginRequest) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UserEnableLoginRequest) SetPassword(v string) {
	o.Password = &v
}

// GetUserId returns the UserId field value
func (o *UserEnableLoginRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *UserEnableLoginRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *UserEnableLoginRequest) SetUserId(v string) {
	o.UserId = v
}

func (o UserEnableLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["loginId"] = o.LoginId
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableUserEnableLoginRequest struct {
	value *UserEnableLoginRequest
	isSet bool
}

func (v NullableUserEnableLoginRequest) Get() *UserEnableLoginRequest {
	return v.value
}

func (v *NullableUserEnableLoginRequest) Set(val *UserEnableLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserEnableLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserEnableLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserEnableLoginRequest(val *UserEnableLoginRequest) *NullableUserEnableLoginRequest {
	return &NullableUserEnableLoginRequest{value: val, isSet: true}
}

func (v NullableUserEnableLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserEnableLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


