/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaConvartableJobData struct for KalturaConvartableJobData
type KalturaConvartableJobData struct {
	KalturaJobData
}

// NewKalturaConvartableJobData instantiates a new KalturaConvartableJobData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaConvartableJobData() *KalturaConvartableJobData {
	this := KalturaConvartableJobData{}
	return &this
}

// NewKalturaConvartableJobDataWithDefaults instantiates a new KalturaConvartableJobData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaConvartableJobDataWithDefaults() *KalturaConvartableJobData {
	this := KalturaConvartableJobData{}
	return &this
}

func (o KalturaConvartableJobData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaJobData, errKalturaJobData := json.Marshal(o.KalturaJobData)
	if errKalturaJobData != nil {
		return []byte{}, errKalturaJobData
	}
	errKalturaJobData = json.Unmarshal([]byte(serializedKalturaJobData), &toSerialize)
	if errKalturaJobData != nil {
		return []byte{}, errKalturaJobData
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaConvartableJobData struct {
	value *KalturaConvartableJobData
	isSet bool
}

func (v NullableKalturaConvartableJobData) Get() *KalturaConvartableJobData {
	return v.value
}

func (v *NullableKalturaConvartableJobData) Set(val *KalturaConvartableJobData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaConvartableJobData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaConvartableJobData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaConvartableJobData(val *KalturaConvartableJobData) *NullableKalturaConvartableJobData {
	return &NullableKalturaConvartableJobData{value: val, isSet: true}
}

func (v NullableKalturaConvartableJobData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaConvartableJobData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


