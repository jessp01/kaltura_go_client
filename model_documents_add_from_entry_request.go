/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DocumentsAddFromEntryRequest struct for DocumentsAddFromEntryRequest
type DocumentsAddFromEntryRequest struct {
	DocumentEntry *KalturaDocumentEntry `json:"documentEntry,omitempty"`
	SourceEntryId string `json:"sourceEntryId"`
	SourceFlavorParamsId *int32 `json:"sourceFlavorParamsId,omitempty"`
}

// NewDocumentsAddFromEntryRequest instantiates a new DocumentsAddFromEntryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentsAddFromEntryRequest(sourceEntryId string) *DocumentsAddFromEntryRequest {
	this := DocumentsAddFromEntryRequest{}
	this.SourceEntryId = sourceEntryId
	return &this
}

// NewDocumentsAddFromEntryRequestWithDefaults instantiates a new DocumentsAddFromEntryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentsAddFromEntryRequestWithDefaults() *DocumentsAddFromEntryRequest {
	this := DocumentsAddFromEntryRequest{}
	return &this
}

// GetDocumentEntry returns the DocumentEntry field value if set, zero value otherwise.
func (o *DocumentsAddFromEntryRequest) GetDocumentEntry() KalturaDocumentEntry {
	if o == nil || o.DocumentEntry == nil {
		var ret KalturaDocumentEntry
		return ret
	}
	return *o.DocumentEntry
}

// GetDocumentEntryOk returns a tuple with the DocumentEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentsAddFromEntryRequest) GetDocumentEntryOk() (*KalturaDocumentEntry, bool) {
	if o == nil || o.DocumentEntry == nil {
		return nil, false
	}
	return o.DocumentEntry, true
}

// HasDocumentEntry returns a boolean if a field has been set.
func (o *DocumentsAddFromEntryRequest) HasDocumentEntry() bool {
	if o != nil && o.DocumentEntry != nil {
		return true
	}

	return false
}

// SetDocumentEntry gets a reference to the given KalturaDocumentEntry and assigns it to the DocumentEntry field.
func (o *DocumentsAddFromEntryRequest) SetDocumentEntry(v KalturaDocumentEntry) {
	o.DocumentEntry = &v
}

// GetSourceEntryId returns the SourceEntryId field value
func (o *DocumentsAddFromEntryRequest) GetSourceEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceEntryId
}

// GetSourceEntryIdOk returns a tuple with the SourceEntryId field value
// and a boolean to check if the value has been set.
func (o *DocumentsAddFromEntryRequest) GetSourceEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceEntryId, true
}

// SetSourceEntryId sets field value
func (o *DocumentsAddFromEntryRequest) SetSourceEntryId(v string) {
	o.SourceEntryId = v
}

// GetSourceFlavorParamsId returns the SourceFlavorParamsId field value if set, zero value otherwise.
func (o *DocumentsAddFromEntryRequest) GetSourceFlavorParamsId() int32 {
	if o == nil || o.SourceFlavorParamsId == nil {
		var ret int32
		return ret
	}
	return *o.SourceFlavorParamsId
}

// GetSourceFlavorParamsIdOk returns a tuple with the SourceFlavorParamsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentsAddFromEntryRequest) GetSourceFlavorParamsIdOk() (*int32, bool) {
	if o == nil || o.SourceFlavorParamsId == nil {
		return nil, false
	}
	return o.SourceFlavorParamsId, true
}

// HasSourceFlavorParamsId returns a boolean if a field has been set.
func (o *DocumentsAddFromEntryRequest) HasSourceFlavorParamsId() bool {
	if o != nil && o.SourceFlavorParamsId != nil {
		return true
	}

	return false
}

// SetSourceFlavorParamsId gets a reference to the given int32 and assigns it to the SourceFlavorParamsId field.
func (o *DocumentsAddFromEntryRequest) SetSourceFlavorParamsId(v int32) {
	o.SourceFlavorParamsId = &v
}

func (o DocumentsAddFromEntryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DocumentEntry != nil {
		toSerialize["documentEntry"] = o.DocumentEntry
	}
	if true {
		toSerialize["sourceEntryId"] = o.SourceEntryId
	}
	if o.SourceFlavorParamsId != nil {
		toSerialize["sourceFlavorParamsId"] = o.SourceFlavorParamsId
	}
	return json.Marshal(toSerialize)
}

type NullableDocumentsAddFromEntryRequest struct {
	value *DocumentsAddFromEntryRequest
	isSet bool
}

func (v NullableDocumentsAddFromEntryRequest) Get() *DocumentsAddFromEntryRequest {
	return v.value
}

func (v *NullableDocumentsAddFromEntryRequest) Set(val *DocumentsAddFromEntryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentsAddFromEntryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentsAddFromEntryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentsAddFromEntryRequest(val *DocumentsAddFromEntryRequest) *NullableDocumentsAddFromEntryRequest {
	return &NullableDocumentsAddFromEntryRequest{value: val, isSet: true}
}

func (v NullableDocumentsAddFromEntryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentsAddFromEntryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


