/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPermissionItemFilter struct for KalturaPermissionItemFilter
type KalturaPermissionItemFilter struct {
	KalturaPermissionItemBaseFilter
}

// NewKalturaPermissionItemFilter instantiates a new KalturaPermissionItemFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPermissionItemFilter() *KalturaPermissionItemFilter {
	this := KalturaPermissionItemFilter{}
	return &this
}

// NewKalturaPermissionItemFilterWithDefaults instantiates a new KalturaPermissionItemFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPermissionItemFilterWithDefaults() *KalturaPermissionItemFilter {
	this := KalturaPermissionItemFilter{}
	return &this
}

func (o KalturaPermissionItemFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaPermissionItemBaseFilter, errKalturaPermissionItemBaseFilter := json.Marshal(o.KalturaPermissionItemBaseFilter)
	if errKalturaPermissionItemBaseFilter != nil {
		return []byte{}, errKalturaPermissionItemBaseFilter
	}
	errKalturaPermissionItemBaseFilter = json.Unmarshal([]byte(serializedKalturaPermissionItemBaseFilter), &toSerialize)
	if errKalturaPermissionItemBaseFilter != nil {
		return []byte{}, errKalturaPermissionItemBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPermissionItemFilter struct {
	value *KalturaPermissionItemFilter
	isSet bool
}

func (v NullableKalturaPermissionItemFilter) Get() *KalturaPermissionItemFilter {
	return v.value
}

func (v *NullableKalturaPermissionItemFilter) Set(val *KalturaPermissionItemFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPermissionItemFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPermissionItemFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPermissionItemFilter(val *KalturaPermissionItemFilter) *NullableKalturaPermissionItemFilter {
	return &NullableKalturaPermissionItemFilter{value: val, isSet: true}
}

func (v NullableKalturaPermissionItemFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPermissionItemFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


