/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CategoryUserCopyFromCategoryRequest struct for CategoryUserCopyFromCategoryRequest
type CategoryUserCopyFromCategoryRequest struct {
	CategoryId int32 `json:"categoryId"`
}

// NewCategoryUserCopyFromCategoryRequest instantiates a new CategoryUserCopyFromCategoryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryUserCopyFromCategoryRequest(categoryId int32) *CategoryUserCopyFromCategoryRequest {
	this := CategoryUserCopyFromCategoryRequest{}
	this.CategoryId = categoryId
	return &this
}

// NewCategoryUserCopyFromCategoryRequestWithDefaults instantiates a new CategoryUserCopyFromCategoryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryUserCopyFromCategoryRequestWithDefaults() *CategoryUserCopyFromCategoryRequest {
	this := CategoryUserCopyFromCategoryRequest{}
	return &this
}

// GetCategoryId returns the CategoryId field value
func (o *CategoryUserCopyFromCategoryRequest) GetCategoryId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value
// and a boolean to check if the value has been set.
func (o *CategoryUserCopyFromCategoryRequest) GetCategoryIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryId, true
}

// SetCategoryId sets field value
func (o *CategoryUserCopyFromCategoryRequest) SetCategoryId(v int32) {
	o.CategoryId = v
}

func (o CategoryUserCopyFromCategoryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["categoryId"] = o.CategoryId
	}
	return json.Marshal(toSerialize)
}

type NullableCategoryUserCopyFromCategoryRequest struct {
	value *CategoryUserCopyFromCategoryRequest
	isSet bool
}

func (v NullableCategoryUserCopyFromCategoryRequest) Get() *CategoryUserCopyFromCategoryRequest {
	return v.value
}

func (v *NullableCategoryUserCopyFromCategoryRequest) Set(val *CategoryUserCopyFromCategoryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryUserCopyFromCategoryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryUserCopyFromCategoryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryUserCopyFromCategoryRequest(val *CategoryUserCopyFromCategoryRequest) *NullableCategoryUserCopyFromCategoryRequest {
	return &NullableCategoryUserCopyFromCategoryRequest{value: val, isSet: true}
}

func (v NullableCategoryUserCopyFromCategoryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryUserCopyFromCategoryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


