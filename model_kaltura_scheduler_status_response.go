/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSchedulerStatusResponse struct for KalturaSchedulerStatusResponse
type KalturaSchedulerStatusResponse struct {
	ControlPanelCommands []KalturaControlPanelCommand `json:"controlPanelCommands,omitempty"`
	QueuesStatus []KalturaBatchQueuesStatus `json:"queuesStatus,omitempty"`
	SchedulerConfigs []KalturaSchedulerConfig `json:"schedulerConfigs,omitempty"`
}

// NewKalturaSchedulerStatusResponse instantiates a new KalturaSchedulerStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSchedulerStatusResponse() *KalturaSchedulerStatusResponse {
	this := KalturaSchedulerStatusResponse{}
	return &this
}

// NewKalturaSchedulerStatusResponseWithDefaults instantiates a new KalturaSchedulerStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSchedulerStatusResponseWithDefaults() *KalturaSchedulerStatusResponse {
	this := KalturaSchedulerStatusResponse{}
	return &this
}

// GetControlPanelCommands returns the ControlPanelCommands field value if set, zero value otherwise.
func (o *KalturaSchedulerStatusResponse) GetControlPanelCommands() []KalturaControlPanelCommand {
	if o == nil || o.ControlPanelCommands == nil {
		var ret []KalturaControlPanelCommand
		return ret
	}
	return o.ControlPanelCommands
}

// GetControlPanelCommandsOk returns a tuple with the ControlPanelCommands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerStatusResponse) GetControlPanelCommandsOk() ([]KalturaControlPanelCommand, bool) {
	if o == nil || o.ControlPanelCommands == nil {
		return nil, false
	}
	return o.ControlPanelCommands, true
}

// HasControlPanelCommands returns a boolean if a field has been set.
func (o *KalturaSchedulerStatusResponse) HasControlPanelCommands() bool {
	if o != nil && o.ControlPanelCommands != nil {
		return true
	}

	return false
}

// SetControlPanelCommands gets a reference to the given []KalturaControlPanelCommand and assigns it to the ControlPanelCommands field.
func (o *KalturaSchedulerStatusResponse) SetControlPanelCommands(v []KalturaControlPanelCommand) {
	o.ControlPanelCommands = v
}

// GetQueuesStatus returns the QueuesStatus field value if set, zero value otherwise.
func (o *KalturaSchedulerStatusResponse) GetQueuesStatus() []KalturaBatchQueuesStatus {
	if o == nil || o.QueuesStatus == nil {
		var ret []KalturaBatchQueuesStatus
		return ret
	}
	return o.QueuesStatus
}

// GetQueuesStatusOk returns a tuple with the QueuesStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerStatusResponse) GetQueuesStatusOk() ([]KalturaBatchQueuesStatus, bool) {
	if o == nil || o.QueuesStatus == nil {
		return nil, false
	}
	return o.QueuesStatus, true
}

// HasQueuesStatus returns a boolean if a field has been set.
func (o *KalturaSchedulerStatusResponse) HasQueuesStatus() bool {
	if o != nil && o.QueuesStatus != nil {
		return true
	}

	return false
}

// SetQueuesStatus gets a reference to the given []KalturaBatchQueuesStatus and assigns it to the QueuesStatus field.
func (o *KalturaSchedulerStatusResponse) SetQueuesStatus(v []KalturaBatchQueuesStatus) {
	o.QueuesStatus = v
}

// GetSchedulerConfigs returns the SchedulerConfigs field value if set, zero value otherwise.
func (o *KalturaSchedulerStatusResponse) GetSchedulerConfigs() []KalturaSchedulerConfig {
	if o == nil || o.SchedulerConfigs == nil {
		var ret []KalturaSchedulerConfig
		return ret
	}
	return o.SchedulerConfigs
}

// GetSchedulerConfigsOk returns a tuple with the SchedulerConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerStatusResponse) GetSchedulerConfigsOk() ([]KalturaSchedulerConfig, bool) {
	if o == nil || o.SchedulerConfigs == nil {
		return nil, false
	}
	return o.SchedulerConfigs, true
}

// HasSchedulerConfigs returns a boolean if a field has been set.
func (o *KalturaSchedulerStatusResponse) HasSchedulerConfigs() bool {
	if o != nil && o.SchedulerConfigs != nil {
		return true
	}

	return false
}

// SetSchedulerConfigs gets a reference to the given []KalturaSchedulerConfig and assigns it to the SchedulerConfigs field.
func (o *KalturaSchedulerStatusResponse) SetSchedulerConfigs(v []KalturaSchedulerConfig) {
	o.SchedulerConfigs = v
}

func (o KalturaSchedulerStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ControlPanelCommands != nil {
		toSerialize["controlPanelCommands"] = o.ControlPanelCommands
	}
	if o.QueuesStatus != nil {
		toSerialize["queuesStatus"] = o.QueuesStatus
	}
	if o.SchedulerConfigs != nil {
		toSerialize["schedulerConfigs"] = o.SchedulerConfigs
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSchedulerStatusResponse struct {
	value *KalturaSchedulerStatusResponse
	isSet bool
}

func (v NullableKalturaSchedulerStatusResponse) Get() *KalturaSchedulerStatusResponse {
	return v.value
}

func (v *NullableKalturaSchedulerStatusResponse) Set(val *KalturaSchedulerStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSchedulerStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSchedulerStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSchedulerStatusResponse(val *KalturaSchedulerStatusResponse) *NullableKalturaSchedulerStatusResponse {
	return &NullableKalturaSchedulerStatusResponse{value: val, isSet: true}
}

func (v NullableKalturaSchedulerStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSchedulerStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


