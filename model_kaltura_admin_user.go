/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaAdminUser struct for KalturaAdminUser
type KalturaAdminUser struct {
	KalturaUser
}

// NewKalturaAdminUser instantiates a new KalturaAdminUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaAdminUser() *KalturaAdminUser {
	this := KalturaAdminUser{}
	return &this
}

// NewKalturaAdminUserWithDefaults instantiates a new KalturaAdminUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaAdminUserWithDefaults() *KalturaAdminUser {
	this := KalturaAdminUser{}
	return &this
}

func (o KalturaAdminUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaUser, errKalturaUser := json.Marshal(o.KalturaUser)
	if errKalturaUser != nil {
		return []byte{}, errKalturaUser
	}
	errKalturaUser = json.Unmarshal([]byte(serializedKalturaUser), &toSerialize)
	if errKalturaUser != nil {
		return []byte{}, errKalturaUser
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaAdminUser struct {
	value *KalturaAdminUser
	isSet bool
}

func (v NullableKalturaAdminUser) Get() *KalturaAdminUser {
	return v.value
}

func (v *NullableKalturaAdminUser) Set(val *KalturaAdminUser) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaAdminUser) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaAdminUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaAdminUser(val *KalturaAdminUser) *NullableKalturaAdminUser {
	return &NullableKalturaAdminUser{value: val, isSet: true}
}

func (v NullableKalturaAdminUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaAdminUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


