/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaStatsKmcEvent Will hold data from the Kaltura UI components to be passed on to the reports and analytics system
type KalturaStatsKmcEvent struct {
	ClientVer *string `json:"clientVer,omitempty"`
	EntryId *string `json:"entryId,omitempty"`
	// the client's timestamp of this event
	EventTimestamp *float32 `json:"eventTimestamp,omitempty"`
	KmcEventActionPath *string `json:"kmcEventActionPath,omitempty"`
	// Enum Type: `KalturaStatsKmcEventType`
	KmcEventType *int32 `json:"kmcEventType,omitempty"`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// a unique string generated by the client that will represent the client-side session: the primary component will pass it on to other components that sprout from it
	SessionId *string `json:"sessionId,omitempty"`
	UiconfId *int32 `json:"uiconfId,omitempty"`
	// the partner's user id
	UserId *string `json:"userId,omitempty"`
	// `readOnly`  will be retrieved from the request of the user
	UserIp *string `json:"userIp,omitempty"`
	WidgetId *string `json:"widgetId,omitempty"`
}

// NewKalturaStatsKmcEvent instantiates a new KalturaStatsKmcEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaStatsKmcEvent() *KalturaStatsKmcEvent {
	this := KalturaStatsKmcEvent{}
	return &this
}

// NewKalturaStatsKmcEventWithDefaults instantiates a new KalturaStatsKmcEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaStatsKmcEventWithDefaults() *KalturaStatsKmcEvent {
	this := KalturaStatsKmcEvent{}
	return &this
}

// GetClientVer returns the ClientVer field value if set, zero value otherwise.
func (o *KalturaStatsKmcEvent) GetClientVer() string {
	if o == nil || o.ClientVer == nil {
		var ret string
		return ret
	}
	return *o.ClientVer
}

// GetClientVerOk returns a tuple with the ClientVer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsKmcEvent) GetClientVerOk() (*string, bool) {
	if o == nil || o.ClientVer == nil {
		return nil, false
	}
	return o.ClientVer, true
}

// HasClientVer returns a boolean if a field has been set.
func (o *KalturaStatsKmcEvent) HasClientVer() bool {
	if o != nil && o.ClientVer != nil {
		return true
	}

	return false
}

// SetClientVer gets a reference to the given string and assigns it to the ClientVer field.
func (o *KalturaStatsKmcEvent) SetClientVer(v string) {
	o.ClientVer = &v
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *KalturaStatsKmcEvent) GetEntryId() string {
	if o == nil || o.EntryId == nil {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsKmcEvent) GetEntryIdOk() (*string, bool) {
	if o == nil || o.EntryId == nil {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *KalturaStatsKmcEvent) HasEntryId() bool {
	if o != nil && o.EntryId != nil {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *KalturaStatsKmcEvent) SetEntryId(v string) {
	o.EntryId = &v
}

// GetEventTimestamp returns the EventTimestamp field value if set, zero value otherwise.
func (o *KalturaStatsKmcEvent) GetEventTimestamp() float32 {
	if o == nil || o.EventTimestamp == nil {
		var ret float32
		return ret
	}
	return *o.EventTimestamp
}

// GetEventTimestampOk returns a tuple with the EventTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsKmcEvent) GetEventTimestampOk() (*float32, bool) {
	if o == nil || o.EventTimestamp == nil {
		return nil, false
	}
	return o.EventTimestamp, true
}

// HasEventTimestamp returns a boolean if a field has been set.
func (o *KalturaStatsKmcEvent) HasEventTimestamp() bool {
	if o != nil && o.EventTimestamp != nil {
		return true
	}

	return false
}

// SetEventTimestamp gets a reference to the given float32 and assigns it to the EventTimestamp field.
func (o *KalturaStatsKmcEvent) SetEventTimestamp(v float32) {
	o.EventTimestamp = &v
}

// GetKmcEventActionPath returns the KmcEventActionPath field value if set, zero value otherwise.
func (o *KalturaStatsKmcEvent) GetKmcEventActionPath() string {
	if o == nil || o.KmcEventActionPath == nil {
		var ret string
		return ret
	}
	return *o.KmcEventActionPath
}

// GetKmcEventActionPathOk returns a tuple with the KmcEventActionPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsKmcEvent) GetKmcEventActionPathOk() (*string, bool) {
	if o == nil || o.KmcEventActionPath == nil {
		return nil, false
	}
	return o.KmcEventActionPath, true
}

// HasKmcEventActionPath returns a boolean if a field has been set.
func (o *KalturaStatsKmcEvent) HasKmcEventActionPath() bool {
	if o != nil && o.KmcEventActionPath != nil {
		return true
	}

	return false
}

// SetKmcEventActionPath gets a reference to the given string and assigns it to the KmcEventActionPath field.
func (o *KalturaStatsKmcEvent) SetKmcEventActionPath(v string) {
	o.KmcEventActionPath = &v
}

// GetKmcEventType returns the KmcEventType field value if set, zero value otherwise.
func (o *KalturaStatsKmcEvent) GetKmcEventType() int32 {
	if o == nil || o.KmcEventType == nil {
		var ret int32
		return ret
	}
	return *o.KmcEventType
}

// GetKmcEventTypeOk returns a tuple with the KmcEventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsKmcEvent) GetKmcEventTypeOk() (*int32, bool) {
	if o == nil || o.KmcEventType == nil {
		return nil, false
	}
	return o.KmcEventType, true
}

// HasKmcEventType returns a boolean if a field has been set.
func (o *KalturaStatsKmcEvent) HasKmcEventType() bool {
	if o != nil && o.KmcEventType != nil {
		return true
	}

	return false
}

// SetKmcEventType gets a reference to the given int32 and assigns it to the KmcEventType field.
func (o *KalturaStatsKmcEvent) SetKmcEventType(v int32) {
	o.KmcEventType = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaStatsKmcEvent) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsKmcEvent) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaStatsKmcEvent) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaStatsKmcEvent) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *KalturaStatsKmcEvent) GetSessionId() string {
	if o == nil || o.SessionId == nil {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsKmcEvent) GetSessionIdOk() (*string, bool) {
	if o == nil || o.SessionId == nil {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *KalturaStatsKmcEvent) HasSessionId() bool {
	if o != nil && o.SessionId != nil {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *KalturaStatsKmcEvent) SetSessionId(v string) {
	o.SessionId = &v
}

// GetUiconfId returns the UiconfId field value if set, zero value otherwise.
func (o *KalturaStatsKmcEvent) GetUiconfId() int32 {
	if o == nil || o.UiconfId == nil {
		var ret int32
		return ret
	}
	return *o.UiconfId
}

// GetUiconfIdOk returns a tuple with the UiconfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsKmcEvent) GetUiconfIdOk() (*int32, bool) {
	if o == nil || o.UiconfId == nil {
		return nil, false
	}
	return o.UiconfId, true
}

// HasUiconfId returns a boolean if a field has been set.
func (o *KalturaStatsKmcEvent) HasUiconfId() bool {
	if o != nil && o.UiconfId != nil {
		return true
	}

	return false
}

// SetUiconfId gets a reference to the given int32 and assigns it to the UiconfId field.
func (o *KalturaStatsKmcEvent) SetUiconfId(v int32) {
	o.UiconfId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *KalturaStatsKmcEvent) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsKmcEvent) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *KalturaStatsKmcEvent) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *KalturaStatsKmcEvent) SetUserId(v string) {
	o.UserId = &v
}

// GetUserIp returns the UserIp field value if set, zero value otherwise.
func (o *KalturaStatsKmcEvent) GetUserIp() string {
	if o == nil || o.UserIp == nil {
		var ret string
		return ret
	}
	return *o.UserIp
}

// GetUserIpOk returns a tuple with the UserIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsKmcEvent) GetUserIpOk() (*string, bool) {
	if o == nil || o.UserIp == nil {
		return nil, false
	}
	return o.UserIp, true
}

// HasUserIp returns a boolean if a field has been set.
func (o *KalturaStatsKmcEvent) HasUserIp() bool {
	if o != nil && o.UserIp != nil {
		return true
	}

	return false
}

// SetUserIp gets a reference to the given string and assigns it to the UserIp field.
func (o *KalturaStatsKmcEvent) SetUserIp(v string) {
	o.UserIp = &v
}

// GetWidgetId returns the WidgetId field value if set, zero value otherwise.
func (o *KalturaStatsKmcEvent) GetWidgetId() string {
	if o == nil || o.WidgetId == nil {
		var ret string
		return ret
	}
	return *o.WidgetId
}

// GetWidgetIdOk returns a tuple with the WidgetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsKmcEvent) GetWidgetIdOk() (*string, bool) {
	if o == nil || o.WidgetId == nil {
		return nil, false
	}
	return o.WidgetId, true
}

// HasWidgetId returns a boolean if a field has been set.
func (o *KalturaStatsKmcEvent) HasWidgetId() bool {
	if o != nil && o.WidgetId != nil {
		return true
	}

	return false
}

// SetWidgetId gets a reference to the given string and assigns it to the WidgetId field.
func (o *KalturaStatsKmcEvent) SetWidgetId(v string) {
	o.WidgetId = &v
}

func (o KalturaStatsKmcEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientVer != nil {
		toSerialize["clientVer"] = o.ClientVer
	}
	if o.EntryId != nil {
		toSerialize["entryId"] = o.EntryId
	}
	if o.EventTimestamp != nil {
		toSerialize["eventTimestamp"] = o.EventTimestamp
	}
	if o.KmcEventActionPath != nil {
		toSerialize["kmcEventActionPath"] = o.KmcEventActionPath
	}
	if o.KmcEventType != nil {
		toSerialize["kmcEventType"] = o.KmcEventType
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.SessionId != nil {
		toSerialize["sessionId"] = o.SessionId
	}
	if o.UiconfId != nil {
		toSerialize["uiconfId"] = o.UiconfId
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.UserIp != nil {
		toSerialize["userIp"] = o.UserIp
	}
	if o.WidgetId != nil {
		toSerialize["widgetId"] = o.WidgetId
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaStatsKmcEvent struct {
	value *KalturaStatsKmcEvent
	isSet bool
}

func (v NullableKalturaStatsKmcEvent) Get() *KalturaStatsKmcEvent {
	return v.value
}

func (v *NullableKalturaStatsKmcEvent) Set(val *KalturaStatsKmcEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaStatsKmcEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaStatsKmcEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaStatsKmcEvent(val *KalturaStatsKmcEvent) *NullableKalturaStatsKmcEvent {
	return &NullableKalturaStatsKmcEvent{value: val, isSet: true}
}

func (v NullableKalturaStatsKmcEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaStatsKmcEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


