/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserGenerateQrCodeRequest struct for UserGenerateQrCodeRequest
type UserGenerateQrCodeRequest struct {
	HashKey string `json:"hashKey"`
}

// NewUserGenerateQrCodeRequest instantiates a new UserGenerateQrCodeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserGenerateQrCodeRequest(hashKey string) *UserGenerateQrCodeRequest {
	this := UserGenerateQrCodeRequest{}
	this.HashKey = hashKey
	return &this
}

// NewUserGenerateQrCodeRequestWithDefaults instantiates a new UserGenerateQrCodeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserGenerateQrCodeRequestWithDefaults() *UserGenerateQrCodeRequest {
	this := UserGenerateQrCodeRequest{}
	return &this
}

// GetHashKey returns the HashKey field value
func (o *UserGenerateQrCodeRequest) GetHashKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HashKey
}

// GetHashKeyOk returns a tuple with the HashKey field value
// and a boolean to check if the value has been set.
func (o *UserGenerateQrCodeRequest) GetHashKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HashKey, true
}

// SetHashKey sets field value
func (o *UserGenerateQrCodeRequest) SetHashKey(v string) {
	o.HashKey = v
}

func (o UserGenerateQrCodeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hashKey"] = o.HashKey
	}
	return json.Marshal(toSerialize)
}

type NullableUserGenerateQrCodeRequest struct {
	value *UserGenerateQrCodeRequest
	isSet bool
}

func (v NullableUserGenerateQrCodeRequest) Get() *UserGenerateQrCodeRequest {
	return v.value
}

func (v *NullableUserGenerateQrCodeRequest) Set(val *UserGenerateQrCodeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserGenerateQrCodeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserGenerateQrCodeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserGenerateQrCodeRequest(val *UserGenerateQrCodeRequest) *NullableUserGenerateQrCodeRequest {
	return &NullableUserGenerateQrCodeRequest{value: val, isSet: true}
}

func (v NullableUserGenerateQrCodeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserGenerateQrCodeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


