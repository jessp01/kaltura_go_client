/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLiveStreamEntryFilter struct for KalturaLiveStreamEntryFilter
type KalturaLiveStreamEntryFilter struct {
	KalturaLiveStreamEntryBaseFilter
}

// NewKalturaLiveStreamEntryFilter instantiates a new KalturaLiveStreamEntryFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLiveStreamEntryFilter() *KalturaLiveStreamEntryFilter {
	this := KalturaLiveStreamEntryFilter{}
	return &this
}

// NewKalturaLiveStreamEntryFilterWithDefaults instantiates a new KalturaLiveStreamEntryFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLiveStreamEntryFilterWithDefaults() *KalturaLiveStreamEntryFilter {
	this := KalturaLiveStreamEntryFilter{}
	return &this
}

func (o KalturaLiveStreamEntryFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaLiveStreamEntryBaseFilter, errKalturaLiveStreamEntryBaseFilter := json.Marshal(o.KalturaLiveStreamEntryBaseFilter)
	if errKalturaLiveStreamEntryBaseFilter != nil {
		return []byte{}, errKalturaLiveStreamEntryBaseFilter
	}
	errKalturaLiveStreamEntryBaseFilter = json.Unmarshal([]byte(serializedKalturaLiveStreamEntryBaseFilter), &toSerialize)
	if errKalturaLiveStreamEntryBaseFilter != nil {
		return []byte{}, errKalturaLiveStreamEntryBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLiveStreamEntryFilter struct {
	value *KalturaLiveStreamEntryFilter
	isSet bool
}

func (v NullableKalturaLiveStreamEntryFilter) Get() *KalturaLiveStreamEntryFilter {
	return v.value
}

func (v *NullableKalturaLiveStreamEntryFilter) Set(val *KalturaLiveStreamEntryFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLiveStreamEntryFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLiveStreamEntryFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLiveStreamEntryFilter(val *KalturaLiveStreamEntryFilter) *NullableKalturaLiveStreamEntryFilter {
	return &NullableKalturaLiveStreamEntryFilter{value: val, isSet: true}
}

func (v NullableKalturaLiveStreamEntryFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLiveStreamEntryFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


