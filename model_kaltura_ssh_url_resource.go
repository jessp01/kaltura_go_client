/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSshUrlResource Used to ingest media that is available on remote SSH server and accessible using the supplied URL, media file will be downloaded using import job in order to make the asset ready.
type KalturaSshUrlResource struct {
	KalturaUrlResource
}

// NewKalturaSshUrlResource instantiates a new KalturaSshUrlResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSshUrlResource() *KalturaSshUrlResource {
	this := KalturaSshUrlResource{}
	return &this
}

// NewKalturaSshUrlResourceWithDefaults instantiates a new KalturaSshUrlResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSshUrlResourceWithDefaults() *KalturaSshUrlResource {
	this := KalturaSshUrlResource{}
	return &this
}

func (o KalturaSshUrlResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaUrlResource, errKalturaUrlResource := json.Marshal(o.KalturaUrlResource)
	if errKalturaUrlResource != nil {
		return []byte{}, errKalturaUrlResource
	}
	errKalturaUrlResource = json.Unmarshal([]byte(serializedKalturaUrlResource), &toSerialize)
	if errKalturaUrlResource != nil {
		return []byte{}, errKalturaUrlResource
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSshUrlResource struct {
	value *KalturaSshUrlResource
	isSet bool
}

func (v NullableKalturaSshUrlResource) Get() *KalturaSshUrlResource {
	return v.value
}

func (v *NullableKalturaSshUrlResource) Set(val *KalturaSshUrlResource) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSshUrlResource) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSshUrlResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSshUrlResource(val *KalturaSshUrlResource) *NullableKalturaSshUrlResource {
	return &NullableKalturaSshUrlResource{value: val, isSet: true}
}

func (v NullableKalturaSshUrlResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSshUrlResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


