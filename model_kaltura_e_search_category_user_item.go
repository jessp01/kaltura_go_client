/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaESearchCategoryUserItem struct for KalturaESearchCategoryUserItem
type KalturaESearchCategoryUserItem struct {
	KalturaESearchAbstractCategoryItem
}

// NewKalturaESearchCategoryUserItem instantiates a new KalturaESearchCategoryUserItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaESearchCategoryUserItem() *KalturaESearchCategoryUserItem {
	this := KalturaESearchCategoryUserItem{}
	return &this
}

// NewKalturaESearchCategoryUserItemWithDefaults instantiates a new KalturaESearchCategoryUserItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaESearchCategoryUserItemWithDefaults() *KalturaESearchCategoryUserItem {
	this := KalturaESearchCategoryUserItem{}
	return &this
}

func (o KalturaESearchCategoryUserItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaESearchAbstractCategoryItem, errKalturaESearchAbstractCategoryItem := json.Marshal(o.KalturaESearchAbstractCategoryItem)
	if errKalturaESearchAbstractCategoryItem != nil {
		return []byte{}, errKalturaESearchAbstractCategoryItem
	}
	errKalturaESearchAbstractCategoryItem = json.Unmarshal([]byte(serializedKalturaESearchAbstractCategoryItem), &toSerialize)
	if errKalturaESearchAbstractCategoryItem != nil {
		return []byte{}, errKalturaESearchAbstractCategoryItem
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaESearchCategoryUserItem struct {
	value *KalturaESearchCategoryUserItem
	isSet bool
}

func (v NullableKalturaESearchCategoryUserItem) Get() *KalturaESearchCategoryUserItem {
	return v.value
}

func (v *NullableKalturaESearchCategoryUserItem) Set(val *KalturaESearchCategoryUserItem) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaESearchCategoryUserItem) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaESearchCategoryUserItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaESearchCategoryUserItem(val *KalturaESearchCategoryUserItem) *NullableKalturaESearchCategoryUserItem {
	return &NullableKalturaESearchCategoryUserItem{value: val, isSet: true}
}

func (v NullableKalturaESearchCategoryUserItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaESearchCategoryUserItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


