/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBatchJobResponse struct for KalturaBatchJobResponse
type KalturaBatchJobResponse struct {
	BatchJob *KalturaBatchJob `json:"batchJob,omitempty"`
	ChildBatchJobs []KalturaBatchJob `json:"childBatchJobs,omitempty"`
}

// NewKalturaBatchJobResponse instantiates a new KalturaBatchJobResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBatchJobResponse() *KalturaBatchJobResponse {
	this := KalturaBatchJobResponse{}
	return &this
}

// NewKalturaBatchJobResponseWithDefaults instantiates a new KalturaBatchJobResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBatchJobResponseWithDefaults() *KalturaBatchJobResponse {
	this := KalturaBatchJobResponse{}
	return &this
}

// GetBatchJob returns the BatchJob field value if set, zero value otherwise.
func (o *KalturaBatchJobResponse) GetBatchJob() KalturaBatchJob {
	if o == nil || o.BatchJob == nil {
		var ret KalturaBatchJob
		return ret
	}
	return *o.BatchJob
}

// GetBatchJobOk returns a tuple with the BatchJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchJobResponse) GetBatchJobOk() (*KalturaBatchJob, bool) {
	if o == nil || o.BatchJob == nil {
		return nil, false
	}
	return o.BatchJob, true
}

// HasBatchJob returns a boolean if a field has been set.
func (o *KalturaBatchJobResponse) HasBatchJob() bool {
	if o != nil && o.BatchJob != nil {
		return true
	}

	return false
}

// SetBatchJob gets a reference to the given KalturaBatchJob and assigns it to the BatchJob field.
func (o *KalturaBatchJobResponse) SetBatchJob(v KalturaBatchJob) {
	o.BatchJob = &v
}

// GetChildBatchJobs returns the ChildBatchJobs field value if set, zero value otherwise.
func (o *KalturaBatchJobResponse) GetChildBatchJobs() []KalturaBatchJob {
	if o == nil || o.ChildBatchJobs == nil {
		var ret []KalturaBatchJob
		return ret
	}
	return o.ChildBatchJobs
}

// GetChildBatchJobsOk returns a tuple with the ChildBatchJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchJobResponse) GetChildBatchJobsOk() ([]KalturaBatchJob, bool) {
	if o == nil || o.ChildBatchJobs == nil {
		return nil, false
	}
	return o.ChildBatchJobs, true
}

// HasChildBatchJobs returns a boolean if a field has been set.
func (o *KalturaBatchJobResponse) HasChildBatchJobs() bool {
	if o != nil && o.ChildBatchJobs != nil {
		return true
	}

	return false
}

// SetChildBatchJobs gets a reference to the given []KalturaBatchJob and assigns it to the ChildBatchJobs field.
func (o *KalturaBatchJobResponse) SetChildBatchJobs(v []KalturaBatchJob) {
	o.ChildBatchJobs = v
}

func (o KalturaBatchJobResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BatchJob != nil {
		toSerialize["batchJob"] = o.BatchJob
	}
	if o.ChildBatchJobs != nil {
		toSerialize["childBatchJobs"] = o.ChildBatchJobs
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBatchJobResponse struct {
	value *KalturaBatchJobResponse
	isSet bool
}

func (v NullableKalturaBatchJobResponse) Get() *KalturaBatchJobResponse {
	return v.value
}

func (v *NullableKalturaBatchJobResponse) Set(val *KalturaBatchJobResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBatchJobResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBatchJobResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBatchJobResponse(val *KalturaBatchJobResponse) *NullableKalturaBatchJobResponse {
	return &NullableKalturaBatchJobResponse{value: val, isSet: true}
}

func (v NullableKalturaBatchJobResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBatchJobResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


