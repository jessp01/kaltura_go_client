/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EntryVendorTaskGetServeUrlRequest struct for EntryVendorTaskGetServeUrlRequest
type EntryVendorTaskGetServeUrlRequest struct {
	DueDate *string `json:"dueDate,omitempty"`
	FilterInput *int32 `json:"filterInput,omitempty"`
	FilterType *string `json:"filterType,omitempty"`
	Status *int32 `json:"status,omitempty"`
}

// NewEntryVendorTaskGetServeUrlRequest instantiates a new EntryVendorTaskGetServeUrlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntryVendorTaskGetServeUrlRequest() *EntryVendorTaskGetServeUrlRequest {
	this := EntryVendorTaskGetServeUrlRequest{}
	return &this
}

// NewEntryVendorTaskGetServeUrlRequestWithDefaults instantiates a new EntryVendorTaskGetServeUrlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntryVendorTaskGetServeUrlRequestWithDefaults() *EntryVendorTaskGetServeUrlRequest {
	this := EntryVendorTaskGetServeUrlRequest{}
	return &this
}

// GetDueDate returns the DueDate field value if set, zero value otherwise.
func (o *EntryVendorTaskGetServeUrlRequest) GetDueDate() string {
	if o == nil || o.DueDate == nil {
		var ret string
		return ret
	}
	return *o.DueDate
}

// GetDueDateOk returns a tuple with the DueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntryVendorTaskGetServeUrlRequest) GetDueDateOk() (*string, bool) {
	if o == nil || o.DueDate == nil {
		return nil, false
	}
	return o.DueDate, true
}

// HasDueDate returns a boolean if a field has been set.
func (o *EntryVendorTaskGetServeUrlRequest) HasDueDate() bool {
	if o != nil && o.DueDate != nil {
		return true
	}

	return false
}

// SetDueDate gets a reference to the given string and assigns it to the DueDate field.
func (o *EntryVendorTaskGetServeUrlRequest) SetDueDate(v string) {
	o.DueDate = &v
}

// GetFilterInput returns the FilterInput field value if set, zero value otherwise.
func (o *EntryVendorTaskGetServeUrlRequest) GetFilterInput() int32 {
	if o == nil || o.FilterInput == nil {
		var ret int32
		return ret
	}
	return *o.FilterInput
}

// GetFilterInputOk returns a tuple with the FilterInput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntryVendorTaskGetServeUrlRequest) GetFilterInputOk() (*int32, bool) {
	if o == nil || o.FilterInput == nil {
		return nil, false
	}
	return o.FilterInput, true
}

// HasFilterInput returns a boolean if a field has been set.
func (o *EntryVendorTaskGetServeUrlRequest) HasFilterInput() bool {
	if o != nil && o.FilterInput != nil {
		return true
	}

	return false
}

// SetFilterInput gets a reference to the given int32 and assigns it to the FilterInput field.
func (o *EntryVendorTaskGetServeUrlRequest) SetFilterInput(v int32) {
	o.FilterInput = &v
}

// GetFilterType returns the FilterType field value if set, zero value otherwise.
func (o *EntryVendorTaskGetServeUrlRequest) GetFilterType() string {
	if o == nil || o.FilterType == nil {
		var ret string
		return ret
	}
	return *o.FilterType
}

// GetFilterTypeOk returns a tuple with the FilterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntryVendorTaskGetServeUrlRequest) GetFilterTypeOk() (*string, bool) {
	if o == nil || o.FilterType == nil {
		return nil, false
	}
	return o.FilterType, true
}

// HasFilterType returns a boolean if a field has been set.
func (o *EntryVendorTaskGetServeUrlRequest) HasFilterType() bool {
	if o != nil && o.FilterType != nil {
		return true
	}

	return false
}

// SetFilterType gets a reference to the given string and assigns it to the FilterType field.
func (o *EntryVendorTaskGetServeUrlRequest) SetFilterType(v string) {
	o.FilterType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *EntryVendorTaskGetServeUrlRequest) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntryVendorTaskGetServeUrlRequest) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *EntryVendorTaskGetServeUrlRequest) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *EntryVendorTaskGetServeUrlRequest) SetStatus(v int32) {
	o.Status = &v
}

func (o EntryVendorTaskGetServeUrlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DueDate != nil {
		toSerialize["dueDate"] = o.DueDate
	}
	if o.FilterInput != nil {
		toSerialize["filterInput"] = o.FilterInput
	}
	if o.FilterType != nil {
		toSerialize["filterType"] = o.FilterType
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableEntryVendorTaskGetServeUrlRequest struct {
	value *EntryVendorTaskGetServeUrlRequest
	isSet bool
}

func (v NullableEntryVendorTaskGetServeUrlRequest) Get() *EntryVendorTaskGetServeUrlRequest {
	return v.value
}

func (v *NullableEntryVendorTaskGetServeUrlRequest) Set(val *EntryVendorTaskGetServeUrlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEntryVendorTaskGetServeUrlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEntryVendorTaskGetServeUrlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntryVendorTaskGetServeUrlRequest(val *EntryVendorTaskGetServeUrlRequest) *NullableEntryVendorTaskGetServeUrlRequest {
	return &NullableEntryVendorTaskGetServeUrlRequest{value: val, isSet: true}
}

func (v NullableEntryVendorTaskGetServeUrlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntryVendorTaskGetServeUrlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


