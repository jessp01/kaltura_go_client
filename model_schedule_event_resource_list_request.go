/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ScheduleEventResourceListRequest struct for ScheduleEventResourceListRequest
type ScheduleEventResourceListRequest struct {
	Filter *KalturaScheduleEventResourceFilter `json:"filter,omitempty"`
	FilterBlackoutConflicts *bool `json:"filterBlackoutConflicts,omitempty"`
	Pager *KalturaFilterPager `json:"pager,omitempty"`
}

// NewScheduleEventResourceListRequest instantiates a new ScheduleEventResourceListRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleEventResourceListRequest() *ScheduleEventResourceListRequest {
	this := ScheduleEventResourceListRequest{}
	var filterBlackoutConflicts bool = true
	this.FilterBlackoutConflicts = &filterBlackoutConflicts
	return &this
}

// NewScheduleEventResourceListRequestWithDefaults instantiates a new ScheduleEventResourceListRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleEventResourceListRequestWithDefaults() *ScheduleEventResourceListRequest {
	this := ScheduleEventResourceListRequest{}
	var filterBlackoutConflicts bool = true
	this.FilterBlackoutConflicts = &filterBlackoutConflicts
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *ScheduleEventResourceListRequest) GetFilter() KalturaScheduleEventResourceFilter {
	if o == nil || o.Filter == nil {
		var ret KalturaScheduleEventResourceFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleEventResourceListRequest) GetFilterOk() (*KalturaScheduleEventResourceFilter, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *ScheduleEventResourceListRequest) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given KalturaScheduleEventResourceFilter and assigns it to the Filter field.
func (o *ScheduleEventResourceListRequest) SetFilter(v KalturaScheduleEventResourceFilter) {
	o.Filter = &v
}

// GetFilterBlackoutConflicts returns the FilterBlackoutConflicts field value if set, zero value otherwise.
func (o *ScheduleEventResourceListRequest) GetFilterBlackoutConflicts() bool {
	if o == nil || o.FilterBlackoutConflicts == nil {
		var ret bool
		return ret
	}
	return *o.FilterBlackoutConflicts
}

// GetFilterBlackoutConflictsOk returns a tuple with the FilterBlackoutConflicts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleEventResourceListRequest) GetFilterBlackoutConflictsOk() (*bool, bool) {
	if o == nil || o.FilterBlackoutConflicts == nil {
		return nil, false
	}
	return o.FilterBlackoutConflicts, true
}

// HasFilterBlackoutConflicts returns a boolean if a field has been set.
func (o *ScheduleEventResourceListRequest) HasFilterBlackoutConflicts() bool {
	if o != nil && o.FilterBlackoutConflicts != nil {
		return true
	}

	return false
}

// SetFilterBlackoutConflicts gets a reference to the given bool and assigns it to the FilterBlackoutConflicts field.
func (o *ScheduleEventResourceListRequest) SetFilterBlackoutConflicts(v bool) {
	o.FilterBlackoutConflicts = &v
}

// GetPager returns the Pager field value if set, zero value otherwise.
func (o *ScheduleEventResourceListRequest) GetPager() KalturaFilterPager {
	if o == nil || o.Pager == nil {
		var ret KalturaFilterPager
		return ret
	}
	return *o.Pager
}

// GetPagerOk returns a tuple with the Pager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScheduleEventResourceListRequest) GetPagerOk() (*KalturaFilterPager, bool) {
	if o == nil || o.Pager == nil {
		return nil, false
	}
	return o.Pager, true
}

// HasPager returns a boolean if a field has been set.
func (o *ScheduleEventResourceListRequest) HasPager() bool {
	if o != nil && o.Pager != nil {
		return true
	}

	return false
}

// SetPager gets a reference to the given KalturaFilterPager and assigns it to the Pager field.
func (o *ScheduleEventResourceListRequest) SetPager(v KalturaFilterPager) {
	o.Pager = &v
}

func (o ScheduleEventResourceListRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if o.FilterBlackoutConflicts != nil {
		toSerialize["filterBlackoutConflicts"] = o.FilterBlackoutConflicts
	}
	if o.Pager != nil {
		toSerialize["pager"] = o.Pager
	}
	return json.Marshal(toSerialize)
}

type NullableScheduleEventResourceListRequest struct {
	value *ScheduleEventResourceListRequest
	isSet bool
}

func (v NullableScheduleEventResourceListRequest) Get() *ScheduleEventResourceListRequest {
	return v.value
}

func (v *NullableScheduleEventResourceListRequest) Set(val *ScheduleEventResourceListRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleEventResourceListRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleEventResourceListRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleEventResourceListRequest(val *ScheduleEventResourceListRequest) *NullableScheduleEventResourceListRequest {
	return &NullableScheduleEventResourceListRequest{value: val, isSet: true}
}

func (v NullableScheduleEventResourceListRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleEventResourceListRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


