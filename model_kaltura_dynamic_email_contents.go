/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaDynamicEmailContents struct for KalturaDynamicEmailContents
type KalturaDynamicEmailContents struct {
	// The body of the customized email
	EmailBody *string `json:"emailBody,omitempty"`
	// The subject of the customized email
	EmailSubject *string `json:"emailSubject,omitempty"`
}

// NewKalturaDynamicEmailContents instantiates a new KalturaDynamicEmailContents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaDynamicEmailContents() *KalturaDynamicEmailContents {
	this := KalturaDynamicEmailContents{}
	return &this
}

// NewKalturaDynamicEmailContentsWithDefaults instantiates a new KalturaDynamicEmailContents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaDynamicEmailContentsWithDefaults() *KalturaDynamicEmailContents {
	this := KalturaDynamicEmailContents{}
	return &this
}

// GetEmailBody returns the EmailBody field value if set, zero value otherwise.
func (o *KalturaDynamicEmailContents) GetEmailBody() string {
	if o == nil || o.EmailBody == nil {
		var ret string
		return ret
	}
	return *o.EmailBody
}

// GetEmailBodyOk returns a tuple with the EmailBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDynamicEmailContents) GetEmailBodyOk() (*string, bool) {
	if o == nil || o.EmailBody == nil {
		return nil, false
	}
	return o.EmailBody, true
}

// HasEmailBody returns a boolean if a field has been set.
func (o *KalturaDynamicEmailContents) HasEmailBody() bool {
	if o != nil && o.EmailBody != nil {
		return true
	}

	return false
}

// SetEmailBody gets a reference to the given string and assigns it to the EmailBody field.
func (o *KalturaDynamicEmailContents) SetEmailBody(v string) {
	o.EmailBody = &v
}

// GetEmailSubject returns the EmailSubject field value if set, zero value otherwise.
func (o *KalturaDynamicEmailContents) GetEmailSubject() string {
	if o == nil || o.EmailSubject == nil {
		var ret string
		return ret
	}
	return *o.EmailSubject
}

// GetEmailSubjectOk returns a tuple with the EmailSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDynamicEmailContents) GetEmailSubjectOk() (*string, bool) {
	if o == nil || o.EmailSubject == nil {
		return nil, false
	}
	return o.EmailSubject, true
}

// HasEmailSubject returns a boolean if a field has been set.
func (o *KalturaDynamicEmailContents) HasEmailSubject() bool {
	if o != nil && o.EmailSubject != nil {
		return true
	}

	return false
}

// SetEmailSubject gets a reference to the given string and assigns it to the EmailSubject field.
func (o *KalturaDynamicEmailContents) SetEmailSubject(v string) {
	o.EmailSubject = &v
}

func (o KalturaDynamicEmailContents) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EmailBody != nil {
		toSerialize["emailBody"] = o.EmailBody
	}
	if o.EmailSubject != nil {
		toSerialize["emailSubject"] = o.EmailSubject
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaDynamicEmailContents struct {
	value *KalturaDynamicEmailContents
	isSet bool
}

func (v NullableKalturaDynamicEmailContents) Get() *KalturaDynamicEmailContents {
	return v.value
}

func (v *NullableKalturaDynamicEmailContents) Set(val *KalturaDynamicEmailContents) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaDynamicEmailContents) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaDynamicEmailContents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaDynamicEmailContents(val *KalturaDynamicEmailContents) *NullableKalturaDynamicEmailContents {
	return &NullableKalturaDynamicEmailContents{value: val, isSet: true}
}

func (v NullableKalturaDynamicEmailContents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaDynamicEmailContents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


