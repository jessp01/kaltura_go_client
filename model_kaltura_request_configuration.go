/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaRequestConfiguration Define client request optional configurations  /
type KalturaRequestConfiguration struct {
	// Kaltura API session
	Ks *string `json:"ks,omitempty"`
	// Impersonated partner id
	PartnerId *int32 `json:"partnerId,omitempty"`
	ResponseProfile *KalturaBaseResponseProfile `json:"responseProfile,omitempty"`
}

// NewKalturaRequestConfiguration instantiates a new KalturaRequestConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaRequestConfiguration() *KalturaRequestConfiguration {
	this := KalturaRequestConfiguration{}
	return &this
}

// NewKalturaRequestConfigurationWithDefaults instantiates a new KalturaRequestConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaRequestConfigurationWithDefaults() *KalturaRequestConfiguration {
	this := KalturaRequestConfiguration{}
	return &this
}

// GetKs returns the Ks field value if set, zero value otherwise.
func (o *KalturaRequestConfiguration) GetKs() string {
	if o == nil || o.Ks == nil {
		var ret string
		return ret
	}
	return *o.Ks
}

// GetKsOk returns a tuple with the Ks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaRequestConfiguration) GetKsOk() (*string, bool) {
	if o == nil || o.Ks == nil {
		return nil, false
	}
	return o.Ks, true
}

// HasKs returns a boolean if a field has been set.
func (o *KalturaRequestConfiguration) HasKs() bool {
	if o != nil && o.Ks != nil {
		return true
	}

	return false
}

// SetKs gets a reference to the given string and assigns it to the Ks field.
func (o *KalturaRequestConfiguration) SetKs(v string) {
	o.Ks = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaRequestConfiguration) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaRequestConfiguration) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaRequestConfiguration) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaRequestConfiguration) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetResponseProfile returns the ResponseProfile field value if set, zero value otherwise.
func (o *KalturaRequestConfiguration) GetResponseProfile() KalturaBaseResponseProfile {
	if o == nil || o.ResponseProfile == nil {
		var ret KalturaBaseResponseProfile
		return ret
	}
	return *o.ResponseProfile
}

// GetResponseProfileOk returns a tuple with the ResponseProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaRequestConfiguration) GetResponseProfileOk() (*KalturaBaseResponseProfile, bool) {
	if o == nil || o.ResponseProfile == nil {
		return nil, false
	}
	return o.ResponseProfile, true
}

// HasResponseProfile returns a boolean if a field has been set.
func (o *KalturaRequestConfiguration) HasResponseProfile() bool {
	if o != nil && o.ResponseProfile != nil {
		return true
	}

	return false
}

// SetResponseProfile gets a reference to the given KalturaBaseResponseProfile and assigns it to the ResponseProfile field.
func (o *KalturaRequestConfiguration) SetResponseProfile(v KalturaBaseResponseProfile) {
	o.ResponseProfile = &v
}

func (o KalturaRequestConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ks != nil {
		toSerialize["ks"] = o.Ks
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.ResponseProfile != nil {
		toSerialize["responseProfile"] = o.ResponseProfile
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaRequestConfiguration struct {
	value *KalturaRequestConfiguration
	isSet bool
}

func (v NullableKalturaRequestConfiguration) Get() *KalturaRequestConfiguration {
	return v.value
}

func (v *NullableKalturaRequestConfiguration) Set(val *KalturaRequestConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaRequestConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaRequestConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaRequestConfiguration(val *KalturaRequestConfiguration) *NullableKalturaRequestConfiguration {
	return &NullableKalturaRequestConfiguration{value: val, isSet: true}
}

func (v NullableKalturaRequestConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaRequestConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


