/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaConferenceServerNodeFilter struct for KalturaConferenceServerNodeFilter
type KalturaConferenceServerNodeFilter struct {
	KalturaConferenceServerNodeBaseFilter
}

// NewKalturaConferenceServerNodeFilter instantiates a new KalturaConferenceServerNodeFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaConferenceServerNodeFilter() *KalturaConferenceServerNodeFilter {
	this := KalturaConferenceServerNodeFilter{}
	return &this
}

// NewKalturaConferenceServerNodeFilterWithDefaults instantiates a new KalturaConferenceServerNodeFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaConferenceServerNodeFilterWithDefaults() *KalturaConferenceServerNodeFilter {
	this := KalturaConferenceServerNodeFilter{}
	return &this
}

func (o KalturaConferenceServerNodeFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaConferenceServerNodeBaseFilter, errKalturaConferenceServerNodeBaseFilter := json.Marshal(o.KalturaConferenceServerNodeBaseFilter)
	if errKalturaConferenceServerNodeBaseFilter != nil {
		return []byte{}, errKalturaConferenceServerNodeBaseFilter
	}
	errKalturaConferenceServerNodeBaseFilter = json.Unmarshal([]byte(serializedKalturaConferenceServerNodeBaseFilter), &toSerialize)
	if errKalturaConferenceServerNodeBaseFilter != nil {
		return []byte{}, errKalturaConferenceServerNodeBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaConferenceServerNodeFilter struct {
	value *KalturaConferenceServerNodeFilter
	isSet bool
}

func (v NullableKalturaConferenceServerNodeFilter) Get() *KalturaConferenceServerNodeFilter {
	return v.value
}

func (v *NullableKalturaConferenceServerNodeFilter) Set(val *KalturaConferenceServerNodeFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaConferenceServerNodeFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaConferenceServerNodeFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaConferenceServerNodeFilter(val *KalturaConferenceServerNodeFilter) *NullableKalturaConferenceServerNodeFilter {
	return &NullableKalturaConferenceServerNodeFilter{value: val, isSet: true}
}

func (v NullableKalturaConferenceServerNodeFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaConferenceServerNodeFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


