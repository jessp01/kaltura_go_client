/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPartnerStatistics struct for KalturaPartnerStatistics
type KalturaPartnerStatistics struct {
	// `readOnly`  Partner total bandwidth in GB
	Bandwidth *float32 `json:"bandwidth,omitempty"`
	// `readOnly`  Partner total hosting in GB on the disk
	Hosting *float32 `json:"hosting,omitempty"`
	// `readOnly`  Package total allowed bandwidth and storage
	PackageBandwidthAndStorage *int32 `json:"packageBandwidthAndStorage,omitempty"`
	// `readOnly`  date when partner reached the limit of his package (timestamp)
	ReachedLimitDate *int32 `json:"reachedLimitDate,omitempty"`
	// `readOnly`  total usage in GB - including bandwidth and storage
	Usage *int32 `json:"usage,omitempty"`
	// `readOnly`  Percent of usage out of partner's package. if usage is 5GB and package is 10GB, this value will be 50
	UsagePercent *float32 `json:"usagePercent,omitempty"`
}

// NewKalturaPartnerStatistics instantiates a new KalturaPartnerStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPartnerStatistics() *KalturaPartnerStatistics {
	this := KalturaPartnerStatistics{}
	return &this
}

// NewKalturaPartnerStatisticsWithDefaults instantiates a new KalturaPartnerStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPartnerStatisticsWithDefaults() *KalturaPartnerStatistics {
	this := KalturaPartnerStatistics{}
	return &this
}

// GetBandwidth returns the Bandwidth field value if set, zero value otherwise.
func (o *KalturaPartnerStatistics) GetBandwidth() float32 {
	if o == nil || o.Bandwidth == nil {
		var ret float32
		return ret
	}
	return *o.Bandwidth
}

// GetBandwidthOk returns a tuple with the Bandwidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPartnerStatistics) GetBandwidthOk() (*float32, bool) {
	if o == nil || o.Bandwidth == nil {
		return nil, false
	}
	return o.Bandwidth, true
}

// HasBandwidth returns a boolean if a field has been set.
func (o *KalturaPartnerStatistics) HasBandwidth() bool {
	if o != nil && o.Bandwidth != nil {
		return true
	}

	return false
}

// SetBandwidth gets a reference to the given float32 and assigns it to the Bandwidth field.
func (o *KalturaPartnerStatistics) SetBandwidth(v float32) {
	o.Bandwidth = &v
}

// GetHosting returns the Hosting field value if set, zero value otherwise.
func (o *KalturaPartnerStatistics) GetHosting() float32 {
	if o == nil || o.Hosting == nil {
		var ret float32
		return ret
	}
	return *o.Hosting
}

// GetHostingOk returns a tuple with the Hosting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPartnerStatistics) GetHostingOk() (*float32, bool) {
	if o == nil || o.Hosting == nil {
		return nil, false
	}
	return o.Hosting, true
}

// HasHosting returns a boolean if a field has been set.
func (o *KalturaPartnerStatistics) HasHosting() bool {
	if o != nil && o.Hosting != nil {
		return true
	}

	return false
}

// SetHosting gets a reference to the given float32 and assigns it to the Hosting field.
func (o *KalturaPartnerStatistics) SetHosting(v float32) {
	o.Hosting = &v
}

// GetPackageBandwidthAndStorage returns the PackageBandwidthAndStorage field value if set, zero value otherwise.
func (o *KalturaPartnerStatistics) GetPackageBandwidthAndStorage() int32 {
	if o == nil || o.PackageBandwidthAndStorage == nil {
		var ret int32
		return ret
	}
	return *o.PackageBandwidthAndStorage
}

// GetPackageBandwidthAndStorageOk returns a tuple with the PackageBandwidthAndStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPartnerStatistics) GetPackageBandwidthAndStorageOk() (*int32, bool) {
	if o == nil || o.PackageBandwidthAndStorage == nil {
		return nil, false
	}
	return o.PackageBandwidthAndStorage, true
}

// HasPackageBandwidthAndStorage returns a boolean if a field has been set.
func (o *KalturaPartnerStatistics) HasPackageBandwidthAndStorage() bool {
	if o != nil && o.PackageBandwidthAndStorage != nil {
		return true
	}

	return false
}

// SetPackageBandwidthAndStorage gets a reference to the given int32 and assigns it to the PackageBandwidthAndStorage field.
func (o *KalturaPartnerStatistics) SetPackageBandwidthAndStorage(v int32) {
	o.PackageBandwidthAndStorage = &v
}

// GetReachedLimitDate returns the ReachedLimitDate field value if set, zero value otherwise.
func (o *KalturaPartnerStatistics) GetReachedLimitDate() int32 {
	if o == nil || o.ReachedLimitDate == nil {
		var ret int32
		return ret
	}
	return *o.ReachedLimitDate
}

// GetReachedLimitDateOk returns a tuple with the ReachedLimitDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPartnerStatistics) GetReachedLimitDateOk() (*int32, bool) {
	if o == nil || o.ReachedLimitDate == nil {
		return nil, false
	}
	return o.ReachedLimitDate, true
}

// HasReachedLimitDate returns a boolean if a field has been set.
func (o *KalturaPartnerStatistics) HasReachedLimitDate() bool {
	if o != nil && o.ReachedLimitDate != nil {
		return true
	}

	return false
}

// SetReachedLimitDate gets a reference to the given int32 and assigns it to the ReachedLimitDate field.
func (o *KalturaPartnerStatistics) SetReachedLimitDate(v int32) {
	o.ReachedLimitDate = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *KalturaPartnerStatistics) GetUsage() int32 {
	if o == nil || o.Usage == nil {
		var ret int32
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPartnerStatistics) GetUsageOk() (*int32, bool) {
	if o == nil || o.Usage == nil {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *KalturaPartnerStatistics) HasUsage() bool {
	if o != nil && o.Usage != nil {
		return true
	}

	return false
}

// SetUsage gets a reference to the given int32 and assigns it to the Usage field.
func (o *KalturaPartnerStatistics) SetUsage(v int32) {
	o.Usage = &v
}

// GetUsagePercent returns the UsagePercent field value if set, zero value otherwise.
func (o *KalturaPartnerStatistics) GetUsagePercent() float32 {
	if o == nil || o.UsagePercent == nil {
		var ret float32
		return ret
	}
	return *o.UsagePercent
}

// GetUsagePercentOk returns a tuple with the UsagePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPartnerStatistics) GetUsagePercentOk() (*float32, bool) {
	if o == nil || o.UsagePercent == nil {
		return nil, false
	}
	return o.UsagePercent, true
}

// HasUsagePercent returns a boolean if a field has been set.
func (o *KalturaPartnerStatistics) HasUsagePercent() bool {
	if o != nil && o.UsagePercent != nil {
		return true
	}

	return false
}

// SetUsagePercent gets a reference to the given float32 and assigns it to the UsagePercent field.
func (o *KalturaPartnerStatistics) SetUsagePercent(v float32) {
	o.UsagePercent = &v
}

func (o KalturaPartnerStatistics) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bandwidth != nil {
		toSerialize["bandwidth"] = o.Bandwidth
	}
	if o.Hosting != nil {
		toSerialize["hosting"] = o.Hosting
	}
	if o.PackageBandwidthAndStorage != nil {
		toSerialize["packageBandwidthAndStorage"] = o.PackageBandwidthAndStorage
	}
	if o.ReachedLimitDate != nil {
		toSerialize["reachedLimitDate"] = o.ReachedLimitDate
	}
	if o.Usage != nil {
		toSerialize["usage"] = o.Usage
	}
	if o.UsagePercent != nil {
		toSerialize["usagePercent"] = o.UsagePercent
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPartnerStatistics struct {
	value *KalturaPartnerStatistics
	isSet bool
}

func (v NullableKalturaPartnerStatistics) Get() *KalturaPartnerStatistics {
	return v.value
}

func (v *NullableKalturaPartnerStatistics) Set(val *KalturaPartnerStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPartnerStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPartnerStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPartnerStatistics(val *KalturaPartnerStatistics) *NullableKalturaPartnerStatistics {
	return &NullableKalturaPartnerStatistics{value: val, isSet: true}
}

func (v NullableKalturaPartnerStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPartnerStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


