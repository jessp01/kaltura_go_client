/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaDataEntryFilter struct for KalturaDataEntryFilter
type KalturaDataEntryFilter struct {
	KalturaDataEntryBaseFilter
}

// NewKalturaDataEntryFilter instantiates a new KalturaDataEntryFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaDataEntryFilter() *KalturaDataEntryFilter {
	this := KalturaDataEntryFilter{}
	return &this
}

// NewKalturaDataEntryFilterWithDefaults instantiates a new KalturaDataEntryFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaDataEntryFilterWithDefaults() *KalturaDataEntryFilter {
	this := KalturaDataEntryFilter{}
	return &this
}

func (o KalturaDataEntryFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaDataEntryBaseFilter, errKalturaDataEntryBaseFilter := json.Marshal(o.KalturaDataEntryBaseFilter)
	if errKalturaDataEntryBaseFilter != nil {
		return []byte{}, errKalturaDataEntryBaseFilter
	}
	errKalturaDataEntryBaseFilter = json.Unmarshal([]byte(serializedKalturaDataEntryBaseFilter), &toSerialize)
	if errKalturaDataEntryBaseFilter != nil {
		return []byte{}, errKalturaDataEntryBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaDataEntryFilter struct {
	value *KalturaDataEntryFilter
	isSet bool
}

func (v NullableKalturaDataEntryFilter) Get() *KalturaDataEntryFilter {
	return v.value
}

func (v *NullableKalturaDataEntryFilter) Set(val *KalturaDataEntryFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaDataEntryFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaDataEntryFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaDataEntryFilter(val *KalturaDataEntryFilter) *NullableKalturaDataEntryFilter {
	return &NullableKalturaDataEntryFilter{value: val, isSet: true}
}

func (v NullableKalturaDataEntryFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaDataEntryFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


