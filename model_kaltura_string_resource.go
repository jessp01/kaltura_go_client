/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaStringResource Used to ingest string content.
type KalturaStringResource struct {
	KalturaContentResource
}

// NewKalturaStringResource instantiates a new KalturaStringResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaStringResource() *KalturaStringResource {
	this := KalturaStringResource{}
	return &this
}

// NewKalturaStringResourceWithDefaults instantiates a new KalturaStringResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaStringResourceWithDefaults() *KalturaStringResource {
	this := KalturaStringResource{}
	return &this
}

func (o KalturaStringResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaContentResource, errKalturaContentResource := json.Marshal(o.KalturaContentResource)
	if errKalturaContentResource != nil {
		return []byte{}, errKalturaContentResource
	}
	errKalturaContentResource = json.Unmarshal([]byte(serializedKalturaContentResource), &toSerialize)
	if errKalturaContentResource != nil {
		return []byte{}, errKalturaContentResource
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaStringResource struct {
	value *KalturaStringResource
	isSet bool
}

func (v NullableKalturaStringResource) Get() *KalturaStringResource {
	return v.value
}

func (v *NullableKalturaStringResource) Set(val *KalturaStringResource) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaStringResource) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaStringResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaStringResource(val *KalturaStringResource) *NullableKalturaStringResource {
	return &NullableKalturaStringResource{value: val, isSet: true}
}

func (v NullableKalturaStringResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaStringResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


