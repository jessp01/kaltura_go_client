/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaDropFolderFile struct for KalturaDropFolderFile
type KalturaDropFolderFile struct {
	// `readOnly`
	BatchJobId *int32 `json:"batchJobId,omitempty"`
	// `readOnly`
	CreatedAt *int32 `json:"createdAt,omitempty"`
	DeletedDropFolderFileId *int32 `json:"deletedDropFolderFileId,omitempty"`
	// `insertOnly`
	DropFolderId *int32 `json:"dropFolderId,omitempty"`
	EntryId *string `json:"entryId,omitempty"`
	// Enum Type: `KalturaDropFolderFileErrorCode`
	ErrorCode *string `json:"errorCode,omitempty"`
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// `insertOnly`
	FileName *string `json:"fileName,omitempty"`
	FileSize *float32 `json:"fileSize,omitempty"`
	// `readOnly`
	FileSizeLastSetAt *int32 `json:"fileSizeLastSetAt,omitempty"`
	// `readOnly`
	Id *int32 `json:"id,omitempty"`
	ImportEndedAt *int32 `json:"importEndedAt,omitempty"`
	ImportStartedAt *int32 `json:"importStartedAt,omitempty"`
	LastModificationTime *string `json:"lastModificationTime,omitempty"`
	LeadDropFolderFileId *int32 `json:"leadDropFolderFileId,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	ParsedFlavor *string `json:"parsedFlavor,omitempty"`
	ParsedSlug *string `json:"parsedSlug,omitempty"`
	ParsedUserId *string `json:"parsedUserId,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// `readOnly`  Enum Type: `KalturaDropFolderFileStatus`
	Status *int32 `json:"status,omitempty"`
	// `readOnly`  Enum Type: `KalturaDropFolderType`
	Type *string `json:"type,omitempty"`
	// `readOnly`
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
	UploadEndDetectedAt *int32 `json:"uploadEndDetectedAt,omitempty"`
	UploadStartDetectedAt *int32 `json:"uploadStartDetectedAt,omitempty"`
}

// NewKalturaDropFolderFile instantiates a new KalturaDropFolderFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaDropFolderFile() *KalturaDropFolderFile {
	this := KalturaDropFolderFile{}
	return &this
}

// NewKalturaDropFolderFileWithDefaults instantiates a new KalturaDropFolderFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaDropFolderFileWithDefaults() *KalturaDropFolderFile {
	this := KalturaDropFolderFile{}
	return &this
}

// GetBatchJobId returns the BatchJobId field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetBatchJobId() int32 {
	if o == nil || o.BatchJobId == nil {
		var ret int32
		return ret
	}
	return *o.BatchJobId
}

// GetBatchJobIdOk returns a tuple with the BatchJobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetBatchJobIdOk() (*int32, bool) {
	if o == nil || o.BatchJobId == nil {
		return nil, false
	}
	return o.BatchJobId, true
}

// HasBatchJobId returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasBatchJobId() bool {
	if o != nil && o.BatchJobId != nil {
		return true
	}

	return false
}

// SetBatchJobId gets a reference to the given int32 and assigns it to the BatchJobId field.
func (o *KalturaDropFolderFile) SetBatchJobId(v int32) {
	o.BatchJobId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaDropFolderFile) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDeletedDropFolderFileId returns the DeletedDropFolderFileId field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetDeletedDropFolderFileId() int32 {
	if o == nil || o.DeletedDropFolderFileId == nil {
		var ret int32
		return ret
	}
	return *o.DeletedDropFolderFileId
}

// GetDeletedDropFolderFileIdOk returns a tuple with the DeletedDropFolderFileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetDeletedDropFolderFileIdOk() (*int32, bool) {
	if o == nil || o.DeletedDropFolderFileId == nil {
		return nil, false
	}
	return o.DeletedDropFolderFileId, true
}

// HasDeletedDropFolderFileId returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasDeletedDropFolderFileId() bool {
	if o != nil && o.DeletedDropFolderFileId != nil {
		return true
	}

	return false
}

// SetDeletedDropFolderFileId gets a reference to the given int32 and assigns it to the DeletedDropFolderFileId field.
func (o *KalturaDropFolderFile) SetDeletedDropFolderFileId(v int32) {
	o.DeletedDropFolderFileId = &v
}

// GetDropFolderId returns the DropFolderId field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetDropFolderId() int32 {
	if o == nil || o.DropFolderId == nil {
		var ret int32
		return ret
	}
	return *o.DropFolderId
}

// GetDropFolderIdOk returns a tuple with the DropFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetDropFolderIdOk() (*int32, bool) {
	if o == nil || o.DropFolderId == nil {
		return nil, false
	}
	return o.DropFolderId, true
}

// HasDropFolderId returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasDropFolderId() bool {
	if o != nil && o.DropFolderId != nil {
		return true
	}

	return false
}

// SetDropFolderId gets a reference to the given int32 and assigns it to the DropFolderId field.
func (o *KalturaDropFolderFile) SetDropFolderId(v int32) {
	o.DropFolderId = &v
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetEntryId() string {
	if o == nil || o.EntryId == nil {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetEntryIdOk() (*string, bool) {
	if o == nil || o.EntryId == nil {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasEntryId() bool {
	if o != nil && o.EntryId != nil {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *KalturaDropFolderFile) SetEntryId(v string) {
	o.EntryId = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetErrorCode() string {
	if o == nil || o.ErrorCode == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetErrorCodeOk() (*string, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *KalturaDropFolderFile) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetErrorDescription() string {
	if o == nil || o.ErrorDescription == nil {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || o.ErrorDescription == nil {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasErrorDescription() bool {
	if o != nil && o.ErrorDescription != nil {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *KalturaDropFolderFile) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *KalturaDropFolderFile) SetFileName(v string) {
	o.FileName = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetFileSize() float32 {
	if o == nil || o.FileSize == nil {
		var ret float32
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetFileSizeOk() (*float32, bool) {
	if o == nil || o.FileSize == nil {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasFileSize() bool {
	if o != nil && o.FileSize != nil {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given float32 and assigns it to the FileSize field.
func (o *KalturaDropFolderFile) SetFileSize(v float32) {
	o.FileSize = &v
}

// GetFileSizeLastSetAt returns the FileSizeLastSetAt field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetFileSizeLastSetAt() int32 {
	if o == nil || o.FileSizeLastSetAt == nil {
		var ret int32
		return ret
	}
	return *o.FileSizeLastSetAt
}

// GetFileSizeLastSetAtOk returns a tuple with the FileSizeLastSetAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetFileSizeLastSetAtOk() (*int32, bool) {
	if o == nil || o.FileSizeLastSetAt == nil {
		return nil, false
	}
	return o.FileSizeLastSetAt, true
}

// HasFileSizeLastSetAt returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasFileSizeLastSetAt() bool {
	if o != nil && o.FileSizeLastSetAt != nil {
		return true
	}

	return false
}

// SetFileSizeLastSetAt gets a reference to the given int32 and assigns it to the FileSizeLastSetAt field.
func (o *KalturaDropFolderFile) SetFileSizeLastSetAt(v int32) {
	o.FileSizeLastSetAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaDropFolderFile) SetId(v int32) {
	o.Id = &v
}

// GetImportEndedAt returns the ImportEndedAt field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetImportEndedAt() int32 {
	if o == nil || o.ImportEndedAt == nil {
		var ret int32
		return ret
	}
	return *o.ImportEndedAt
}

// GetImportEndedAtOk returns a tuple with the ImportEndedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetImportEndedAtOk() (*int32, bool) {
	if o == nil || o.ImportEndedAt == nil {
		return nil, false
	}
	return o.ImportEndedAt, true
}

// HasImportEndedAt returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasImportEndedAt() bool {
	if o != nil && o.ImportEndedAt != nil {
		return true
	}

	return false
}

// SetImportEndedAt gets a reference to the given int32 and assigns it to the ImportEndedAt field.
func (o *KalturaDropFolderFile) SetImportEndedAt(v int32) {
	o.ImportEndedAt = &v
}

// GetImportStartedAt returns the ImportStartedAt field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetImportStartedAt() int32 {
	if o == nil || o.ImportStartedAt == nil {
		var ret int32
		return ret
	}
	return *o.ImportStartedAt
}

// GetImportStartedAtOk returns a tuple with the ImportStartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetImportStartedAtOk() (*int32, bool) {
	if o == nil || o.ImportStartedAt == nil {
		return nil, false
	}
	return o.ImportStartedAt, true
}

// HasImportStartedAt returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasImportStartedAt() bool {
	if o != nil && o.ImportStartedAt != nil {
		return true
	}

	return false
}

// SetImportStartedAt gets a reference to the given int32 and assigns it to the ImportStartedAt field.
func (o *KalturaDropFolderFile) SetImportStartedAt(v int32) {
	o.ImportStartedAt = &v
}

// GetLastModificationTime returns the LastModificationTime field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetLastModificationTime() string {
	if o == nil || o.LastModificationTime == nil {
		var ret string
		return ret
	}
	return *o.LastModificationTime
}

// GetLastModificationTimeOk returns a tuple with the LastModificationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetLastModificationTimeOk() (*string, bool) {
	if o == nil || o.LastModificationTime == nil {
		return nil, false
	}
	return o.LastModificationTime, true
}

// HasLastModificationTime returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasLastModificationTime() bool {
	if o != nil && o.LastModificationTime != nil {
		return true
	}

	return false
}

// SetLastModificationTime gets a reference to the given string and assigns it to the LastModificationTime field.
func (o *KalturaDropFolderFile) SetLastModificationTime(v string) {
	o.LastModificationTime = &v
}

// GetLeadDropFolderFileId returns the LeadDropFolderFileId field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetLeadDropFolderFileId() int32 {
	if o == nil || o.LeadDropFolderFileId == nil {
		var ret int32
		return ret
	}
	return *o.LeadDropFolderFileId
}

// GetLeadDropFolderFileIdOk returns a tuple with the LeadDropFolderFileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetLeadDropFolderFileIdOk() (*int32, bool) {
	if o == nil || o.LeadDropFolderFileId == nil {
		return nil, false
	}
	return o.LeadDropFolderFileId, true
}

// HasLeadDropFolderFileId returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasLeadDropFolderFileId() bool {
	if o != nil && o.LeadDropFolderFileId != nil {
		return true
	}

	return false
}

// SetLeadDropFolderFileId gets a reference to the given int32 and assigns it to the LeadDropFolderFileId field.
func (o *KalturaDropFolderFile) SetLeadDropFolderFileId(v int32) {
	o.LeadDropFolderFileId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaDropFolderFile) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetParsedFlavor returns the ParsedFlavor field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetParsedFlavor() string {
	if o == nil || o.ParsedFlavor == nil {
		var ret string
		return ret
	}
	return *o.ParsedFlavor
}

// GetParsedFlavorOk returns a tuple with the ParsedFlavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetParsedFlavorOk() (*string, bool) {
	if o == nil || o.ParsedFlavor == nil {
		return nil, false
	}
	return o.ParsedFlavor, true
}

// HasParsedFlavor returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasParsedFlavor() bool {
	if o != nil && o.ParsedFlavor != nil {
		return true
	}

	return false
}

// SetParsedFlavor gets a reference to the given string and assigns it to the ParsedFlavor field.
func (o *KalturaDropFolderFile) SetParsedFlavor(v string) {
	o.ParsedFlavor = &v
}

// GetParsedSlug returns the ParsedSlug field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetParsedSlug() string {
	if o == nil || o.ParsedSlug == nil {
		var ret string
		return ret
	}
	return *o.ParsedSlug
}

// GetParsedSlugOk returns a tuple with the ParsedSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetParsedSlugOk() (*string, bool) {
	if o == nil || o.ParsedSlug == nil {
		return nil, false
	}
	return o.ParsedSlug, true
}

// HasParsedSlug returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasParsedSlug() bool {
	if o != nil && o.ParsedSlug != nil {
		return true
	}

	return false
}

// SetParsedSlug gets a reference to the given string and assigns it to the ParsedSlug field.
func (o *KalturaDropFolderFile) SetParsedSlug(v string) {
	o.ParsedSlug = &v
}

// GetParsedUserId returns the ParsedUserId field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetParsedUserId() string {
	if o == nil || o.ParsedUserId == nil {
		var ret string
		return ret
	}
	return *o.ParsedUserId
}

// GetParsedUserIdOk returns a tuple with the ParsedUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetParsedUserIdOk() (*string, bool) {
	if o == nil || o.ParsedUserId == nil {
		return nil, false
	}
	return o.ParsedUserId, true
}

// HasParsedUserId returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasParsedUserId() bool {
	if o != nil && o.ParsedUserId != nil {
		return true
	}

	return false
}

// SetParsedUserId gets a reference to the given string and assigns it to the ParsedUserId field.
func (o *KalturaDropFolderFile) SetParsedUserId(v string) {
	o.ParsedUserId = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaDropFolderFile) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KalturaDropFolderFile) SetStatus(v int32) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *KalturaDropFolderFile) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaDropFolderFile) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUploadEndDetectedAt returns the UploadEndDetectedAt field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetUploadEndDetectedAt() int32 {
	if o == nil || o.UploadEndDetectedAt == nil {
		var ret int32
		return ret
	}
	return *o.UploadEndDetectedAt
}

// GetUploadEndDetectedAtOk returns a tuple with the UploadEndDetectedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetUploadEndDetectedAtOk() (*int32, bool) {
	if o == nil || o.UploadEndDetectedAt == nil {
		return nil, false
	}
	return o.UploadEndDetectedAt, true
}

// HasUploadEndDetectedAt returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasUploadEndDetectedAt() bool {
	if o != nil && o.UploadEndDetectedAt != nil {
		return true
	}

	return false
}

// SetUploadEndDetectedAt gets a reference to the given int32 and assigns it to the UploadEndDetectedAt field.
func (o *KalturaDropFolderFile) SetUploadEndDetectedAt(v int32) {
	o.UploadEndDetectedAt = &v
}

// GetUploadStartDetectedAt returns the UploadStartDetectedAt field value if set, zero value otherwise.
func (o *KalturaDropFolderFile) GetUploadStartDetectedAt() int32 {
	if o == nil || o.UploadStartDetectedAt == nil {
		var ret int32
		return ret
	}
	return *o.UploadStartDetectedAt
}

// GetUploadStartDetectedAtOk returns a tuple with the UploadStartDetectedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolderFile) GetUploadStartDetectedAtOk() (*int32, bool) {
	if o == nil || o.UploadStartDetectedAt == nil {
		return nil, false
	}
	return o.UploadStartDetectedAt, true
}

// HasUploadStartDetectedAt returns a boolean if a field has been set.
func (o *KalturaDropFolderFile) HasUploadStartDetectedAt() bool {
	if o != nil && o.UploadStartDetectedAt != nil {
		return true
	}

	return false
}

// SetUploadStartDetectedAt gets a reference to the given int32 and assigns it to the UploadStartDetectedAt field.
func (o *KalturaDropFolderFile) SetUploadStartDetectedAt(v int32) {
	o.UploadStartDetectedAt = &v
}

func (o KalturaDropFolderFile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BatchJobId != nil {
		toSerialize["batchJobId"] = o.BatchJobId
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.DeletedDropFolderFileId != nil {
		toSerialize["deletedDropFolderFileId"] = o.DeletedDropFolderFileId
	}
	if o.DropFolderId != nil {
		toSerialize["dropFolderId"] = o.DropFolderId
	}
	if o.EntryId != nil {
		toSerialize["entryId"] = o.EntryId
	}
	if o.ErrorCode != nil {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if o.ErrorDescription != nil {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if o.FileName != nil {
		toSerialize["fileName"] = o.FileName
	}
	if o.FileSize != nil {
		toSerialize["fileSize"] = o.FileSize
	}
	if o.FileSizeLastSetAt != nil {
		toSerialize["fileSizeLastSetAt"] = o.FileSizeLastSetAt
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.ImportEndedAt != nil {
		toSerialize["importEndedAt"] = o.ImportEndedAt
	}
	if o.ImportStartedAt != nil {
		toSerialize["importStartedAt"] = o.ImportStartedAt
	}
	if o.LastModificationTime != nil {
		toSerialize["lastModificationTime"] = o.LastModificationTime
	}
	if o.LeadDropFolderFileId != nil {
		toSerialize["leadDropFolderFileId"] = o.LeadDropFolderFileId
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.ParsedFlavor != nil {
		toSerialize["parsedFlavor"] = o.ParsedFlavor
	}
	if o.ParsedSlug != nil {
		toSerialize["parsedSlug"] = o.ParsedSlug
	}
	if o.ParsedUserId != nil {
		toSerialize["parsedUserId"] = o.ParsedUserId
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.UploadEndDetectedAt != nil {
		toSerialize["uploadEndDetectedAt"] = o.UploadEndDetectedAt
	}
	if o.UploadStartDetectedAt != nil {
		toSerialize["uploadStartDetectedAt"] = o.UploadStartDetectedAt
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaDropFolderFile struct {
	value *KalturaDropFolderFile
	isSet bool
}

func (v NullableKalturaDropFolderFile) Get() *KalturaDropFolderFile {
	return v.value
}

func (v *NullableKalturaDropFolderFile) Set(val *KalturaDropFolderFile) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaDropFolderFile) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaDropFolderFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaDropFolderFile(val *KalturaDropFolderFile) *NullableKalturaDropFolderFile {
	return &NullableKalturaDropFolderFile{value: val, isSet: true}
}

func (v NullableKalturaDropFolderFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaDropFolderFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


