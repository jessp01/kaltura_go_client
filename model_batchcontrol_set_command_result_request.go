/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchcontrolSetCommandResultRequest struct for BatchcontrolSetCommandResultRequest
type BatchcontrolSetCommandResultRequest struct {
	CommandId int32 `json:"commandId"`
	ErrorDescription *string `json:"errorDescription,omitempty"`
	Status int32 `json:"status"`
}

// NewBatchcontrolSetCommandResultRequest instantiates a new BatchcontrolSetCommandResultRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchcontrolSetCommandResultRequest(commandId int32, status int32) *BatchcontrolSetCommandResultRequest {
	this := BatchcontrolSetCommandResultRequest{}
	this.CommandId = commandId
	this.Status = status
	return &this
}

// NewBatchcontrolSetCommandResultRequestWithDefaults instantiates a new BatchcontrolSetCommandResultRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchcontrolSetCommandResultRequestWithDefaults() *BatchcontrolSetCommandResultRequest {
	this := BatchcontrolSetCommandResultRequest{}
	return &this
}

// GetCommandId returns the CommandId field value
func (o *BatchcontrolSetCommandResultRequest) GetCommandId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CommandId
}

// GetCommandIdOk returns a tuple with the CommandId field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolSetCommandResultRequest) GetCommandIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommandId, true
}

// SetCommandId sets field value
func (o *BatchcontrolSetCommandResultRequest) SetCommandId(v int32) {
	o.CommandId = v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *BatchcontrolSetCommandResultRequest) GetErrorDescription() string {
	if o == nil || o.ErrorDescription == nil {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchcontrolSetCommandResultRequest) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || o.ErrorDescription == nil {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *BatchcontrolSetCommandResultRequest) HasErrorDescription() bool {
	if o != nil && o.ErrorDescription != nil {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *BatchcontrolSetCommandResultRequest) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetStatus returns the Status field value
func (o *BatchcontrolSetCommandResultRequest) GetStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolSetCommandResultRequest) GetStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BatchcontrolSetCommandResultRequest) SetStatus(v int32) {
	o.Status = v
}

func (o BatchcontrolSetCommandResultRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["commandId"] = o.CommandId
	}
	if o.ErrorDescription != nil {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableBatchcontrolSetCommandResultRequest struct {
	value *BatchcontrolSetCommandResultRequest
	isSet bool
}

func (v NullableBatchcontrolSetCommandResultRequest) Get() *BatchcontrolSetCommandResultRequest {
	return v.value
}

func (v *NullableBatchcontrolSetCommandResultRequest) Set(val *BatchcontrolSetCommandResultRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchcontrolSetCommandResultRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchcontrolSetCommandResultRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchcontrolSetCommandResultRequest(val *BatchcontrolSetCommandResultRequest) *NullableBatchcontrolSetCommandResultRequest {
	return &NullableBatchcontrolSetCommandResultRequest{value: val, isSet: true}
}

func (v NullableBatchcontrolSetCommandResultRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchcontrolSetCommandResultRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


