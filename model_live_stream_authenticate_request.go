/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LiveStreamAuthenticateRequest struct for LiveStreamAuthenticateRequest
type LiveStreamAuthenticateRequest struct {
	ApplicationName *string `json:"applicationName,omitempty"`
	EntryId string `json:"entryId"`
	Hostname *string `json:"hostname,omitempty"`
	MediaServerIndex *string `json:"mediaServerIndex,omitempty"`
	Token string `json:"token"`
}

// NewLiveStreamAuthenticateRequest instantiates a new LiveStreamAuthenticateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamAuthenticateRequest(entryId string, token string) *LiveStreamAuthenticateRequest {
	this := LiveStreamAuthenticateRequest{}
	this.EntryId = entryId
	this.Token = token
	return &this
}

// NewLiveStreamAuthenticateRequestWithDefaults instantiates a new LiveStreamAuthenticateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamAuthenticateRequestWithDefaults() *LiveStreamAuthenticateRequest {
	this := LiveStreamAuthenticateRequest{}
	return &this
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *LiveStreamAuthenticateRequest) GetApplicationName() string {
	if o == nil || o.ApplicationName == nil {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamAuthenticateRequest) GetApplicationNameOk() (*string, bool) {
	if o == nil || o.ApplicationName == nil {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *LiveStreamAuthenticateRequest) HasApplicationName() bool {
	if o != nil && o.ApplicationName != nil {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *LiveStreamAuthenticateRequest) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetEntryId returns the EntryId field value
func (o *LiveStreamAuthenticateRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *LiveStreamAuthenticateRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *LiveStreamAuthenticateRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *LiveStreamAuthenticateRequest) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamAuthenticateRequest) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *LiveStreamAuthenticateRequest) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *LiveStreamAuthenticateRequest) SetHostname(v string) {
	o.Hostname = &v
}

// GetMediaServerIndex returns the MediaServerIndex field value if set, zero value otherwise.
func (o *LiveStreamAuthenticateRequest) GetMediaServerIndex() string {
	if o == nil || o.MediaServerIndex == nil {
		var ret string
		return ret
	}
	return *o.MediaServerIndex
}

// GetMediaServerIndexOk returns a tuple with the MediaServerIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamAuthenticateRequest) GetMediaServerIndexOk() (*string, bool) {
	if o == nil || o.MediaServerIndex == nil {
		return nil, false
	}
	return o.MediaServerIndex, true
}

// HasMediaServerIndex returns a boolean if a field has been set.
func (o *LiveStreamAuthenticateRequest) HasMediaServerIndex() bool {
	if o != nil && o.MediaServerIndex != nil {
		return true
	}

	return false
}

// SetMediaServerIndex gets a reference to the given string and assigns it to the MediaServerIndex field.
func (o *LiveStreamAuthenticateRequest) SetMediaServerIndex(v string) {
	o.MediaServerIndex = &v
}

// GetToken returns the Token field value
func (o *LiveStreamAuthenticateRequest) GetToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Token
}

// GetTokenOk returns a tuple with the Token field value
// and a boolean to check if the value has been set.
func (o *LiveStreamAuthenticateRequest) GetTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Token, true
}

// SetToken sets field value
func (o *LiveStreamAuthenticateRequest) SetToken(v string) {
	o.Token = v
}

func (o LiveStreamAuthenticateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationName != nil {
		toSerialize["applicationName"] = o.ApplicationName
	}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.MediaServerIndex != nil {
		toSerialize["mediaServerIndex"] = o.MediaServerIndex
	}
	if true {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableLiveStreamAuthenticateRequest struct {
	value *LiveStreamAuthenticateRequest
	isSet bool
}

func (v NullableLiveStreamAuthenticateRequest) Get() *LiveStreamAuthenticateRequest {
	return v.value
}

func (v *NullableLiveStreamAuthenticateRequest) Set(val *LiveStreamAuthenticateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamAuthenticateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamAuthenticateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamAuthenticateRequest(val *LiveStreamAuthenticateRequest) *NullableLiveStreamAuthenticateRequest {
	return &NullableLiveStreamAuthenticateRequest{value: val, isSet: true}
}

func (v NullableLiveStreamAuthenticateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveStreamAuthenticateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


