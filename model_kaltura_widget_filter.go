/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaWidgetFilter struct for KalturaWidgetFilter
type KalturaWidgetFilter struct {
	KalturaWidgetBaseFilter
}

// NewKalturaWidgetFilter instantiates a new KalturaWidgetFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaWidgetFilter() *KalturaWidgetFilter {
	this := KalturaWidgetFilter{}
	return &this
}

// NewKalturaWidgetFilterWithDefaults instantiates a new KalturaWidgetFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaWidgetFilterWithDefaults() *KalturaWidgetFilter {
	this := KalturaWidgetFilter{}
	return &this
}

func (o KalturaWidgetFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaWidgetBaseFilter, errKalturaWidgetBaseFilter := json.Marshal(o.KalturaWidgetBaseFilter)
	if errKalturaWidgetBaseFilter != nil {
		return []byte{}, errKalturaWidgetBaseFilter
	}
	errKalturaWidgetBaseFilter = json.Unmarshal([]byte(serializedKalturaWidgetBaseFilter), &toSerialize)
	if errKalturaWidgetBaseFilter != nil {
		return []byte{}, errKalturaWidgetBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaWidgetFilter struct {
	value *KalturaWidgetFilter
	isSet bool
}

func (v NullableKalturaWidgetFilter) Get() *KalturaWidgetFilter {
	return v.value
}

func (v *NullableKalturaWidgetFilter) Set(val *KalturaWidgetFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaWidgetFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaWidgetFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaWidgetFilter(val *KalturaWidgetFilter) *NullableKalturaWidgetFilter {
	return &NullableKalturaWidgetFilter{value: val, isSet: true}
}

func (v NullableKalturaWidgetFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaWidgetFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


