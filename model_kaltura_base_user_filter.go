/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBaseUserFilter `abstract`
type KalturaBaseUserFilter struct {
	KalturaBaseUserBaseFilter
}

// NewKalturaBaseUserFilter instantiates a new KalturaBaseUserFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBaseUserFilter() *KalturaBaseUserFilter {
	this := KalturaBaseUserFilter{}
	return &this
}

// NewKalturaBaseUserFilterWithDefaults instantiates a new KalturaBaseUserFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBaseUserFilterWithDefaults() *KalturaBaseUserFilter {
	this := KalturaBaseUserFilter{}
	return &this
}

func (o KalturaBaseUserFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBaseUserBaseFilter, errKalturaBaseUserBaseFilter := json.Marshal(o.KalturaBaseUserBaseFilter)
	if errKalturaBaseUserBaseFilter != nil {
		return []byte{}, errKalturaBaseUserBaseFilter
	}
	errKalturaBaseUserBaseFilter = json.Unmarshal([]byte(serializedKalturaBaseUserBaseFilter), &toSerialize)
	if errKalturaBaseUserBaseFilter != nil {
		return []byte{}, errKalturaBaseUserBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBaseUserFilter struct {
	value *KalturaBaseUserFilter
	isSet bool
}

func (v NullableKalturaBaseUserFilter) Get() *KalturaBaseUserFilter {
	return v.value
}

func (v *NullableKalturaBaseUserFilter) Set(val *KalturaBaseUserFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBaseUserFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBaseUserFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBaseUserFilter(val *KalturaBaseUserFilter) *NullableKalturaBaseUserFilter {
	return &NullableKalturaBaseUserFilter{value: val, isSet: true}
}

func (v NullableKalturaBaseUserFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBaseUserFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


