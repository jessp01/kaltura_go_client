/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSystemPartnerLimit struct for KalturaSystemPartnerLimit
type KalturaSystemPartnerLimit struct {
	Max *float32 `json:"max,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	// Enum Type: `KalturaSystemPartnerLimitType`
	Type *string `json:"type,omitempty"`
}

// NewKalturaSystemPartnerLimit instantiates a new KalturaSystemPartnerLimit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSystemPartnerLimit() *KalturaSystemPartnerLimit {
	this := KalturaSystemPartnerLimit{}
	return &this
}

// NewKalturaSystemPartnerLimitWithDefaults instantiates a new KalturaSystemPartnerLimit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSystemPartnerLimitWithDefaults() *KalturaSystemPartnerLimit {
	this := KalturaSystemPartnerLimit{}
	return &this
}

// GetMax returns the Max field value if set, zero value otherwise.
func (o *KalturaSystemPartnerLimit) GetMax() float32 {
	if o == nil || o.Max == nil {
		var ret float32
		return ret
	}
	return *o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSystemPartnerLimit) GetMaxOk() (*float32, bool) {
	if o == nil || o.Max == nil {
		return nil, false
	}
	return o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *KalturaSystemPartnerLimit) HasMax() bool {
	if o != nil && o.Max != nil {
		return true
	}

	return false
}

// SetMax gets a reference to the given float32 and assigns it to the Max field.
func (o *KalturaSystemPartnerLimit) SetMax(v float32) {
	o.Max = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaSystemPartnerLimit) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSystemPartnerLimit) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaSystemPartnerLimit) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaSystemPartnerLimit) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaSystemPartnerLimit) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSystemPartnerLimit) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaSystemPartnerLimit) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *KalturaSystemPartnerLimit) SetType(v string) {
	o.Type = &v
}

func (o KalturaSystemPartnerLimit) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Max != nil {
		toSerialize["max"] = o.Max
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSystemPartnerLimit struct {
	value *KalturaSystemPartnerLimit
	isSet bool
}

func (v NullableKalturaSystemPartnerLimit) Get() *KalturaSystemPartnerLimit {
	return v.value
}

func (v *NullableKalturaSystemPartnerLimit) Set(val *KalturaSystemPartnerLimit) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSystemPartnerLimit) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSystemPartnerLimit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSystemPartnerLimit(val *KalturaSystemPartnerLimit) *NullableKalturaSystemPartnerLimit {
	return &NullableKalturaSystemPartnerLimit{value: val, isSet: true}
}

func (v NullableKalturaSystemPartnerLimit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSystemPartnerLimit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


