/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSessionResponse struct for KalturaSessionResponse
type KalturaSessionResponse struct {
	KalturaStartWidgetSessionResponse
}

// NewKalturaSessionResponse instantiates a new KalturaSessionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSessionResponse() *KalturaSessionResponse {
	this := KalturaSessionResponse{}
	return &this
}

// NewKalturaSessionResponseWithDefaults instantiates a new KalturaSessionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSessionResponseWithDefaults() *KalturaSessionResponse {
	this := KalturaSessionResponse{}
	return &this
}

func (o KalturaSessionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaStartWidgetSessionResponse, errKalturaStartWidgetSessionResponse := json.Marshal(o.KalturaStartWidgetSessionResponse)
	if errKalturaStartWidgetSessionResponse != nil {
		return []byte{}, errKalturaStartWidgetSessionResponse
	}
	errKalturaStartWidgetSessionResponse = json.Unmarshal([]byte(serializedKalturaStartWidgetSessionResponse), &toSerialize)
	if errKalturaStartWidgetSessionResponse != nil {
		return []byte{}, errKalturaStartWidgetSessionResponse
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSessionResponse struct {
	value *KalturaSessionResponse
	isSet bool
}

func (v NullableKalturaSessionResponse) Get() *KalturaSessionResponse {
	return v.value
}

func (v *NullableKalturaSessionResponse) Set(val *KalturaSessionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSessionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSessionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSessionResponse(val *KalturaSessionResponse) *NullableKalturaSessionResponse {
	return &NullableKalturaSessionResponse{value: val, isSet: true}
}

func (v NullableKalturaSessionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSessionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


