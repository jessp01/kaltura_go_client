/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBulkUploadResultCategoryUser struct for KalturaBulkUploadResultCategoryUser
type KalturaBulkUploadResultCategoryUser struct {
	KalturaBulkUploadResult
}

// NewKalturaBulkUploadResultCategoryUser instantiates a new KalturaBulkUploadResultCategoryUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBulkUploadResultCategoryUser() *KalturaBulkUploadResultCategoryUser {
	this := KalturaBulkUploadResultCategoryUser{}
	return &this
}

// NewKalturaBulkUploadResultCategoryUserWithDefaults instantiates a new KalturaBulkUploadResultCategoryUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBulkUploadResultCategoryUserWithDefaults() *KalturaBulkUploadResultCategoryUser {
	this := KalturaBulkUploadResultCategoryUser{}
	return &this
}

func (o KalturaBulkUploadResultCategoryUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBulkUploadResult, errKalturaBulkUploadResult := json.Marshal(o.KalturaBulkUploadResult)
	if errKalturaBulkUploadResult != nil {
		return []byte{}, errKalturaBulkUploadResult
	}
	errKalturaBulkUploadResult = json.Unmarshal([]byte(serializedKalturaBulkUploadResult), &toSerialize)
	if errKalturaBulkUploadResult != nil {
		return []byte{}, errKalturaBulkUploadResult
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBulkUploadResultCategoryUser struct {
	value *KalturaBulkUploadResultCategoryUser
	isSet bool
}

func (v NullableKalturaBulkUploadResultCategoryUser) Get() *KalturaBulkUploadResultCategoryUser {
	return v.value
}

func (v *NullableKalturaBulkUploadResultCategoryUser) Set(val *KalturaBulkUploadResultCategoryUser) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBulkUploadResultCategoryUser) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBulkUploadResultCategoryUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBulkUploadResultCategoryUser(val *KalturaBulkUploadResultCategoryUser) *NullableKalturaBulkUploadResultCategoryUser {
	return &NullableKalturaBulkUploadResultCategoryUser{value: val, isSet: true}
}

func (v NullableKalturaBulkUploadResultCategoryUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBulkUploadResultCategoryUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


