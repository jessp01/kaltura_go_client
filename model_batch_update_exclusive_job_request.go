/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchUpdateExclusiveJobRequest struct for BatchUpdateExclusiveJobRequest
type BatchUpdateExclusiveJobRequest struct {
	Id int32 `json:"id"`
	Job KalturaBatchJob `json:"job"`
	LockKey KalturaExclusiveLockKey `json:"lockKey"`
}

// NewBatchUpdateExclusiveJobRequest instantiates a new BatchUpdateExclusiveJobRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchUpdateExclusiveJobRequest(id int32, job KalturaBatchJob, lockKey KalturaExclusiveLockKey) *BatchUpdateExclusiveJobRequest {
	this := BatchUpdateExclusiveJobRequest{}
	this.Id = id
	this.Job = job
	this.LockKey = lockKey
	return &this
}

// NewBatchUpdateExclusiveJobRequestWithDefaults instantiates a new BatchUpdateExclusiveJobRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchUpdateExclusiveJobRequestWithDefaults() *BatchUpdateExclusiveJobRequest {
	this := BatchUpdateExclusiveJobRequest{}
	return &this
}

// GetId returns the Id field value
func (o *BatchUpdateExclusiveJobRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BatchUpdateExclusiveJobRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BatchUpdateExclusiveJobRequest) SetId(v int32) {
	o.Id = v
}

// GetJob returns the Job field value
func (o *BatchUpdateExclusiveJobRequest) GetJob() KalturaBatchJob {
	if o == nil {
		var ret KalturaBatchJob
		return ret
	}

	return o.Job
}

// GetJobOk returns a tuple with the Job field value
// and a boolean to check if the value has been set.
func (o *BatchUpdateExclusiveJobRequest) GetJobOk() (*KalturaBatchJob, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Job, true
}

// SetJob sets field value
func (o *BatchUpdateExclusiveJobRequest) SetJob(v KalturaBatchJob) {
	o.Job = v
}

// GetLockKey returns the LockKey field value
func (o *BatchUpdateExclusiveJobRequest) GetLockKey() KalturaExclusiveLockKey {
	if o == nil {
		var ret KalturaExclusiveLockKey
		return ret
	}

	return o.LockKey
}

// GetLockKeyOk returns a tuple with the LockKey field value
// and a boolean to check if the value has been set.
func (o *BatchUpdateExclusiveJobRequest) GetLockKeyOk() (*KalturaExclusiveLockKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockKey, true
}

// SetLockKey sets field value
func (o *BatchUpdateExclusiveJobRequest) SetLockKey(v KalturaExclusiveLockKey) {
	o.LockKey = v
}

func (o BatchUpdateExclusiveJobRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["job"] = o.Job
	}
	if true {
		toSerialize["lockKey"] = o.LockKey
	}
	return json.Marshal(toSerialize)
}

type NullableBatchUpdateExclusiveJobRequest struct {
	value *BatchUpdateExclusiveJobRequest
	isSet bool
}

func (v NullableBatchUpdateExclusiveJobRequest) Get() *BatchUpdateExclusiveJobRequest {
	return v.value
}

func (v *NullableBatchUpdateExclusiveJobRequest) Set(val *BatchUpdateExclusiveJobRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchUpdateExclusiveJobRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchUpdateExclusiveJobRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchUpdateExclusiveJobRequest(val *BatchUpdateExclusiveJobRequest) *NullableBatchUpdateExclusiveJobRequest {
	return &NullableBatchUpdateExclusiveJobRequest{value: val, isSet: true}
}

func (v NullableBatchUpdateExclusiveJobRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchUpdateExclusiveJobRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


