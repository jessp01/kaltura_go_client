/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PlaylistUpdateRequest struct for PlaylistUpdateRequest
type PlaylistUpdateRequest struct {
	Id string `json:"id"`
	Playlist KalturaPlaylist `json:"playlist"`
	UpdateStats *bool `json:"updateStats,omitempty"`
}

// NewPlaylistUpdateRequest instantiates a new PlaylistUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaylistUpdateRequest(id string, playlist KalturaPlaylist) *PlaylistUpdateRequest {
	this := PlaylistUpdateRequest{}
	this.Id = id
	this.Playlist = playlist
	var updateStats bool = false
	this.UpdateStats = &updateStats
	return &this
}

// NewPlaylistUpdateRequestWithDefaults instantiates a new PlaylistUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaylistUpdateRequestWithDefaults() *PlaylistUpdateRequest {
	this := PlaylistUpdateRequest{}
	var updateStats bool = false
	this.UpdateStats = &updateStats
	return &this
}

// GetId returns the Id field value
func (o *PlaylistUpdateRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PlaylistUpdateRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PlaylistUpdateRequest) SetId(v string) {
	o.Id = v
}

// GetPlaylist returns the Playlist field value
func (o *PlaylistUpdateRequest) GetPlaylist() KalturaPlaylist {
	if o == nil {
		var ret KalturaPlaylist
		return ret
	}

	return o.Playlist
}

// GetPlaylistOk returns a tuple with the Playlist field value
// and a boolean to check if the value has been set.
func (o *PlaylistUpdateRequest) GetPlaylistOk() (*KalturaPlaylist, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Playlist, true
}

// SetPlaylist sets field value
func (o *PlaylistUpdateRequest) SetPlaylist(v KalturaPlaylist) {
	o.Playlist = v
}

// GetUpdateStats returns the UpdateStats field value if set, zero value otherwise.
func (o *PlaylistUpdateRequest) GetUpdateStats() bool {
	if o == nil || o.UpdateStats == nil {
		var ret bool
		return ret
	}
	return *o.UpdateStats
}

// GetUpdateStatsOk returns a tuple with the UpdateStats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaylistUpdateRequest) GetUpdateStatsOk() (*bool, bool) {
	if o == nil || o.UpdateStats == nil {
		return nil, false
	}
	return o.UpdateStats, true
}

// HasUpdateStats returns a boolean if a field has been set.
func (o *PlaylistUpdateRequest) HasUpdateStats() bool {
	if o != nil && o.UpdateStats != nil {
		return true
	}

	return false
}

// SetUpdateStats gets a reference to the given bool and assigns it to the UpdateStats field.
func (o *PlaylistUpdateRequest) SetUpdateStats(v bool) {
	o.UpdateStats = &v
}

func (o PlaylistUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["playlist"] = o.Playlist
	}
	if o.UpdateStats != nil {
		toSerialize["updateStats"] = o.UpdateStats
	}
	return json.Marshal(toSerialize)
}

type NullablePlaylistUpdateRequest struct {
	value *PlaylistUpdateRequest
	isSet bool
}

func (v NullablePlaylistUpdateRequest) Get() *PlaylistUpdateRequest {
	return v.value
}

func (v *NullablePlaylistUpdateRequest) Set(val *PlaylistUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaylistUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaylistUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaylistUpdateRequest(val *PlaylistUpdateRequest) *NullablePlaylistUpdateRequest {
	return &NullablePlaylistUpdateRequest{value: val, isSet: true}
}

func (v NullablePlaylistUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaylistUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


