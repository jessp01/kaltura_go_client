/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaRegexItem struct for KalturaRegexItem
type KalturaRegexItem struct {
	Regex *string `json:"regex,omitempty"`
}

// NewKalturaRegexItem instantiates a new KalturaRegexItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaRegexItem() *KalturaRegexItem {
	this := KalturaRegexItem{}
	return &this
}

// NewKalturaRegexItemWithDefaults instantiates a new KalturaRegexItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaRegexItemWithDefaults() *KalturaRegexItem {
	this := KalturaRegexItem{}
	return &this
}

// GetRegex returns the Regex field value if set, zero value otherwise.
func (o *KalturaRegexItem) GetRegex() string {
	if o == nil || o.Regex == nil {
		var ret string
		return ret
	}
	return *o.Regex
}

// GetRegexOk returns a tuple with the Regex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaRegexItem) GetRegexOk() (*string, bool) {
	if o == nil || o.Regex == nil {
		return nil, false
	}
	return o.Regex, true
}

// HasRegex returns a boolean if a field has been set.
func (o *KalturaRegexItem) HasRegex() bool {
	if o != nil && o.Regex != nil {
		return true
	}

	return false
}

// SetRegex gets a reference to the given string and assigns it to the Regex field.
func (o *KalturaRegexItem) SetRegex(v string) {
	o.Regex = &v
}

func (o KalturaRegexItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Regex != nil {
		toSerialize["regex"] = o.Regex
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaRegexItem struct {
	value *KalturaRegexItem
	isSet bool
}

func (v NullableKalturaRegexItem) Get() *KalturaRegexItem {
	return v.value
}

func (v *NullableKalturaRegexItem) Set(val *KalturaRegexItem) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaRegexItem) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaRegexItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaRegexItem(val *KalturaRegexItem) *NullableKalturaRegexItem {
	return &NullableKalturaRegexItem{value: val, isSet: true}
}

func (v NullableKalturaRegexItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaRegexItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


