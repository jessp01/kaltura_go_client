/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ScheduleEventResourceDeleteRequest struct for ScheduleEventResourceDeleteRequest
type ScheduleEventResourceDeleteRequest struct {
	ScheduleEventId int32 `json:"scheduleEventId"`
	ScheduleResourceId int32 `json:"scheduleResourceId"`
}

// NewScheduleEventResourceDeleteRequest instantiates a new ScheduleEventResourceDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleEventResourceDeleteRequest(scheduleEventId int32, scheduleResourceId int32) *ScheduleEventResourceDeleteRequest {
	this := ScheduleEventResourceDeleteRequest{}
	this.ScheduleEventId = scheduleEventId
	this.ScheduleResourceId = scheduleResourceId
	return &this
}

// NewScheduleEventResourceDeleteRequestWithDefaults instantiates a new ScheduleEventResourceDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleEventResourceDeleteRequestWithDefaults() *ScheduleEventResourceDeleteRequest {
	this := ScheduleEventResourceDeleteRequest{}
	return &this
}

// GetScheduleEventId returns the ScheduleEventId field value
func (o *ScheduleEventResourceDeleteRequest) GetScheduleEventId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ScheduleEventId
}

// GetScheduleEventIdOk returns a tuple with the ScheduleEventId field value
// and a boolean to check if the value has been set.
func (o *ScheduleEventResourceDeleteRequest) GetScheduleEventIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduleEventId, true
}

// SetScheduleEventId sets field value
func (o *ScheduleEventResourceDeleteRequest) SetScheduleEventId(v int32) {
	o.ScheduleEventId = v
}

// GetScheduleResourceId returns the ScheduleResourceId field value
func (o *ScheduleEventResourceDeleteRequest) GetScheduleResourceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ScheduleResourceId
}

// GetScheduleResourceIdOk returns a tuple with the ScheduleResourceId field value
// and a boolean to check if the value has been set.
func (o *ScheduleEventResourceDeleteRequest) GetScheduleResourceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduleResourceId, true
}

// SetScheduleResourceId sets field value
func (o *ScheduleEventResourceDeleteRequest) SetScheduleResourceId(v int32) {
	o.ScheduleResourceId = v
}

func (o ScheduleEventResourceDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["scheduleEventId"] = o.ScheduleEventId
	}
	if true {
		toSerialize["scheduleResourceId"] = o.ScheduleResourceId
	}
	return json.Marshal(toSerialize)
}

type NullableScheduleEventResourceDeleteRequest struct {
	value *ScheduleEventResourceDeleteRequest
	isSet bool
}

func (v NullableScheduleEventResourceDeleteRequest) Get() *ScheduleEventResourceDeleteRequest {
	return v.value
}

func (v *NullableScheduleEventResourceDeleteRequest) Set(val *ScheduleEventResourceDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleEventResourceDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleEventResourceDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleEventResourceDeleteRequest(val *ScheduleEventResourceDeleteRequest) *NullableScheduleEventResourceDeleteRequest {
	return &NullableScheduleEventResourceDeleteRequest{value: val, isSet: true}
}

func (v NullableScheduleEventResourceDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleEventResourceDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


