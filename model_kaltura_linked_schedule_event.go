/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLinkedScheduleEvent struct for KalturaLinkedScheduleEvent
type KalturaLinkedScheduleEvent struct {
	// The id of the event influencing the start of the event holding this object
	EventId *int32 `json:"eventId,omitempty"`
	// The time between the end of the event which it's id is in $eventId and the start of the event holding this object
	Offset *int32 `json:"offset,omitempty"`
}

// NewKalturaLinkedScheduleEvent instantiates a new KalturaLinkedScheduleEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLinkedScheduleEvent() *KalturaLinkedScheduleEvent {
	this := KalturaLinkedScheduleEvent{}
	return &this
}

// NewKalturaLinkedScheduleEventWithDefaults instantiates a new KalturaLinkedScheduleEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLinkedScheduleEventWithDefaults() *KalturaLinkedScheduleEvent {
	this := KalturaLinkedScheduleEvent{}
	return &this
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *KalturaLinkedScheduleEvent) GetEventId() int32 {
	if o == nil || o.EventId == nil {
		var ret int32
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLinkedScheduleEvent) GetEventIdOk() (*int32, bool) {
	if o == nil || o.EventId == nil {
		return nil, false
	}
	return o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *KalturaLinkedScheduleEvent) HasEventId() bool {
	if o != nil && o.EventId != nil {
		return true
	}

	return false
}

// SetEventId gets a reference to the given int32 and assigns it to the EventId field.
func (o *KalturaLinkedScheduleEvent) SetEventId(v int32) {
	o.EventId = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *KalturaLinkedScheduleEvent) GetOffset() int32 {
	if o == nil || o.Offset == nil {
		var ret int32
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLinkedScheduleEvent) GetOffsetOk() (*int32, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *KalturaLinkedScheduleEvent) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int32 and assigns it to the Offset field.
func (o *KalturaLinkedScheduleEvent) SetOffset(v int32) {
	o.Offset = &v
}

func (o KalturaLinkedScheduleEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EventId != nil {
		toSerialize["eventId"] = o.EventId
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLinkedScheduleEvent struct {
	value *KalturaLinkedScheduleEvent
	isSet bool
}

func (v NullableKalturaLinkedScheduleEvent) Get() *KalturaLinkedScheduleEvent {
	return v.value
}

func (v *NullableKalturaLinkedScheduleEvent) Set(val *KalturaLinkedScheduleEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLinkedScheduleEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLinkedScheduleEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLinkedScheduleEvent(val *KalturaLinkedScheduleEvent) *NullableKalturaLinkedScheduleEvent {
	return &NullableKalturaLinkedScheduleEvent{value: val, isSet: true}
}

func (v NullableKalturaLinkedScheduleEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLinkedScheduleEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


