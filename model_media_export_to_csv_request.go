/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MediaExportToCsvRequest struct for MediaExportToCsvRequest
type MediaExportToCsvRequest struct {
	Data KalturaMediaEsearchExportToCsvJobData `json:"data"`
}

// NewMediaExportToCsvRequest instantiates a new MediaExportToCsvRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaExportToCsvRequest(data KalturaMediaEsearchExportToCsvJobData) *MediaExportToCsvRequest {
	this := MediaExportToCsvRequest{}
	this.Data = data
	return &this
}

// NewMediaExportToCsvRequestWithDefaults instantiates a new MediaExportToCsvRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaExportToCsvRequestWithDefaults() *MediaExportToCsvRequest {
	this := MediaExportToCsvRequest{}
	return &this
}

// GetData returns the Data field value
func (o *MediaExportToCsvRequest) GetData() KalturaMediaEsearchExportToCsvJobData {
	if o == nil {
		var ret KalturaMediaEsearchExportToCsvJobData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *MediaExportToCsvRequest) GetDataOk() (*KalturaMediaEsearchExportToCsvJobData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *MediaExportToCsvRequest) SetData(v KalturaMediaEsearchExportToCsvJobData) {
	o.Data = v
}

func (o MediaExportToCsvRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableMediaExportToCsvRequest struct {
	value *MediaExportToCsvRequest
	isSet bool
}

func (v NullableMediaExportToCsvRequest) Get() *MediaExportToCsvRequest {
	return v.value
}

func (v *NullableMediaExportToCsvRequest) Set(val *MediaExportToCsvRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaExportToCsvRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaExportToCsvRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaExportToCsvRequest(val *MediaExportToCsvRequest) *NullableMediaExportToCsvRequest {
	return &NullableMediaExportToCsvRequest{value: val, isSet: true}
}

func (v NullableMediaExportToCsvRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaExportToCsvRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


