/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaDataEntry struct for KalturaDataEntry
type KalturaDataEntry struct {
	KalturaBaseEntry
}

// NewKalturaDataEntry instantiates a new KalturaDataEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaDataEntry() *KalturaDataEntry {
	this := KalturaDataEntry{}
	return &this
}

// NewKalturaDataEntryWithDefaults instantiates a new KalturaDataEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaDataEntryWithDefaults() *KalturaDataEntry {
	this := KalturaDataEntry{}
	return &this
}

func (o KalturaDataEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBaseEntry, errKalturaBaseEntry := json.Marshal(o.KalturaBaseEntry)
	if errKalturaBaseEntry != nil {
		return []byte{}, errKalturaBaseEntry
	}
	errKalturaBaseEntry = json.Unmarshal([]byte(serializedKalturaBaseEntry), &toSerialize)
	if errKalturaBaseEntry != nil {
		return []byte{}, errKalturaBaseEntry
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaDataEntry struct {
	value *KalturaDataEntry
	isSet bool
}

func (v NullableKalturaDataEntry) Get() *KalturaDataEntry {
	return v.value
}

func (v *NullableKalturaDataEntry) Set(val *KalturaDataEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaDataEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaDataEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaDataEntry(val *KalturaDataEntry) *NullableKalturaDataEntry {
	return &NullableKalturaDataEntry{value: val, isSet: true}
}

func (v NullableKalturaDataEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaDataEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


