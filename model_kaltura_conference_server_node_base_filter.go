/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaConferenceServerNodeBaseFilter `abstract`
type KalturaConferenceServerNodeBaseFilter struct {
	KalturaServerNodeFilter
}

// NewKalturaConferenceServerNodeBaseFilter instantiates a new KalturaConferenceServerNodeBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaConferenceServerNodeBaseFilter() *KalturaConferenceServerNodeBaseFilter {
	this := KalturaConferenceServerNodeBaseFilter{}
	return &this
}

// NewKalturaConferenceServerNodeBaseFilterWithDefaults instantiates a new KalturaConferenceServerNodeBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaConferenceServerNodeBaseFilterWithDefaults() *KalturaConferenceServerNodeBaseFilter {
	this := KalturaConferenceServerNodeBaseFilter{}
	return &this
}

func (o KalturaConferenceServerNodeBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaServerNodeFilter, errKalturaServerNodeFilter := json.Marshal(o.KalturaServerNodeFilter)
	if errKalturaServerNodeFilter != nil {
		return []byte{}, errKalturaServerNodeFilter
	}
	errKalturaServerNodeFilter = json.Unmarshal([]byte(serializedKalturaServerNodeFilter), &toSerialize)
	if errKalturaServerNodeFilter != nil {
		return []byte{}, errKalturaServerNodeFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaConferenceServerNodeBaseFilter struct {
	value *KalturaConferenceServerNodeBaseFilter
	isSet bool
}

func (v NullableKalturaConferenceServerNodeBaseFilter) Get() *KalturaConferenceServerNodeBaseFilter {
	return v.value
}

func (v *NullableKalturaConferenceServerNodeBaseFilter) Set(val *KalturaConferenceServerNodeBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaConferenceServerNodeBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaConferenceServerNodeBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaConferenceServerNodeBaseFilter(val *KalturaConferenceServerNodeBaseFilter) *NullableKalturaConferenceServerNodeBaseFilter {
	return &NullableKalturaConferenceServerNodeBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaConferenceServerNodeBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaConferenceServerNodeBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


