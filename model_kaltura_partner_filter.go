/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPartnerFilter struct for KalturaPartnerFilter
type KalturaPartnerFilter struct {
	KalturaPartnerBaseFilter
}

// NewKalturaPartnerFilter instantiates a new KalturaPartnerFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPartnerFilter() *KalturaPartnerFilter {
	this := KalturaPartnerFilter{}
	return &this
}

// NewKalturaPartnerFilterWithDefaults instantiates a new KalturaPartnerFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPartnerFilterWithDefaults() *KalturaPartnerFilter {
	this := KalturaPartnerFilter{}
	return &this
}

func (o KalturaPartnerFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaPartnerBaseFilter, errKalturaPartnerBaseFilter := json.Marshal(o.KalturaPartnerBaseFilter)
	if errKalturaPartnerBaseFilter != nil {
		return []byte{}, errKalturaPartnerBaseFilter
	}
	errKalturaPartnerBaseFilter = json.Unmarshal([]byte(serializedKalturaPartnerBaseFilter), &toSerialize)
	if errKalturaPartnerBaseFilter != nil {
		return []byte{}, errKalturaPartnerBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPartnerFilter struct {
	value *KalturaPartnerFilter
	isSet bool
}

func (v NullableKalturaPartnerFilter) Get() *KalturaPartnerFilter {
	return v.value
}

func (v *NullableKalturaPartnerFilter) Set(val *KalturaPartnerFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPartnerFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPartnerFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPartnerFilter(val *KalturaPartnerFilter) *NullableKalturaPartnerFilter {
	return &NullableKalturaPartnerFilter{value: val, isSet: true}
}

func (v NullableKalturaPartnerFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPartnerFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


