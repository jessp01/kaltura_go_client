/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LiveStreamAppendRecordingRequest struct for LiveStreamAppendRecordingRequest
type LiveStreamAppendRecordingRequest struct {
	AssetId string `json:"assetId"`
	Duration float32 `json:"duration"`
	EntryId string `json:"entryId"`
	IsLastChunk *bool `json:"isLastChunk,omitempty"`
	MediaServerIndex string `json:"mediaServerIndex"`
	Resource KalturaDataCenterContentResource `json:"resource"`
}

// NewLiveStreamAppendRecordingRequest instantiates a new LiveStreamAppendRecordingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamAppendRecordingRequest(assetId string, duration float32, entryId string, mediaServerIndex string, resource KalturaDataCenterContentResource) *LiveStreamAppendRecordingRequest {
	this := LiveStreamAppendRecordingRequest{}
	this.AssetId = assetId
	this.Duration = duration
	this.EntryId = entryId
	var isLastChunk bool = false
	this.IsLastChunk = &isLastChunk
	this.MediaServerIndex = mediaServerIndex
	this.Resource = resource
	return &this
}

// NewLiveStreamAppendRecordingRequestWithDefaults instantiates a new LiveStreamAppendRecordingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamAppendRecordingRequestWithDefaults() *LiveStreamAppendRecordingRequest {
	this := LiveStreamAppendRecordingRequest{}
	var isLastChunk bool = false
	this.IsLastChunk = &isLastChunk
	return &this
}

// GetAssetId returns the AssetId field value
func (o *LiveStreamAppendRecordingRequest) GetAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value
// and a boolean to check if the value has been set.
func (o *LiveStreamAppendRecordingRequest) GetAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetId, true
}

// SetAssetId sets field value
func (o *LiveStreamAppendRecordingRequest) SetAssetId(v string) {
	o.AssetId = v
}

// GetDuration returns the Duration field value
func (o *LiveStreamAppendRecordingRequest) GetDuration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *LiveStreamAppendRecordingRequest) GetDurationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *LiveStreamAppendRecordingRequest) SetDuration(v float32) {
	o.Duration = v
}

// GetEntryId returns the EntryId field value
func (o *LiveStreamAppendRecordingRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *LiveStreamAppendRecordingRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *LiveStreamAppendRecordingRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetIsLastChunk returns the IsLastChunk field value if set, zero value otherwise.
func (o *LiveStreamAppendRecordingRequest) GetIsLastChunk() bool {
	if o == nil || o.IsLastChunk == nil {
		var ret bool
		return ret
	}
	return *o.IsLastChunk
}

// GetIsLastChunkOk returns a tuple with the IsLastChunk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamAppendRecordingRequest) GetIsLastChunkOk() (*bool, bool) {
	if o == nil || o.IsLastChunk == nil {
		return nil, false
	}
	return o.IsLastChunk, true
}

// HasIsLastChunk returns a boolean if a field has been set.
func (o *LiveStreamAppendRecordingRequest) HasIsLastChunk() bool {
	if o != nil && o.IsLastChunk != nil {
		return true
	}

	return false
}

// SetIsLastChunk gets a reference to the given bool and assigns it to the IsLastChunk field.
func (o *LiveStreamAppendRecordingRequest) SetIsLastChunk(v bool) {
	o.IsLastChunk = &v
}

// GetMediaServerIndex returns the MediaServerIndex field value
func (o *LiveStreamAppendRecordingRequest) GetMediaServerIndex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaServerIndex
}

// GetMediaServerIndexOk returns a tuple with the MediaServerIndex field value
// and a boolean to check if the value has been set.
func (o *LiveStreamAppendRecordingRequest) GetMediaServerIndexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaServerIndex, true
}

// SetMediaServerIndex sets field value
func (o *LiveStreamAppendRecordingRequest) SetMediaServerIndex(v string) {
	o.MediaServerIndex = v
}

// GetResource returns the Resource field value
func (o *LiveStreamAppendRecordingRequest) GetResource() KalturaDataCenterContentResource {
	if o == nil {
		var ret KalturaDataCenterContentResource
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *LiveStreamAppendRecordingRequest) GetResourceOk() (*KalturaDataCenterContentResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *LiveStreamAppendRecordingRequest) SetResource(v KalturaDataCenterContentResource) {
	o.Resource = v
}

func (o LiveStreamAppendRecordingRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["assetId"] = o.AssetId
	}
	if true {
		toSerialize["duration"] = o.Duration
	}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if o.IsLastChunk != nil {
		toSerialize["isLastChunk"] = o.IsLastChunk
	}
	if true {
		toSerialize["mediaServerIndex"] = o.MediaServerIndex
	}
	if true {
		toSerialize["resource"] = o.Resource
	}
	return json.Marshal(toSerialize)
}

type NullableLiveStreamAppendRecordingRequest struct {
	value *LiveStreamAppendRecordingRequest
	isSet bool
}

func (v NullableLiveStreamAppendRecordingRequest) Get() *LiveStreamAppendRecordingRequest {
	return v.value
}

func (v *NullableLiveStreamAppendRecordingRequest) Set(val *LiveStreamAppendRecordingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamAppendRecordingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamAppendRecordingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamAppendRecordingRequest(val *LiveStreamAppendRecordingRequest) *NullableLiveStreamAppendRecordingRequest {
	return &NullableLiveStreamAppendRecordingRequest{value: val, isSet: true}
}

func (v NullableLiveStreamAppendRecordingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveStreamAppendRecordingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


