/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BaseEntryIndexRequest struct for BaseEntryIndexRequest
type BaseEntryIndexRequest struct {
	Id string `json:"id"`
	ShouldUpdate *bool `json:"shouldUpdate,omitempty"`
}

// NewBaseEntryIndexRequest instantiates a new BaseEntryIndexRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseEntryIndexRequest(id string) *BaseEntryIndexRequest {
	this := BaseEntryIndexRequest{}
	this.Id = id
	var shouldUpdate bool = true
	this.ShouldUpdate = &shouldUpdate
	return &this
}

// NewBaseEntryIndexRequestWithDefaults instantiates a new BaseEntryIndexRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseEntryIndexRequestWithDefaults() *BaseEntryIndexRequest {
	this := BaseEntryIndexRequest{}
	var shouldUpdate bool = true
	this.ShouldUpdate = &shouldUpdate
	return &this
}

// GetId returns the Id field value
func (o *BaseEntryIndexRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BaseEntryIndexRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BaseEntryIndexRequest) SetId(v string) {
	o.Id = v
}

// GetShouldUpdate returns the ShouldUpdate field value if set, zero value otherwise.
func (o *BaseEntryIndexRequest) GetShouldUpdate() bool {
	if o == nil || o.ShouldUpdate == nil {
		var ret bool
		return ret
	}
	return *o.ShouldUpdate
}

// GetShouldUpdateOk returns a tuple with the ShouldUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEntryIndexRequest) GetShouldUpdateOk() (*bool, bool) {
	if o == nil || o.ShouldUpdate == nil {
		return nil, false
	}
	return o.ShouldUpdate, true
}

// HasShouldUpdate returns a boolean if a field has been set.
func (o *BaseEntryIndexRequest) HasShouldUpdate() bool {
	if o != nil && o.ShouldUpdate != nil {
		return true
	}

	return false
}

// SetShouldUpdate gets a reference to the given bool and assigns it to the ShouldUpdate field.
func (o *BaseEntryIndexRequest) SetShouldUpdate(v bool) {
	o.ShouldUpdate = &v
}

func (o BaseEntryIndexRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.ShouldUpdate != nil {
		toSerialize["shouldUpdate"] = o.ShouldUpdate
	}
	return json.Marshal(toSerialize)
}

type NullableBaseEntryIndexRequest struct {
	value *BaseEntryIndexRequest
	isSet bool
}

func (v NullableBaseEntryIndexRequest) Get() *BaseEntryIndexRequest {
	return v.value
}

func (v *NullableBaseEntryIndexRequest) Set(val *BaseEntryIndexRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseEntryIndexRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseEntryIndexRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseEntryIndexRequest(val *BaseEntryIndexRequest) *NullableBaseEntryIndexRequest {
	return &NullableBaseEntryIndexRequest{value: val, isSet: true}
}

func (v NullableBaseEntryIndexRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseEntryIndexRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


