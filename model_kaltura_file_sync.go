/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaFileSync struct for KalturaFileSync
type KalturaFileSync struct {
	// `readOnly`
	CreatedAt *int32 `json:"createdAt,omitempty"`
	// `readOnly`
	Dc *string `json:"dc,omitempty"`
	// `readOnly`
	FileContent *string `json:"fileContent,omitempty"`
	// `readOnly`
	FileDiscSize *float32 `json:"fileDiscSize,omitempty"`
	// `readOnly`  Enum Type: `KalturaFileSyncObjectType`
	FileObjectType *string `json:"fileObjectType,omitempty"`
	FilePath *string `json:"filePath,omitempty"`
	FileRoot *string `json:"fileRoot,omitempty"`
	// `readOnly`
	FileSize *float32 `json:"fileSize,omitempty"`
	// `readOnly`  Enum Type: `KalturaFileSyncType`
	FileType *int32 `json:"fileType,omitempty"`
	// `readOnly`
	FileUrl *string `json:"fileUrl,omitempty"`
	// `readOnly`
	Id *int32 `json:"id,omitempty"`
	// `readOnly`
	IsCurrentDc *bool `json:"isCurrentDc,omitempty"`
	// `readOnly`
	IsDir *bool `json:"isDir,omitempty"`
	// `readOnly`
	LinkCount *int32 `json:"linkCount,omitempty"`
	// `readOnly`
	LinkedId *int32 `json:"linkedId,omitempty"`
	// `readOnly`
	ObjectId *string `json:"objectId,omitempty"`
	// `readOnly`
	ObjectSubType *int32 `json:"objectSubType,omitempty"`
	// `readOnly`
	Original *int32 `json:"original,omitempty"`
	// `readOnly`
	OriginalId *int32 `json:"originalId,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// `readOnly`
	ReadyAt *int32 `json:"readyAt,omitempty"`
	SrcEncKey *string `json:"srcEncKey,omitempty"`
	SrcPath *string `json:"srcPath,omitempty"`
	// Enum Type: `KalturaFileSyncStatus`
	Status *int32 `json:"status,omitempty"`
	StorageClass *string `json:"storageClass,omitempty"`
	// `readOnly`
	SyncTime *int32 `json:"syncTime,omitempty"`
	// `readOnly`
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
	// `readOnly`
	Version *string `json:"version,omitempty"`
}

// NewKalturaFileSync instantiates a new KalturaFileSync object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaFileSync() *KalturaFileSync {
	this := KalturaFileSync{}
	return &this
}

// NewKalturaFileSyncWithDefaults instantiates a new KalturaFileSync object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaFileSyncWithDefaults() *KalturaFileSync {
	this := KalturaFileSync{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaFileSync) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaFileSync) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaFileSync) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDc returns the Dc field value if set, zero value otherwise.
func (o *KalturaFileSync) GetDc() string {
	if o == nil || o.Dc == nil {
		var ret string
		return ret
	}
	return *o.Dc
}

// GetDcOk returns a tuple with the Dc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetDcOk() (*string, bool) {
	if o == nil || o.Dc == nil {
		return nil, false
	}
	return o.Dc, true
}

// HasDc returns a boolean if a field has been set.
func (o *KalturaFileSync) HasDc() bool {
	if o != nil && o.Dc != nil {
		return true
	}

	return false
}

// SetDc gets a reference to the given string and assigns it to the Dc field.
func (o *KalturaFileSync) SetDc(v string) {
	o.Dc = &v
}

// GetFileContent returns the FileContent field value if set, zero value otherwise.
func (o *KalturaFileSync) GetFileContent() string {
	if o == nil || o.FileContent == nil {
		var ret string
		return ret
	}
	return *o.FileContent
}

// GetFileContentOk returns a tuple with the FileContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetFileContentOk() (*string, bool) {
	if o == nil || o.FileContent == nil {
		return nil, false
	}
	return o.FileContent, true
}

// HasFileContent returns a boolean if a field has been set.
func (o *KalturaFileSync) HasFileContent() bool {
	if o != nil && o.FileContent != nil {
		return true
	}

	return false
}

// SetFileContent gets a reference to the given string and assigns it to the FileContent field.
func (o *KalturaFileSync) SetFileContent(v string) {
	o.FileContent = &v
}

// GetFileDiscSize returns the FileDiscSize field value if set, zero value otherwise.
func (o *KalturaFileSync) GetFileDiscSize() float32 {
	if o == nil || o.FileDiscSize == nil {
		var ret float32
		return ret
	}
	return *o.FileDiscSize
}

// GetFileDiscSizeOk returns a tuple with the FileDiscSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetFileDiscSizeOk() (*float32, bool) {
	if o == nil || o.FileDiscSize == nil {
		return nil, false
	}
	return o.FileDiscSize, true
}

// HasFileDiscSize returns a boolean if a field has been set.
func (o *KalturaFileSync) HasFileDiscSize() bool {
	if o != nil && o.FileDiscSize != nil {
		return true
	}

	return false
}

// SetFileDiscSize gets a reference to the given float32 and assigns it to the FileDiscSize field.
func (o *KalturaFileSync) SetFileDiscSize(v float32) {
	o.FileDiscSize = &v
}

// GetFileObjectType returns the FileObjectType field value if set, zero value otherwise.
func (o *KalturaFileSync) GetFileObjectType() string {
	if o == nil || o.FileObjectType == nil {
		var ret string
		return ret
	}
	return *o.FileObjectType
}

// GetFileObjectTypeOk returns a tuple with the FileObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetFileObjectTypeOk() (*string, bool) {
	if o == nil || o.FileObjectType == nil {
		return nil, false
	}
	return o.FileObjectType, true
}

// HasFileObjectType returns a boolean if a field has been set.
func (o *KalturaFileSync) HasFileObjectType() bool {
	if o != nil && o.FileObjectType != nil {
		return true
	}

	return false
}

// SetFileObjectType gets a reference to the given string and assigns it to the FileObjectType field.
func (o *KalturaFileSync) SetFileObjectType(v string) {
	o.FileObjectType = &v
}

// GetFilePath returns the FilePath field value if set, zero value otherwise.
func (o *KalturaFileSync) GetFilePath() string {
	if o == nil || o.FilePath == nil {
		var ret string
		return ret
	}
	return *o.FilePath
}

// GetFilePathOk returns a tuple with the FilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetFilePathOk() (*string, bool) {
	if o == nil || o.FilePath == nil {
		return nil, false
	}
	return o.FilePath, true
}

// HasFilePath returns a boolean if a field has been set.
func (o *KalturaFileSync) HasFilePath() bool {
	if o != nil && o.FilePath != nil {
		return true
	}

	return false
}

// SetFilePath gets a reference to the given string and assigns it to the FilePath field.
func (o *KalturaFileSync) SetFilePath(v string) {
	o.FilePath = &v
}

// GetFileRoot returns the FileRoot field value if set, zero value otherwise.
func (o *KalturaFileSync) GetFileRoot() string {
	if o == nil || o.FileRoot == nil {
		var ret string
		return ret
	}
	return *o.FileRoot
}

// GetFileRootOk returns a tuple with the FileRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetFileRootOk() (*string, bool) {
	if o == nil || o.FileRoot == nil {
		return nil, false
	}
	return o.FileRoot, true
}

// HasFileRoot returns a boolean if a field has been set.
func (o *KalturaFileSync) HasFileRoot() bool {
	if o != nil && o.FileRoot != nil {
		return true
	}

	return false
}

// SetFileRoot gets a reference to the given string and assigns it to the FileRoot field.
func (o *KalturaFileSync) SetFileRoot(v string) {
	o.FileRoot = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *KalturaFileSync) GetFileSize() float32 {
	if o == nil || o.FileSize == nil {
		var ret float32
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetFileSizeOk() (*float32, bool) {
	if o == nil || o.FileSize == nil {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *KalturaFileSync) HasFileSize() bool {
	if o != nil && o.FileSize != nil {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given float32 and assigns it to the FileSize field.
func (o *KalturaFileSync) SetFileSize(v float32) {
	o.FileSize = &v
}

// GetFileType returns the FileType field value if set, zero value otherwise.
func (o *KalturaFileSync) GetFileType() int32 {
	if o == nil || o.FileType == nil {
		var ret int32
		return ret
	}
	return *o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetFileTypeOk() (*int32, bool) {
	if o == nil || o.FileType == nil {
		return nil, false
	}
	return o.FileType, true
}

// HasFileType returns a boolean if a field has been set.
func (o *KalturaFileSync) HasFileType() bool {
	if o != nil && o.FileType != nil {
		return true
	}

	return false
}

// SetFileType gets a reference to the given int32 and assigns it to the FileType field.
func (o *KalturaFileSync) SetFileType(v int32) {
	o.FileType = &v
}

// GetFileUrl returns the FileUrl field value if set, zero value otherwise.
func (o *KalturaFileSync) GetFileUrl() string {
	if o == nil || o.FileUrl == nil {
		var ret string
		return ret
	}
	return *o.FileUrl
}

// GetFileUrlOk returns a tuple with the FileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetFileUrlOk() (*string, bool) {
	if o == nil || o.FileUrl == nil {
		return nil, false
	}
	return o.FileUrl, true
}

// HasFileUrl returns a boolean if a field has been set.
func (o *KalturaFileSync) HasFileUrl() bool {
	if o != nil && o.FileUrl != nil {
		return true
	}

	return false
}

// SetFileUrl gets a reference to the given string and assigns it to the FileUrl field.
func (o *KalturaFileSync) SetFileUrl(v string) {
	o.FileUrl = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaFileSync) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaFileSync) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaFileSync) SetId(v int32) {
	o.Id = &v
}

// GetIsCurrentDc returns the IsCurrentDc field value if set, zero value otherwise.
func (o *KalturaFileSync) GetIsCurrentDc() bool {
	if o == nil || o.IsCurrentDc == nil {
		var ret bool
		return ret
	}
	return *o.IsCurrentDc
}

// GetIsCurrentDcOk returns a tuple with the IsCurrentDc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetIsCurrentDcOk() (*bool, bool) {
	if o == nil || o.IsCurrentDc == nil {
		return nil, false
	}
	return o.IsCurrentDc, true
}

// HasIsCurrentDc returns a boolean if a field has been set.
func (o *KalturaFileSync) HasIsCurrentDc() bool {
	if o != nil && o.IsCurrentDc != nil {
		return true
	}

	return false
}

// SetIsCurrentDc gets a reference to the given bool and assigns it to the IsCurrentDc field.
func (o *KalturaFileSync) SetIsCurrentDc(v bool) {
	o.IsCurrentDc = &v
}

// GetIsDir returns the IsDir field value if set, zero value otherwise.
func (o *KalturaFileSync) GetIsDir() bool {
	if o == nil || o.IsDir == nil {
		var ret bool
		return ret
	}
	return *o.IsDir
}

// GetIsDirOk returns a tuple with the IsDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetIsDirOk() (*bool, bool) {
	if o == nil || o.IsDir == nil {
		return nil, false
	}
	return o.IsDir, true
}

// HasIsDir returns a boolean if a field has been set.
func (o *KalturaFileSync) HasIsDir() bool {
	if o != nil && o.IsDir != nil {
		return true
	}

	return false
}

// SetIsDir gets a reference to the given bool and assigns it to the IsDir field.
func (o *KalturaFileSync) SetIsDir(v bool) {
	o.IsDir = &v
}

// GetLinkCount returns the LinkCount field value if set, zero value otherwise.
func (o *KalturaFileSync) GetLinkCount() int32 {
	if o == nil || o.LinkCount == nil {
		var ret int32
		return ret
	}
	return *o.LinkCount
}

// GetLinkCountOk returns a tuple with the LinkCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetLinkCountOk() (*int32, bool) {
	if o == nil || o.LinkCount == nil {
		return nil, false
	}
	return o.LinkCount, true
}

// HasLinkCount returns a boolean if a field has been set.
func (o *KalturaFileSync) HasLinkCount() bool {
	if o != nil && o.LinkCount != nil {
		return true
	}

	return false
}

// SetLinkCount gets a reference to the given int32 and assigns it to the LinkCount field.
func (o *KalturaFileSync) SetLinkCount(v int32) {
	o.LinkCount = &v
}

// GetLinkedId returns the LinkedId field value if set, zero value otherwise.
func (o *KalturaFileSync) GetLinkedId() int32 {
	if o == nil || o.LinkedId == nil {
		var ret int32
		return ret
	}
	return *o.LinkedId
}

// GetLinkedIdOk returns a tuple with the LinkedId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetLinkedIdOk() (*int32, bool) {
	if o == nil || o.LinkedId == nil {
		return nil, false
	}
	return o.LinkedId, true
}

// HasLinkedId returns a boolean if a field has been set.
func (o *KalturaFileSync) HasLinkedId() bool {
	if o != nil && o.LinkedId != nil {
		return true
	}

	return false
}

// SetLinkedId gets a reference to the given int32 and assigns it to the LinkedId field.
func (o *KalturaFileSync) SetLinkedId(v int32) {
	o.LinkedId = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *KalturaFileSync) GetObjectId() string {
	if o == nil || o.ObjectId == nil {
		var ret string
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetObjectIdOk() (*string, bool) {
	if o == nil || o.ObjectId == nil {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *KalturaFileSync) HasObjectId() bool {
	if o != nil && o.ObjectId != nil {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given string and assigns it to the ObjectId field.
func (o *KalturaFileSync) SetObjectId(v string) {
	o.ObjectId = &v
}

// GetObjectSubType returns the ObjectSubType field value if set, zero value otherwise.
func (o *KalturaFileSync) GetObjectSubType() int32 {
	if o == nil || o.ObjectSubType == nil {
		var ret int32
		return ret
	}
	return *o.ObjectSubType
}

// GetObjectSubTypeOk returns a tuple with the ObjectSubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetObjectSubTypeOk() (*int32, bool) {
	if o == nil || o.ObjectSubType == nil {
		return nil, false
	}
	return o.ObjectSubType, true
}

// HasObjectSubType returns a boolean if a field has been set.
func (o *KalturaFileSync) HasObjectSubType() bool {
	if o != nil && o.ObjectSubType != nil {
		return true
	}

	return false
}

// SetObjectSubType gets a reference to the given int32 and assigns it to the ObjectSubType field.
func (o *KalturaFileSync) SetObjectSubType(v int32) {
	o.ObjectSubType = &v
}

// GetOriginal returns the Original field value if set, zero value otherwise.
func (o *KalturaFileSync) GetOriginal() int32 {
	if o == nil || o.Original == nil {
		var ret int32
		return ret
	}
	return *o.Original
}

// GetOriginalOk returns a tuple with the Original field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetOriginalOk() (*int32, bool) {
	if o == nil || o.Original == nil {
		return nil, false
	}
	return o.Original, true
}

// HasOriginal returns a boolean if a field has been set.
func (o *KalturaFileSync) HasOriginal() bool {
	if o != nil && o.Original != nil {
		return true
	}

	return false
}

// SetOriginal gets a reference to the given int32 and assigns it to the Original field.
func (o *KalturaFileSync) SetOriginal(v int32) {
	o.Original = &v
}

// GetOriginalId returns the OriginalId field value if set, zero value otherwise.
func (o *KalturaFileSync) GetOriginalId() int32 {
	if o == nil || o.OriginalId == nil {
		var ret int32
		return ret
	}
	return *o.OriginalId
}

// GetOriginalIdOk returns a tuple with the OriginalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetOriginalIdOk() (*int32, bool) {
	if o == nil || o.OriginalId == nil {
		return nil, false
	}
	return o.OriginalId, true
}

// HasOriginalId returns a boolean if a field has been set.
func (o *KalturaFileSync) HasOriginalId() bool {
	if o != nil && o.OriginalId != nil {
		return true
	}

	return false
}

// SetOriginalId gets a reference to the given int32 and assigns it to the OriginalId field.
func (o *KalturaFileSync) SetOriginalId(v int32) {
	o.OriginalId = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaFileSync) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaFileSync) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaFileSync) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetReadyAt returns the ReadyAt field value if set, zero value otherwise.
func (o *KalturaFileSync) GetReadyAt() int32 {
	if o == nil || o.ReadyAt == nil {
		var ret int32
		return ret
	}
	return *o.ReadyAt
}

// GetReadyAtOk returns a tuple with the ReadyAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetReadyAtOk() (*int32, bool) {
	if o == nil || o.ReadyAt == nil {
		return nil, false
	}
	return o.ReadyAt, true
}

// HasReadyAt returns a boolean if a field has been set.
func (o *KalturaFileSync) HasReadyAt() bool {
	if o != nil && o.ReadyAt != nil {
		return true
	}

	return false
}

// SetReadyAt gets a reference to the given int32 and assigns it to the ReadyAt field.
func (o *KalturaFileSync) SetReadyAt(v int32) {
	o.ReadyAt = &v
}

// GetSrcEncKey returns the SrcEncKey field value if set, zero value otherwise.
func (o *KalturaFileSync) GetSrcEncKey() string {
	if o == nil || o.SrcEncKey == nil {
		var ret string
		return ret
	}
	return *o.SrcEncKey
}

// GetSrcEncKeyOk returns a tuple with the SrcEncKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetSrcEncKeyOk() (*string, bool) {
	if o == nil || o.SrcEncKey == nil {
		return nil, false
	}
	return o.SrcEncKey, true
}

// HasSrcEncKey returns a boolean if a field has been set.
func (o *KalturaFileSync) HasSrcEncKey() bool {
	if o != nil && o.SrcEncKey != nil {
		return true
	}

	return false
}

// SetSrcEncKey gets a reference to the given string and assigns it to the SrcEncKey field.
func (o *KalturaFileSync) SetSrcEncKey(v string) {
	o.SrcEncKey = &v
}

// GetSrcPath returns the SrcPath field value if set, zero value otherwise.
func (o *KalturaFileSync) GetSrcPath() string {
	if o == nil || o.SrcPath == nil {
		var ret string
		return ret
	}
	return *o.SrcPath
}

// GetSrcPathOk returns a tuple with the SrcPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetSrcPathOk() (*string, bool) {
	if o == nil || o.SrcPath == nil {
		return nil, false
	}
	return o.SrcPath, true
}

// HasSrcPath returns a boolean if a field has been set.
func (o *KalturaFileSync) HasSrcPath() bool {
	if o != nil && o.SrcPath != nil {
		return true
	}

	return false
}

// SetSrcPath gets a reference to the given string and assigns it to the SrcPath field.
func (o *KalturaFileSync) SetSrcPath(v string) {
	o.SrcPath = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaFileSync) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaFileSync) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KalturaFileSync) SetStatus(v int32) {
	o.Status = &v
}

// GetStorageClass returns the StorageClass field value if set, zero value otherwise.
func (o *KalturaFileSync) GetStorageClass() string {
	if o == nil || o.StorageClass == nil {
		var ret string
		return ret
	}
	return *o.StorageClass
}

// GetStorageClassOk returns a tuple with the StorageClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetStorageClassOk() (*string, bool) {
	if o == nil || o.StorageClass == nil {
		return nil, false
	}
	return o.StorageClass, true
}

// HasStorageClass returns a boolean if a field has been set.
func (o *KalturaFileSync) HasStorageClass() bool {
	if o != nil && o.StorageClass != nil {
		return true
	}

	return false
}

// SetStorageClass gets a reference to the given string and assigns it to the StorageClass field.
func (o *KalturaFileSync) SetStorageClass(v string) {
	o.StorageClass = &v
}

// GetSyncTime returns the SyncTime field value if set, zero value otherwise.
func (o *KalturaFileSync) GetSyncTime() int32 {
	if o == nil || o.SyncTime == nil {
		var ret int32
		return ret
	}
	return *o.SyncTime
}

// GetSyncTimeOk returns a tuple with the SyncTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetSyncTimeOk() (*int32, bool) {
	if o == nil || o.SyncTime == nil {
		return nil, false
	}
	return o.SyncTime, true
}

// HasSyncTime returns a boolean if a field has been set.
func (o *KalturaFileSync) HasSyncTime() bool {
	if o != nil && o.SyncTime != nil {
		return true
	}

	return false
}

// SetSyncTime gets a reference to the given int32 and assigns it to the SyncTime field.
func (o *KalturaFileSync) SetSyncTime(v int32) {
	o.SyncTime = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaFileSync) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaFileSync) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaFileSync) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *KalturaFileSync) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSync) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *KalturaFileSync) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *KalturaFileSync) SetVersion(v string) {
	o.Version = &v
}

func (o KalturaFileSync) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Dc != nil {
		toSerialize["dc"] = o.Dc
	}
	if o.FileContent != nil {
		toSerialize["fileContent"] = o.FileContent
	}
	if o.FileDiscSize != nil {
		toSerialize["fileDiscSize"] = o.FileDiscSize
	}
	if o.FileObjectType != nil {
		toSerialize["fileObjectType"] = o.FileObjectType
	}
	if o.FilePath != nil {
		toSerialize["filePath"] = o.FilePath
	}
	if o.FileRoot != nil {
		toSerialize["fileRoot"] = o.FileRoot
	}
	if o.FileSize != nil {
		toSerialize["fileSize"] = o.FileSize
	}
	if o.FileType != nil {
		toSerialize["fileType"] = o.FileType
	}
	if o.FileUrl != nil {
		toSerialize["fileUrl"] = o.FileUrl
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsCurrentDc != nil {
		toSerialize["isCurrentDc"] = o.IsCurrentDc
	}
	if o.IsDir != nil {
		toSerialize["isDir"] = o.IsDir
	}
	if o.LinkCount != nil {
		toSerialize["linkCount"] = o.LinkCount
	}
	if o.LinkedId != nil {
		toSerialize["linkedId"] = o.LinkedId
	}
	if o.ObjectId != nil {
		toSerialize["objectId"] = o.ObjectId
	}
	if o.ObjectSubType != nil {
		toSerialize["objectSubType"] = o.ObjectSubType
	}
	if o.Original != nil {
		toSerialize["original"] = o.Original
	}
	if o.OriginalId != nil {
		toSerialize["originalId"] = o.OriginalId
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.ReadyAt != nil {
		toSerialize["readyAt"] = o.ReadyAt
	}
	if o.SrcEncKey != nil {
		toSerialize["srcEncKey"] = o.SrcEncKey
	}
	if o.SrcPath != nil {
		toSerialize["srcPath"] = o.SrcPath
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StorageClass != nil {
		toSerialize["storageClass"] = o.StorageClass
	}
	if o.SyncTime != nil {
		toSerialize["syncTime"] = o.SyncTime
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaFileSync struct {
	value *KalturaFileSync
	isSet bool
}

func (v NullableKalturaFileSync) Get() *KalturaFileSync {
	return v.value
}

func (v *NullableKalturaFileSync) Set(val *KalturaFileSync) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaFileSync) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaFileSync) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaFileSync(val *KalturaFileSync) *NullableKalturaFileSync {
	return &NullableKalturaFileSync{value: val, isSet: true}
}

func (v NullableKalturaFileSync) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaFileSync) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


