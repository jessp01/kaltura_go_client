/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ReportGetUrlForReportAsCsvRequest struct for ReportGetUrlForReportAsCsvRequest
type ReportGetUrlForReportAsCsvRequest struct {
	Dimension *string `json:"dimension,omitempty"`
	Headers string `json:"headers"`
	ObjectIds *string `json:"objectIds,omitempty"`
	Order *string `json:"order,omitempty"`
	Pager *KalturaFilterPager `json:"pager,omitempty"`
	ReportInputFilter KalturaReportInputFilter `json:"reportInputFilter"`
	ReportText string `json:"reportText"`
	ReportTitle string `json:"reportTitle"`
	ReportType string `json:"reportType"`
	ResponseOptions *KalturaReportResponseOptions `json:"responseOptions,omitempty"`
}

// NewReportGetUrlForReportAsCsvRequest instantiates a new ReportGetUrlForReportAsCsvRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportGetUrlForReportAsCsvRequest(headers string, reportInputFilter KalturaReportInputFilter, reportText string, reportTitle string, reportType string) *ReportGetUrlForReportAsCsvRequest {
	this := ReportGetUrlForReportAsCsvRequest{}
	this.Headers = headers
	this.ReportInputFilter = reportInputFilter
	this.ReportText = reportText
	this.ReportTitle = reportTitle
	this.ReportType = reportType
	return &this
}

// NewReportGetUrlForReportAsCsvRequestWithDefaults instantiates a new ReportGetUrlForReportAsCsvRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportGetUrlForReportAsCsvRequestWithDefaults() *ReportGetUrlForReportAsCsvRequest {
	this := ReportGetUrlForReportAsCsvRequest{}
	return &this
}

// GetDimension returns the Dimension field value if set, zero value otherwise.
func (o *ReportGetUrlForReportAsCsvRequest) GetDimension() string {
	if o == nil || o.Dimension == nil {
		var ret string
		return ret
	}
	return *o.Dimension
}

// GetDimensionOk returns a tuple with the Dimension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportGetUrlForReportAsCsvRequest) GetDimensionOk() (*string, bool) {
	if o == nil || o.Dimension == nil {
		return nil, false
	}
	return o.Dimension, true
}

// HasDimension returns a boolean if a field has been set.
func (o *ReportGetUrlForReportAsCsvRequest) HasDimension() bool {
	if o != nil && o.Dimension != nil {
		return true
	}

	return false
}

// SetDimension gets a reference to the given string and assigns it to the Dimension field.
func (o *ReportGetUrlForReportAsCsvRequest) SetDimension(v string) {
	o.Dimension = &v
}

// GetHeaders returns the Headers field value
func (o *ReportGetUrlForReportAsCsvRequest) GetHeaders() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value
// and a boolean to check if the value has been set.
func (o *ReportGetUrlForReportAsCsvRequest) GetHeadersOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Headers, true
}

// SetHeaders sets field value
func (o *ReportGetUrlForReportAsCsvRequest) SetHeaders(v string) {
	o.Headers = v
}

// GetObjectIds returns the ObjectIds field value if set, zero value otherwise.
func (o *ReportGetUrlForReportAsCsvRequest) GetObjectIds() string {
	if o == nil || o.ObjectIds == nil {
		var ret string
		return ret
	}
	return *o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportGetUrlForReportAsCsvRequest) GetObjectIdsOk() (*string, bool) {
	if o == nil || o.ObjectIds == nil {
		return nil, false
	}
	return o.ObjectIds, true
}

// HasObjectIds returns a boolean if a field has been set.
func (o *ReportGetUrlForReportAsCsvRequest) HasObjectIds() bool {
	if o != nil && o.ObjectIds != nil {
		return true
	}

	return false
}

// SetObjectIds gets a reference to the given string and assigns it to the ObjectIds field.
func (o *ReportGetUrlForReportAsCsvRequest) SetObjectIds(v string) {
	o.ObjectIds = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *ReportGetUrlForReportAsCsvRequest) GetOrder() string {
	if o == nil || o.Order == nil {
		var ret string
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportGetUrlForReportAsCsvRequest) GetOrderOk() (*string, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *ReportGetUrlForReportAsCsvRequest) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given string and assigns it to the Order field.
func (o *ReportGetUrlForReportAsCsvRequest) SetOrder(v string) {
	o.Order = &v
}

// GetPager returns the Pager field value if set, zero value otherwise.
func (o *ReportGetUrlForReportAsCsvRequest) GetPager() KalturaFilterPager {
	if o == nil || o.Pager == nil {
		var ret KalturaFilterPager
		return ret
	}
	return *o.Pager
}

// GetPagerOk returns a tuple with the Pager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportGetUrlForReportAsCsvRequest) GetPagerOk() (*KalturaFilterPager, bool) {
	if o == nil || o.Pager == nil {
		return nil, false
	}
	return o.Pager, true
}

// HasPager returns a boolean if a field has been set.
func (o *ReportGetUrlForReportAsCsvRequest) HasPager() bool {
	if o != nil && o.Pager != nil {
		return true
	}

	return false
}

// SetPager gets a reference to the given KalturaFilterPager and assigns it to the Pager field.
func (o *ReportGetUrlForReportAsCsvRequest) SetPager(v KalturaFilterPager) {
	o.Pager = &v
}

// GetReportInputFilter returns the ReportInputFilter field value
func (o *ReportGetUrlForReportAsCsvRequest) GetReportInputFilter() KalturaReportInputFilter {
	if o == nil {
		var ret KalturaReportInputFilter
		return ret
	}

	return o.ReportInputFilter
}

// GetReportInputFilterOk returns a tuple with the ReportInputFilter field value
// and a boolean to check if the value has been set.
func (o *ReportGetUrlForReportAsCsvRequest) GetReportInputFilterOk() (*KalturaReportInputFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportInputFilter, true
}

// SetReportInputFilter sets field value
func (o *ReportGetUrlForReportAsCsvRequest) SetReportInputFilter(v KalturaReportInputFilter) {
	o.ReportInputFilter = v
}

// GetReportText returns the ReportText field value
func (o *ReportGetUrlForReportAsCsvRequest) GetReportText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReportText
}

// GetReportTextOk returns a tuple with the ReportText field value
// and a boolean to check if the value has been set.
func (o *ReportGetUrlForReportAsCsvRequest) GetReportTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportText, true
}

// SetReportText sets field value
func (o *ReportGetUrlForReportAsCsvRequest) SetReportText(v string) {
	o.ReportText = v
}

// GetReportTitle returns the ReportTitle field value
func (o *ReportGetUrlForReportAsCsvRequest) GetReportTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReportTitle
}

// GetReportTitleOk returns a tuple with the ReportTitle field value
// and a boolean to check if the value has been set.
func (o *ReportGetUrlForReportAsCsvRequest) GetReportTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportTitle, true
}

// SetReportTitle sets field value
func (o *ReportGetUrlForReportAsCsvRequest) SetReportTitle(v string) {
	o.ReportTitle = v
}

// GetReportType returns the ReportType field value
func (o *ReportGetUrlForReportAsCsvRequest) GetReportType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value
// and a boolean to check if the value has been set.
func (o *ReportGetUrlForReportAsCsvRequest) GetReportTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportType, true
}

// SetReportType sets field value
func (o *ReportGetUrlForReportAsCsvRequest) SetReportType(v string) {
	o.ReportType = v
}

// GetResponseOptions returns the ResponseOptions field value if set, zero value otherwise.
func (o *ReportGetUrlForReportAsCsvRequest) GetResponseOptions() KalturaReportResponseOptions {
	if o == nil || o.ResponseOptions == nil {
		var ret KalturaReportResponseOptions
		return ret
	}
	return *o.ResponseOptions
}

// GetResponseOptionsOk returns a tuple with the ResponseOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportGetUrlForReportAsCsvRequest) GetResponseOptionsOk() (*KalturaReportResponseOptions, bool) {
	if o == nil || o.ResponseOptions == nil {
		return nil, false
	}
	return o.ResponseOptions, true
}

// HasResponseOptions returns a boolean if a field has been set.
func (o *ReportGetUrlForReportAsCsvRequest) HasResponseOptions() bool {
	if o != nil && o.ResponseOptions != nil {
		return true
	}

	return false
}

// SetResponseOptions gets a reference to the given KalturaReportResponseOptions and assigns it to the ResponseOptions field.
func (o *ReportGetUrlForReportAsCsvRequest) SetResponseOptions(v KalturaReportResponseOptions) {
	o.ResponseOptions = &v
}

func (o ReportGetUrlForReportAsCsvRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Dimension != nil {
		toSerialize["dimension"] = o.Dimension
	}
	if true {
		toSerialize["headers"] = o.Headers
	}
	if o.ObjectIds != nil {
		toSerialize["objectIds"] = o.ObjectIds
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	if o.Pager != nil {
		toSerialize["pager"] = o.Pager
	}
	if true {
		toSerialize["reportInputFilter"] = o.ReportInputFilter
	}
	if true {
		toSerialize["reportText"] = o.ReportText
	}
	if true {
		toSerialize["reportTitle"] = o.ReportTitle
	}
	if true {
		toSerialize["reportType"] = o.ReportType
	}
	if o.ResponseOptions != nil {
		toSerialize["responseOptions"] = o.ResponseOptions
	}
	return json.Marshal(toSerialize)
}

type NullableReportGetUrlForReportAsCsvRequest struct {
	value *ReportGetUrlForReportAsCsvRequest
	isSet bool
}

func (v NullableReportGetUrlForReportAsCsvRequest) Get() *ReportGetUrlForReportAsCsvRequest {
	return v.value
}

func (v *NullableReportGetUrlForReportAsCsvRequest) Set(val *ReportGetUrlForReportAsCsvRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReportGetUrlForReportAsCsvRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReportGetUrlForReportAsCsvRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportGetUrlForReportAsCsvRequest(val *ReportGetUrlForReportAsCsvRequest) *NullableReportGetUrlForReportAsCsvRequest {
	return &NullableReportGetUrlForReportAsCsvRequest{value: val, isSet: true}
}

func (v NullableReportGetUrlForReportAsCsvRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportGetUrlForReportAsCsvRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


