/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBaseInteractivity `abstract`
type KalturaBaseInteractivity struct {
	Data *string `json:"data,omitempty"`
	// `readOnly`
	EntryId *string `json:"entryId,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	// `readOnly`  Interactivity update date as Unix timestamp (In seconds)
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
	// `readOnly`
	Version *int32 `json:"version,omitempty"`
}

// NewKalturaBaseInteractivity instantiates a new KalturaBaseInteractivity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBaseInteractivity() *KalturaBaseInteractivity {
	this := KalturaBaseInteractivity{}
	return &this
}

// NewKalturaBaseInteractivityWithDefaults instantiates a new KalturaBaseInteractivity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBaseInteractivityWithDefaults() *KalturaBaseInteractivity {
	this := KalturaBaseInteractivity{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *KalturaBaseInteractivity) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseInteractivity) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *KalturaBaseInteractivity) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *KalturaBaseInteractivity) SetData(v string) {
	o.Data = &v
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *KalturaBaseInteractivity) GetEntryId() string {
	if o == nil || o.EntryId == nil {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseInteractivity) GetEntryIdOk() (*string, bool) {
	if o == nil || o.EntryId == nil {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *KalturaBaseInteractivity) HasEntryId() bool {
	if o != nil && o.EntryId != nil {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *KalturaBaseInteractivity) SetEntryId(v string) {
	o.EntryId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaBaseInteractivity) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseInteractivity) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaBaseInteractivity) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaBaseInteractivity) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaBaseInteractivity) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseInteractivity) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaBaseInteractivity) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaBaseInteractivity) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *KalturaBaseInteractivity) GetVersion() int32 {
	if o == nil || o.Version == nil {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseInteractivity) GetVersionOk() (*int32, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *KalturaBaseInteractivity) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *KalturaBaseInteractivity) SetVersion(v int32) {
	o.Version = &v
}

func (o KalturaBaseInteractivity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.EntryId != nil {
		toSerialize["entryId"] = o.EntryId
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBaseInteractivity struct {
	value *KalturaBaseInteractivity
	isSet bool
}

func (v NullableKalturaBaseInteractivity) Get() *KalturaBaseInteractivity {
	return v.value
}

func (v *NullableKalturaBaseInteractivity) Set(val *KalturaBaseInteractivity) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBaseInteractivity) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBaseInteractivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBaseInteractivity(val *KalturaBaseInteractivity) *NullableKalturaBaseInteractivity {
	return &NullableKalturaBaseInteractivity{value: val, isSet: true}
}

func (v NullableKalturaBaseInteractivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBaseInteractivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


