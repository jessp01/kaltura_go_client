/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchResetJobExecutionAttemptsRequest struct for BatchResetJobExecutionAttemptsRequest
type BatchResetJobExecutionAttemptsRequest struct {
	Id int32 `json:"id"`
	JobType string `json:"jobType"`
	LockKey KalturaExclusiveLockKey `json:"lockKey"`
}

// NewBatchResetJobExecutionAttemptsRequest instantiates a new BatchResetJobExecutionAttemptsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchResetJobExecutionAttemptsRequest(id int32, jobType string, lockKey KalturaExclusiveLockKey) *BatchResetJobExecutionAttemptsRequest {
	this := BatchResetJobExecutionAttemptsRequest{}
	this.Id = id
	this.JobType = jobType
	this.LockKey = lockKey
	return &this
}

// NewBatchResetJobExecutionAttemptsRequestWithDefaults instantiates a new BatchResetJobExecutionAttemptsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchResetJobExecutionAttemptsRequestWithDefaults() *BatchResetJobExecutionAttemptsRequest {
	this := BatchResetJobExecutionAttemptsRequest{}
	return &this
}

// GetId returns the Id field value
func (o *BatchResetJobExecutionAttemptsRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BatchResetJobExecutionAttemptsRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BatchResetJobExecutionAttemptsRequest) SetId(v int32) {
	o.Id = v
}

// GetJobType returns the JobType field value
func (o *BatchResetJobExecutionAttemptsRequest) GetJobType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value
// and a boolean to check if the value has been set.
func (o *BatchResetJobExecutionAttemptsRequest) GetJobTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobType, true
}

// SetJobType sets field value
func (o *BatchResetJobExecutionAttemptsRequest) SetJobType(v string) {
	o.JobType = v
}

// GetLockKey returns the LockKey field value
func (o *BatchResetJobExecutionAttemptsRequest) GetLockKey() KalturaExclusiveLockKey {
	if o == nil {
		var ret KalturaExclusiveLockKey
		return ret
	}

	return o.LockKey
}

// GetLockKeyOk returns a tuple with the LockKey field value
// and a boolean to check if the value has been set.
func (o *BatchResetJobExecutionAttemptsRequest) GetLockKeyOk() (*KalturaExclusiveLockKey, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockKey, true
}

// SetLockKey sets field value
func (o *BatchResetJobExecutionAttemptsRequest) SetLockKey(v KalturaExclusiveLockKey) {
	o.LockKey = v
}

func (o BatchResetJobExecutionAttemptsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["jobType"] = o.JobType
	}
	if true {
		toSerialize["lockKey"] = o.LockKey
	}
	return json.Marshal(toSerialize)
}

type NullableBatchResetJobExecutionAttemptsRequest struct {
	value *BatchResetJobExecutionAttemptsRequest
	isSet bool
}

func (v NullableBatchResetJobExecutionAttemptsRequest) Get() *BatchResetJobExecutionAttemptsRequest {
	return v.value
}

func (v *NullableBatchResetJobExecutionAttemptsRequest) Set(val *BatchResetJobExecutionAttemptsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchResetJobExecutionAttemptsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchResetJobExecutionAttemptsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchResetJobExecutionAttemptsRequest(val *BatchResetJobExecutionAttemptsRequest) *NullableBatchResetJobExecutionAttemptsRequest {
	return &NullableBatchResetJobExecutionAttemptsRequest{value: val, isSet: true}
}

func (v NullableBatchResetJobExecutionAttemptsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchResetJobExecutionAttemptsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


