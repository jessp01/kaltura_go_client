/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LiveStreamArchiveRequest struct for LiveStreamArchiveRequest
type LiveStreamArchiveRequest struct {
	LiveEntryId string `json:"liveEntryId"`
	VodEntryId string `json:"vodEntryId"`
}

// NewLiveStreamArchiveRequest instantiates a new LiveStreamArchiveRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamArchiveRequest(liveEntryId string, vodEntryId string) *LiveStreamArchiveRequest {
	this := LiveStreamArchiveRequest{}
	this.LiveEntryId = liveEntryId
	this.VodEntryId = vodEntryId
	return &this
}

// NewLiveStreamArchiveRequestWithDefaults instantiates a new LiveStreamArchiveRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamArchiveRequestWithDefaults() *LiveStreamArchiveRequest {
	this := LiveStreamArchiveRequest{}
	return &this
}

// GetLiveEntryId returns the LiveEntryId field value
func (o *LiveStreamArchiveRequest) GetLiveEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LiveEntryId
}

// GetLiveEntryIdOk returns a tuple with the LiveEntryId field value
// and a boolean to check if the value has been set.
func (o *LiveStreamArchiveRequest) GetLiveEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LiveEntryId, true
}

// SetLiveEntryId sets field value
func (o *LiveStreamArchiveRequest) SetLiveEntryId(v string) {
	o.LiveEntryId = v
}

// GetVodEntryId returns the VodEntryId field value
func (o *LiveStreamArchiveRequest) GetVodEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VodEntryId
}

// GetVodEntryIdOk returns a tuple with the VodEntryId field value
// and a boolean to check if the value has been set.
func (o *LiveStreamArchiveRequest) GetVodEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VodEntryId, true
}

// SetVodEntryId sets field value
func (o *LiveStreamArchiveRequest) SetVodEntryId(v string) {
	o.VodEntryId = v
}

func (o LiveStreamArchiveRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["liveEntryId"] = o.LiveEntryId
	}
	if true {
		toSerialize["vodEntryId"] = o.VodEntryId
	}
	return json.Marshal(toSerialize)
}

type NullableLiveStreamArchiveRequest struct {
	value *LiveStreamArchiveRequest
	isSet bool
}

func (v NullableLiveStreamArchiveRequest) Get() *LiveStreamArchiveRequest {
	return v.value
}

func (v *NullableLiveStreamArchiveRequest) Set(val *LiveStreamArchiveRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamArchiveRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamArchiveRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamArchiveRequest(val *LiveStreamArchiveRequest) *NullableLiveStreamArchiveRequest {
	return &NullableLiveStreamArchiveRequest{value: val, isSet: true}
}

func (v NullableLiveStreamArchiveRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveStreamArchiveRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


