/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserRoleAddRequest struct for UserRoleAddRequest
type UserRoleAddRequest struct {
	UserRole KalturaUserRole `json:"userRole"`
}

// NewUserRoleAddRequest instantiates a new UserRoleAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserRoleAddRequest(userRole KalturaUserRole) *UserRoleAddRequest {
	this := UserRoleAddRequest{}
	this.UserRole = userRole
	return &this
}

// NewUserRoleAddRequestWithDefaults instantiates a new UserRoleAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserRoleAddRequestWithDefaults() *UserRoleAddRequest {
	this := UserRoleAddRequest{}
	return &this
}

// GetUserRole returns the UserRole field value
func (o *UserRoleAddRequest) GetUserRole() KalturaUserRole {
	if o == nil {
		var ret KalturaUserRole
		return ret
	}

	return o.UserRole
}

// GetUserRoleOk returns a tuple with the UserRole field value
// and a boolean to check if the value has been set.
func (o *UserRoleAddRequest) GetUserRoleOk() (*KalturaUserRole, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserRole, true
}

// SetUserRole sets field value
func (o *UserRoleAddRequest) SetUserRole(v KalturaUserRole) {
	o.UserRole = v
}

func (o UserRoleAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["userRole"] = o.UserRole
	}
	return json.Marshal(toSerialize)
}

type NullableUserRoleAddRequest struct {
	value *UserRoleAddRequest
	isSet bool
}

func (v NullableUserRoleAddRequest) Get() *UserRoleAddRequest {
	return v.value
}

func (v *NullableUserRoleAddRequest) Set(val *UserRoleAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserRoleAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserRoleAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserRoleAddRequest(val *UserRoleAddRequest) *NullableUserRoleAddRequest {
	return &NullableUserRoleAddRequest{value: val, isSet: true}
}

func (v NullableUserRoleAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserRoleAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


