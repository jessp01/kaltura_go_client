/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AnnotationUpdateStatusRequest struct for AnnotationUpdateStatusRequest
type AnnotationUpdateStatusRequest struct {
	Id string `json:"id"`
	Status int32 `json:"status"`
}

// NewAnnotationUpdateStatusRequest instantiates a new AnnotationUpdateStatusRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnnotationUpdateStatusRequest(id string, status int32) *AnnotationUpdateStatusRequest {
	this := AnnotationUpdateStatusRequest{}
	this.Id = id
	this.Status = status
	return &this
}

// NewAnnotationUpdateStatusRequestWithDefaults instantiates a new AnnotationUpdateStatusRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnnotationUpdateStatusRequestWithDefaults() *AnnotationUpdateStatusRequest {
	this := AnnotationUpdateStatusRequest{}
	return &this
}

// GetId returns the Id field value
func (o *AnnotationUpdateStatusRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AnnotationUpdateStatusRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AnnotationUpdateStatusRequest) SetId(v string) {
	o.Id = v
}

// GetStatus returns the Status field value
func (o *AnnotationUpdateStatusRequest) GetStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AnnotationUpdateStatusRequest) GetStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AnnotationUpdateStatusRequest) SetStatus(v int32) {
	o.Status = v
}

func (o AnnotationUpdateStatusRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableAnnotationUpdateStatusRequest struct {
	value *AnnotationUpdateStatusRequest
	isSet bool
}

func (v NullableAnnotationUpdateStatusRequest) Get() *AnnotationUpdateStatusRequest {
	return v.value
}

func (v *NullableAnnotationUpdateStatusRequest) Set(val *AnnotationUpdateStatusRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAnnotationUpdateStatusRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAnnotationUpdateStatusRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnnotationUpdateStatusRequest(val *AnnotationUpdateStatusRequest) *NullableAnnotationUpdateStatusRequest {
	return &NullableAnnotationUpdateStatusRequest{value: val, isSet: true}
}

func (v NullableAnnotationUpdateStatusRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnnotationUpdateStatusRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


