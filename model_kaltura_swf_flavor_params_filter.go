/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSwfFlavorParamsFilter struct for KalturaSwfFlavorParamsFilter
type KalturaSwfFlavorParamsFilter struct {
	KalturaSwfFlavorParamsBaseFilter
}

// NewKalturaSwfFlavorParamsFilter instantiates a new KalturaSwfFlavorParamsFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSwfFlavorParamsFilter() *KalturaSwfFlavorParamsFilter {
	this := KalturaSwfFlavorParamsFilter{}
	return &this
}

// NewKalturaSwfFlavorParamsFilterWithDefaults instantiates a new KalturaSwfFlavorParamsFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSwfFlavorParamsFilterWithDefaults() *KalturaSwfFlavorParamsFilter {
	this := KalturaSwfFlavorParamsFilter{}
	return &this
}

func (o KalturaSwfFlavorParamsFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaSwfFlavorParamsBaseFilter, errKalturaSwfFlavorParamsBaseFilter := json.Marshal(o.KalturaSwfFlavorParamsBaseFilter)
	if errKalturaSwfFlavorParamsBaseFilter != nil {
		return []byte{}, errKalturaSwfFlavorParamsBaseFilter
	}
	errKalturaSwfFlavorParamsBaseFilter = json.Unmarshal([]byte(serializedKalturaSwfFlavorParamsBaseFilter), &toSerialize)
	if errKalturaSwfFlavorParamsBaseFilter != nil {
		return []byte{}, errKalturaSwfFlavorParamsBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSwfFlavorParamsFilter struct {
	value *KalturaSwfFlavorParamsFilter
	isSet bool
}

func (v NullableKalturaSwfFlavorParamsFilter) Get() *KalturaSwfFlavorParamsFilter {
	return v.value
}

func (v *NullableKalturaSwfFlavorParamsFilter) Set(val *KalturaSwfFlavorParamsFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSwfFlavorParamsFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSwfFlavorParamsFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSwfFlavorParamsFilter(val *KalturaSwfFlavorParamsFilter) *NullableKalturaSwfFlavorParamsFilter {
	return &NullableKalturaSwfFlavorParamsFilter{value: val, isSet: true}
}

func (v NullableKalturaSwfFlavorParamsFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSwfFlavorParamsFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


