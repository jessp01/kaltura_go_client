/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaScheduleEventResourceFilter struct for KalturaScheduleEventResourceFilter
type KalturaScheduleEventResourceFilter struct {
	KalturaScheduleEventResourceBaseFilter
}

// NewKalturaScheduleEventResourceFilter instantiates a new KalturaScheduleEventResourceFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaScheduleEventResourceFilter() *KalturaScheduleEventResourceFilter {
	this := KalturaScheduleEventResourceFilter{}
	return &this
}

// NewKalturaScheduleEventResourceFilterWithDefaults instantiates a new KalturaScheduleEventResourceFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaScheduleEventResourceFilterWithDefaults() *KalturaScheduleEventResourceFilter {
	this := KalturaScheduleEventResourceFilter{}
	return &this
}

func (o KalturaScheduleEventResourceFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaScheduleEventResourceBaseFilter, errKalturaScheduleEventResourceBaseFilter := json.Marshal(o.KalturaScheduleEventResourceBaseFilter)
	if errKalturaScheduleEventResourceBaseFilter != nil {
		return []byte{}, errKalturaScheduleEventResourceBaseFilter
	}
	errKalturaScheduleEventResourceBaseFilter = json.Unmarshal([]byte(serializedKalturaScheduleEventResourceBaseFilter), &toSerialize)
	if errKalturaScheduleEventResourceBaseFilter != nil {
		return []byte{}, errKalturaScheduleEventResourceBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaScheduleEventResourceFilter struct {
	value *KalturaScheduleEventResourceFilter
	isSet bool
}

func (v NullableKalturaScheduleEventResourceFilter) Get() *KalturaScheduleEventResourceFilter {
	return v.value
}

func (v *NullableKalturaScheduleEventResourceFilter) Set(val *KalturaScheduleEventResourceFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaScheduleEventResourceFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaScheduleEventResourceFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaScheduleEventResourceFilter(val *KalturaScheduleEventResourceFilter) *NullableKalturaScheduleEventResourceFilter {
	return &NullableKalturaScheduleEventResourceFilter{value: val, isSet: true}
}

func (v NullableKalturaScheduleEventResourceFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaScheduleEventResourceFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


