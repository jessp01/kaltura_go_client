/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaUpgradeMetadataResponse struct for KalturaUpgradeMetadataResponse
type KalturaUpgradeMetadataResponse struct {
	// `readOnly`
	LowerVersionCount *int32 `json:"lowerVersionCount,omitempty"`
	// `readOnly`
	TotalCount *int32 `json:"totalCount,omitempty"`
}

// NewKalturaUpgradeMetadataResponse instantiates a new KalturaUpgradeMetadataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaUpgradeMetadataResponse() *KalturaUpgradeMetadataResponse {
	this := KalturaUpgradeMetadataResponse{}
	return &this
}

// NewKalturaUpgradeMetadataResponseWithDefaults instantiates a new KalturaUpgradeMetadataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaUpgradeMetadataResponseWithDefaults() *KalturaUpgradeMetadataResponse {
	this := KalturaUpgradeMetadataResponse{}
	return &this
}

// GetLowerVersionCount returns the LowerVersionCount field value if set, zero value otherwise.
func (o *KalturaUpgradeMetadataResponse) GetLowerVersionCount() int32 {
	if o == nil || o.LowerVersionCount == nil {
		var ret int32
		return ret
	}
	return *o.LowerVersionCount
}

// GetLowerVersionCountOk returns a tuple with the LowerVersionCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaUpgradeMetadataResponse) GetLowerVersionCountOk() (*int32, bool) {
	if o == nil || o.LowerVersionCount == nil {
		return nil, false
	}
	return o.LowerVersionCount, true
}

// HasLowerVersionCount returns a boolean if a field has been set.
func (o *KalturaUpgradeMetadataResponse) HasLowerVersionCount() bool {
	if o != nil && o.LowerVersionCount != nil {
		return true
	}

	return false
}

// SetLowerVersionCount gets a reference to the given int32 and assigns it to the LowerVersionCount field.
func (o *KalturaUpgradeMetadataResponse) SetLowerVersionCount(v int32) {
	o.LowerVersionCount = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *KalturaUpgradeMetadataResponse) GetTotalCount() int32 {
	if o == nil || o.TotalCount == nil {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaUpgradeMetadataResponse) GetTotalCountOk() (*int32, bool) {
	if o == nil || o.TotalCount == nil {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *KalturaUpgradeMetadataResponse) HasTotalCount() bool {
	if o != nil && o.TotalCount != nil {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *KalturaUpgradeMetadataResponse) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o KalturaUpgradeMetadataResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LowerVersionCount != nil {
		toSerialize["lowerVersionCount"] = o.LowerVersionCount
	}
	if o.TotalCount != nil {
		toSerialize["totalCount"] = o.TotalCount
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaUpgradeMetadataResponse struct {
	value *KalturaUpgradeMetadataResponse
	isSet bool
}

func (v NullableKalturaUpgradeMetadataResponse) Get() *KalturaUpgradeMetadataResponse {
	return v.value
}

func (v *NullableKalturaUpgradeMetadataResponse) Set(val *KalturaUpgradeMetadataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaUpgradeMetadataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaUpgradeMetadataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaUpgradeMetadataResponse(val *KalturaUpgradeMetadataResponse) *NullableKalturaUpgradeMetadataResponse {
	return &NullableKalturaUpgradeMetadataResponse{value: val, isSet: true}
}

func (v NullableKalturaUpgradeMetadataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaUpgradeMetadataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


