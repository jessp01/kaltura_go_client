/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaQuizUserEntryBaseFilter `abstract`
type KalturaQuizUserEntryBaseFilter struct {
	KalturaUserEntryFilter
}

// NewKalturaQuizUserEntryBaseFilter instantiates a new KalturaQuizUserEntryBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaQuizUserEntryBaseFilter() *KalturaQuizUserEntryBaseFilter {
	this := KalturaQuizUserEntryBaseFilter{}
	return &this
}

// NewKalturaQuizUserEntryBaseFilterWithDefaults instantiates a new KalturaQuizUserEntryBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaQuizUserEntryBaseFilterWithDefaults() *KalturaQuizUserEntryBaseFilter {
	this := KalturaQuizUserEntryBaseFilter{}
	return &this
}

func (o KalturaQuizUserEntryBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaUserEntryFilter, errKalturaUserEntryFilter := json.Marshal(o.KalturaUserEntryFilter)
	if errKalturaUserEntryFilter != nil {
		return []byte{}, errKalturaUserEntryFilter
	}
	errKalturaUserEntryFilter = json.Unmarshal([]byte(serializedKalturaUserEntryFilter), &toSerialize)
	if errKalturaUserEntryFilter != nil {
		return []byte{}, errKalturaUserEntryFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaQuizUserEntryBaseFilter struct {
	value *KalturaQuizUserEntryBaseFilter
	isSet bool
}

func (v NullableKalturaQuizUserEntryBaseFilter) Get() *KalturaQuizUserEntryBaseFilter {
	return v.value
}

func (v *NullableKalturaQuizUserEntryBaseFilter) Set(val *KalturaQuizUserEntryBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaQuizUserEntryBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaQuizUserEntryBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaQuizUserEntryBaseFilter(val *KalturaQuizUserEntryBaseFilter) *NullableKalturaQuizUserEntryBaseFilter {
	return &NullableKalturaQuizUserEntryBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaQuizUserEntryBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaQuizUserEntryBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


