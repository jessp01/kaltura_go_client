/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LiveStreamRegisterMediaServerRequest struct for LiveStreamRegisterMediaServerRequest
type LiveStreamRegisterMediaServerRequest struct {
	ApplicationName *string `json:"applicationName,omitempty"`
	EntryId string `json:"entryId"`
	Hostname string `json:"hostname"`
	LiveEntryStatus *int32 `json:"liveEntryStatus,omitempty"`
	MediaServerIndex string `json:"mediaServerIndex"`
	ShouldCreateRecordedEntry *bool `json:"shouldCreateRecordedEntry,omitempty"`
}

// NewLiveStreamRegisterMediaServerRequest instantiates a new LiveStreamRegisterMediaServerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLiveStreamRegisterMediaServerRequest(entryId string, hostname string, mediaServerIndex string) *LiveStreamRegisterMediaServerRequest {
	this := LiveStreamRegisterMediaServerRequest{}
	this.EntryId = entryId
	this.Hostname = hostname
	this.MediaServerIndex = mediaServerIndex
	var shouldCreateRecordedEntry bool = true
	this.ShouldCreateRecordedEntry = &shouldCreateRecordedEntry
	return &this
}

// NewLiveStreamRegisterMediaServerRequestWithDefaults instantiates a new LiveStreamRegisterMediaServerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLiveStreamRegisterMediaServerRequestWithDefaults() *LiveStreamRegisterMediaServerRequest {
	this := LiveStreamRegisterMediaServerRequest{}
	var shouldCreateRecordedEntry bool = true
	this.ShouldCreateRecordedEntry = &shouldCreateRecordedEntry
	return &this
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *LiveStreamRegisterMediaServerRequest) GetApplicationName() string {
	if o == nil || o.ApplicationName == nil {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamRegisterMediaServerRequest) GetApplicationNameOk() (*string, bool) {
	if o == nil || o.ApplicationName == nil {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *LiveStreamRegisterMediaServerRequest) HasApplicationName() bool {
	if o != nil && o.ApplicationName != nil {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *LiveStreamRegisterMediaServerRequest) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetEntryId returns the EntryId field value
func (o *LiveStreamRegisterMediaServerRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *LiveStreamRegisterMediaServerRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *LiveStreamRegisterMediaServerRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetHostname returns the Hostname field value
func (o *LiveStreamRegisterMediaServerRequest) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *LiveStreamRegisterMediaServerRequest) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *LiveStreamRegisterMediaServerRequest) SetHostname(v string) {
	o.Hostname = v
}

// GetLiveEntryStatus returns the LiveEntryStatus field value if set, zero value otherwise.
func (o *LiveStreamRegisterMediaServerRequest) GetLiveEntryStatus() int32 {
	if o == nil || o.LiveEntryStatus == nil {
		var ret int32
		return ret
	}
	return *o.LiveEntryStatus
}

// GetLiveEntryStatusOk returns a tuple with the LiveEntryStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamRegisterMediaServerRequest) GetLiveEntryStatusOk() (*int32, bool) {
	if o == nil || o.LiveEntryStatus == nil {
		return nil, false
	}
	return o.LiveEntryStatus, true
}

// HasLiveEntryStatus returns a boolean if a field has been set.
func (o *LiveStreamRegisterMediaServerRequest) HasLiveEntryStatus() bool {
	if o != nil && o.LiveEntryStatus != nil {
		return true
	}

	return false
}

// SetLiveEntryStatus gets a reference to the given int32 and assigns it to the LiveEntryStatus field.
func (o *LiveStreamRegisterMediaServerRequest) SetLiveEntryStatus(v int32) {
	o.LiveEntryStatus = &v
}

// GetMediaServerIndex returns the MediaServerIndex field value
func (o *LiveStreamRegisterMediaServerRequest) GetMediaServerIndex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediaServerIndex
}

// GetMediaServerIndexOk returns a tuple with the MediaServerIndex field value
// and a boolean to check if the value has been set.
func (o *LiveStreamRegisterMediaServerRequest) GetMediaServerIndexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaServerIndex, true
}

// SetMediaServerIndex sets field value
func (o *LiveStreamRegisterMediaServerRequest) SetMediaServerIndex(v string) {
	o.MediaServerIndex = v
}

// GetShouldCreateRecordedEntry returns the ShouldCreateRecordedEntry field value if set, zero value otherwise.
func (o *LiveStreamRegisterMediaServerRequest) GetShouldCreateRecordedEntry() bool {
	if o == nil || o.ShouldCreateRecordedEntry == nil {
		var ret bool
		return ret
	}
	return *o.ShouldCreateRecordedEntry
}

// GetShouldCreateRecordedEntryOk returns a tuple with the ShouldCreateRecordedEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LiveStreamRegisterMediaServerRequest) GetShouldCreateRecordedEntryOk() (*bool, bool) {
	if o == nil || o.ShouldCreateRecordedEntry == nil {
		return nil, false
	}
	return o.ShouldCreateRecordedEntry, true
}

// HasShouldCreateRecordedEntry returns a boolean if a field has been set.
func (o *LiveStreamRegisterMediaServerRequest) HasShouldCreateRecordedEntry() bool {
	if o != nil && o.ShouldCreateRecordedEntry != nil {
		return true
	}

	return false
}

// SetShouldCreateRecordedEntry gets a reference to the given bool and assigns it to the ShouldCreateRecordedEntry field.
func (o *LiveStreamRegisterMediaServerRequest) SetShouldCreateRecordedEntry(v bool) {
	o.ShouldCreateRecordedEntry = &v
}

func (o LiveStreamRegisterMediaServerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationName != nil {
		toSerialize["applicationName"] = o.ApplicationName
	}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if true {
		toSerialize["hostname"] = o.Hostname
	}
	if o.LiveEntryStatus != nil {
		toSerialize["liveEntryStatus"] = o.LiveEntryStatus
	}
	if true {
		toSerialize["mediaServerIndex"] = o.MediaServerIndex
	}
	if o.ShouldCreateRecordedEntry != nil {
		toSerialize["shouldCreateRecordedEntry"] = o.ShouldCreateRecordedEntry
	}
	return json.Marshal(toSerialize)
}

type NullableLiveStreamRegisterMediaServerRequest struct {
	value *LiveStreamRegisterMediaServerRequest
	isSet bool
}

func (v NullableLiveStreamRegisterMediaServerRequest) Get() *LiveStreamRegisterMediaServerRequest {
	return v.value
}

func (v *NullableLiveStreamRegisterMediaServerRequest) Set(val *LiveStreamRegisterMediaServerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLiveStreamRegisterMediaServerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLiveStreamRegisterMediaServerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLiveStreamRegisterMediaServerRequest(val *LiveStreamRegisterMediaServerRequest) *NullableLiveStreamRegisterMediaServerRequest {
	return &NullableLiveStreamRegisterMediaServerRequest{value: val, isSet: true}
}

func (v NullableLiveStreamRegisterMediaServerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLiveStreamRegisterMediaServerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


