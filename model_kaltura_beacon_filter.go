/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBeaconFilter struct for KalturaBeaconFilter
type KalturaBeaconFilter struct {
	KalturaBeaconBaseFilter
}

// NewKalturaBeaconFilter instantiates a new KalturaBeaconFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBeaconFilter() *KalturaBeaconFilter {
	this := KalturaBeaconFilter{}
	return &this
}

// NewKalturaBeaconFilterWithDefaults instantiates a new KalturaBeaconFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBeaconFilterWithDefaults() *KalturaBeaconFilter {
	this := KalturaBeaconFilter{}
	return &this
}

func (o KalturaBeaconFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBeaconBaseFilter, errKalturaBeaconBaseFilter := json.Marshal(o.KalturaBeaconBaseFilter)
	if errKalturaBeaconBaseFilter != nil {
		return []byte{}, errKalturaBeaconBaseFilter
	}
	errKalturaBeaconBaseFilter = json.Unmarshal([]byte(serializedKalturaBeaconBaseFilter), &toSerialize)
	if errKalturaBeaconBaseFilter != nil {
		return []byte{}, errKalturaBeaconBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBeaconFilter struct {
	value *KalturaBeaconFilter
	isSet bool
}

func (v NullableKalturaBeaconFilter) Get() *KalturaBeaconFilter {
	return v.value
}

func (v *NullableKalturaBeaconFilter) Set(val *KalturaBeaconFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBeaconFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBeaconFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBeaconFilter(val *KalturaBeaconFilter) *NullableKalturaBeaconFilter {
	return &NullableKalturaBeaconFilter{value: val, isSet: true}
}

func (v NullableKalturaBeaconFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBeaconFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


