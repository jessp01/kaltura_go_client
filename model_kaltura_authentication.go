/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaAuthentication struct for KalturaAuthentication
type KalturaAuthentication struct {
	QrCode *string `json:"qrCode,omitempty"`
}

// NewKalturaAuthentication instantiates a new KalturaAuthentication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaAuthentication() *KalturaAuthentication {
	this := KalturaAuthentication{}
	return &this
}

// NewKalturaAuthenticationWithDefaults instantiates a new KalturaAuthentication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaAuthenticationWithDefaults() *KalturaAuthentication {
	this := KalturaAuthentication{}
	return &this
}

// GetQrCode returns the QrCode field value if set, zero value otherwise.
func (o *KalturaAuthentication) GetQrCode() string {
	if o == nil || o.QrCode == nil {
		var ret string
		return ret
	}
	return *o.QrCode
}

// GetQrCodeOk returns a tuple with the QrCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAuthentication) GetQrCodeOk() (*string, bool) {
	if o == nil || o.QrCode == nil {
		return nil, false
	}
	return o.QrCode, true
}

// HasQrCode returns a boolean if a field has been set.
func (o *KalturaAuthentication) HasQrCode() bool {
	if o != nil && o.QrCode != nil {
		return true
	}

	return false
}

// SetQrCode gets a reference to the given string and assigns it to the QrCode field.
func (o *KalturaAuthentication) SetQrCode(v string) {
	o.QrCode = &v
}

func (o KalturaAuthentication) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.QrCode != nil {
		toSerialize["qrCode"] = o.QrCode
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaAuthentication struct {
	value *KalturaAuthentication
	isSet bool
}

func (v NullableKalturaAuthentication) Get() *KalturaAuthentication {
	return v.value
}

func (v *NullableKalturaAuthentication) Set(val *KalturaAuthentication) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaAuthentication) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaAuthentication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaAuthentication(val *KalturaAuthentication) *NullableKalturaAuthentication {
	return &NullableKalturaAuthentication{value: val, isSet: true}
}

func (v NullableKalturaAuthentication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaAuthentication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


