/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchcontrolKillRequest struct for BatchcontrolKillRequest
type BatchcontrolKillRequest struct {
	AdminId int32 `json:"adminId"`
	BatchIndex int32 `json:"batchIndex"`
	Cause string `json:"cause"`
	WorkerId int32 `json:"workerId"`
}

// NewBatchcontrolKillRequest instantiates a new BatchcontrolKillRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchcontrolKillRequest(adminId int32, batchIndex int32, cause string, workerId int32) *BatchcontrolKillRequest {
	this := BatchcontrolKillRequest{}
	this.AdminId = adminId
	this.BatchIndex = batchIndex
	this.Cause = cause
	this.WorkerId = workerId
	return &this
}

// NewBatchcontrolKillRequestWithDefaults instantiates a new BatchcontrolKillRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchcontrolKillRequestWithDefaults() *BatchcontrolKillRequest {
	this := BatchcontrolKillRequest{}
	return &this
}

// GetAdminId returns the AdminId field value
func (o *BatchcontrolKillRequest) GetAdminId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AdminId
}

// GetAdminIdOk returns a tuple with the AdminId field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolKillRequest) GetAdminIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminId, true
}

// SetAdminId sets field value
func (o *BatchcontrolKillRequest) SetAdminId(v int32) {
	o.AdminId = v
}

// GetBatchIndex returns the BatchIndex field value
func (o *BatchcontrolKillRequest) GetBatchIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BatchIndex
}

// GetBatchIndexOk returns a tuple with the BatchIndex field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolKillRequest) GetBatchIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BatchIndex, true
}

// SetBatchIndex sets field value
func (o *BatchcontrolKillRequest) SetBatchIndex(v int32) {
	o.BatchIndex = v
}

// GetCause returns the Cause field value
func (o *BatchcontrolKillRequest) GetCause() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cause
}

// GetCauseOk returns a tuple with the Cause field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolKillRequest) GetCauseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cause, true
}

// SetCause sets field value
func (o *BatchcontrolKillRequest) SetCause(v string) {
	o.Cause = v
}

// GetWorkerId returns the WorkerId field value
func (o *BatchcontrolKillRequest) GetWorkerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolKillRequest) GetWorkerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkerId, true
}

// SetWorkerId sets field value
func (o *BatchcontrolKillRequest) SetWorkerId(v int32) {
	o.WorkerId = v
}

func (o BatchcontrolKillRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["adminId"] = o.AdminId
	}
	if true {
		toSerialize["batchIndex"] = o.BatchIndex
	}
	if true {
		toSerialize["cause"] = o.Cause
	}
	if true {
		toSerialize["workerId"] = o.WorkerId
	}
	return json.Marshal(toSerialize)
}

type NullableBatchcontrolKillRequest struct {
	value *BatchcontrolKillRequest
	isSet bool
}

func (v NullableBatchcontrolKillRequest) Get() *BatchcontrolKillRequest {
	return v.value
}

func (v *NullableBatchcontrolKillRequest) Set(val *BatchcontrolKillRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchcontrolKillRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchcontrolKillRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchcontrolKillRequest(val *BatchcontrolKillRequest) *NullableBatchcontrolKillRequest {
	return &NullableBatchcontrolKillRequest{value: val, isSet: true}
}

func (v NullableBatchcontrolKillRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchcontrolKillRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


