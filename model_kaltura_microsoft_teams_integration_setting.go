/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaMicrosoftTeamsIntegrationSetting struct for KalturaMicrosoftTeamsIntegrationSetting
type KalturaMicrosoftTeamsIntegrationSetting struct {
	KalturaIntegrationSetting
}

// NewKalturaMicrosoftTeamsIntegrationSetting instantiates a new KalturaMicrosoftTeamsIntegrationSetting object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaMicrosoftTeamsIntegrationSetting() *KalturaMicrosoftTeamsIntegrationSetting {
	this := KalturaMicrosoftTeamsIntegrationSetting{}
	return &this
}

// NewKalturaMicrosoftTeamsIntegrationSettingWithDefaults instantiates a new KalturaMicrosoftTeamsIntegrationSetting object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaMicrosoftTeamsIntegrationSettingWithDefaults() *KalturaMicrosoftTeamsIntegrationSetting {
	this := KalturaMicrosoftTeamsIntegrationSetting{}
	return &this
}

func (o KalturaMicrosoftTeamsIntegrationSetting) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaIntegrationSetting, errKalturaIntegrationSetting := json.Marshal(o.KalturaIntegrationSetting)
	if errKalturaIntegrationSetting != nil {
		return []byte{}, errKalturaIntegrationSetting
	}
	errKalturaIntegrationSetting = json.Unmarshal([]byte(serializedKalturaIntegrationSetting), &toSerialize)
	if errKalturaIntegrationSetting != nil {
		return []byte{}, errKalturaIntegrationSetting
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaMicrosoftTeamsIntegrationSetting struct {
	value *KalturaMicrosoftTeamsIntegrationSetting
	isSet bool
}

func (v NullableKalturaMicrosoftTeamsIntegrationSetting) Get() *KalturaMicrosoftTeamsIntegrationSetting {
	return v.value
}

func (v *NullableKalturaMicrosoftTeamsIntegrationSetting) Set(val *KalturaMicrosoftTeamsIntegrationSetting) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaMicrosoftTeamsIntegrationSetting) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaMicrosoftTeamsIntegrationSetting) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaMicrosoftTeamsIntegrationSetting(val *KalturaMicrosoftTeamsIntegrationSetting) *NullableKalturaMicrosoftTeamsIntegrationSetting {
	return &NullableKalturaMicrosoftTeamsIntegrationSetting{value: val, isSet: true}
}

func (v NullableKalturaMicrosoftTeamsIntegrationSetting) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaMicrosoftTeamsIntegrationSetting) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


