/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaObject `abstract`
type KalturaObject struct {
	RelatedObjects []KalturaListResponse `json:"relatedObjects,omitempty"`
}

// NewKalturaObject instantiates a new KalturaObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaObject() *KalturaObject {
	this := KalturaObject{}
	return &this
}

// NewKalturaObjectWithDefaults instantiates a new KalturaObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaObjectWithDefaults() *KalturaObject {
	this := KalturaObject{}
	return &this
}

// GetRelatedObjects returns the RelatedObjects field value if set, zero value otherwise.
func (o *KalturaObject) GetRelatedObjects() []KalturaListResponse {
	if o == nil || o.RelatedObjects == nil {
		var ret []KalturaListResponse
		return ret
	}
	return o.RelatedObjects
}

// GetRelatedObjectsOk returns a tuple with the RelatedObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaObject) GetRelatedObjectsOk() ([]KalturaListResponse, bool) {
	if o == nil || o.RelatedObjects == nil {
		return nil, false
	}
	return o.RelatedObjects, true
}

// HasRelatedObjects returns a boolean if a field has been set.
func (o *KalturaObject) HasRelatedObjects() bool {
	if o != nil && o.RelatedObjects != nil {
		return true
	}

	return false
}

// SetRelatedObjects gets a reference to the given []KalturaListResponse and assigns it to the RelatedObjects field.
func (o *KalturaObject) SetRelatedObjects(v []KalturaListResponse) {
	o.RelatedObjects = v
}

func (o KalturaObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RelatedObjects != nil {
		toSerialize["relatedObjects"] = o.RelatedObjects
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaObject struct {
	value *KalturaObject
	isSet bool
}

func (v NullableKalturaObject) Get() *KalturaObject {
	return v.value
}

func (v *NullableKalturaObject) Set(val *KalturaObject) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaObject) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaObject(val *KalturaObject) *NullableKalturaObject {
	return &NullableKalturaObject{value: val, isSet: true}
}

func (v NullableKalturaObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


