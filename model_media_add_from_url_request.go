/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MediaAddFromUrlRequest struct for MediaAddFromUrlRequest
type MediaAddFromUrlRequest struct {
	MediaEntry KalturaMediaEntry `json:"mediaEntry"`
	Url string `json:"url"`
}

// NewMediaAddFromUrlRequest instantiates a new MediaAddFromUrlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaAddFromUrlRequest(mediaEntry KalturaMediaEntry, url string) *MediaAddFromUrlRequest {
	this := MediaAddFromUrlRequest{}
	this.MediaEntry = mediaEntry
	this.Url = url
	return &this
}

// NewMediaAddFromUrlRequestWithDefaults instantiates a new MediaAddFromUrlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaAddFromUrlRequestWithDefaults() *MediaAddFromUrlRequest {
	this := MediaAddFromUrlRequest{}
	return &this
}

// GetMediaEntry returns the MediaEntry field value
func (o *MediaAddFromUrlRequest) GetMediaEntry() KalturaMediaEntry {
	if o == nil {
		var ret KalturaMediaEntry
		return ret
	}

	return o.MediaEntry
}

// GetMediaEntryOk returns a tuple with the MediaEntry field value
// and a boolean to check if the value has been set.
func (o *MediaAddFromUrlRequest) GetMediaEntryOk() (*KalturaMediaEntry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaEntry, true
}

// SetMediaEntry sets field value
func (o *MediaAddFromUrlRequest) SetMediaEntry(v KalturaMediaEntry) {
	o.MediaEntry = v
}

// GetUrl returns the Url field value
func (o *MediaAddFromUrlRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *MediaAddFromUrlRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *MediaAddFromUrlRequest) SetUrl(v string) {
	o.Url = v
}

func (o MediaAddFromUrlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mediaEntry"] = o.MediaEntry
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableMediaAddFromUrlRequest struct {
	value *MediaAddFromUrlRequest
	isSet bool
}

func (v NullableMediaAddFromUrlRequest) Get() *MediaAddFromUrlRequest {
	return v.value
}

func (v *NullableMediaAddFromUrlRequest) Set(val *MediaAddFromUrlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaAddFromUrlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaAddFromUrlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaAddFromUrlRequest(val *MediaAddFromUrlRequest) *NullableMediaAddFromUrlRequest {
	return &NullableMediaAddFromUrlRequest{value: val, isSet: true}
}

func (v NullableMediaAddFromUrlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaAddFromUrlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


