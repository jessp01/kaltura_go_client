/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPlaylistFilter struct for KalturaPlaylistFilter
type KalturaPlaylistFilter struct {
	KalturaPlaylistBaseFilter
}

// NewKalturaPlaylistFilter instantiates a new KalturaPlaylistFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPlaylistFilter() *KalturaPlaylistFilter {
	this := KalturaPlaylistFilter{}
	return &this
}

// NewKalturaPlaylistFilterWithDefaults instantiates a new KalturaPlaylistFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPlaylistFilterWithDefaults() *KalturaPlaylistFilter {
	this := KalturaPlaylistFilter{}
	return &this
}

func (o KalturaPlaylistFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaPlaylistBaseFilter, errKalturaPlaylistBaseFilter := json.Marshal(o.KalturaPlaylistBaseFilter)
	if errKalturaPlaylistBaseFilter != nil {
		return []byte{}, errKalturaPlaylistBaseFilter
	}
	errKalturaPlaylistBaseFilter = json.Unmarshal([]byte(serializedKalturaPlaylistBaseFilter), &toSerialize)
	if errKalturaPlaylistBaseFilter != nil {
		return []byte{}, errKalturaPlaylistBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPlaylistFilter struct {
	value *KalturaPlaylistFilter
	isSet bool
}

func (v NullableKalturaPlaylistFilter) Get() *KalturaPlaylistFilter {
	return v.value
}

func (v *NullableKalturaPlaylistFilter) Set(val *KalturaPlaylistFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPlaylistFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPlaylistFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPlaylistFilter(val *KalturaPlaylistFilter) *NullableKalturaPlaylistFilter {
	return &NullableKalturaPlaylistFilter{value: val, isSet: true}
}

func (v NullableKalturaPlaylistFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPlaylistFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


