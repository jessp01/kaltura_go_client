/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBulkUploadFilter struct for KalturaBulkUploadFilter
type KalturaBulkUploadFilter struct {
	KalturaBulkUploadBaseFilter
}

// NewKalturaBulkUploadFilter instantiates a new KalturaBulkUploadFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBulkUploadFilter() *KalturaBulkUploadFilter {
	this := KalturaBulkUploadFilter{}
	return &this
}

// NewKalturaBulkUploadFilterWithDefaults instantiates a new KalturaBulkUploadFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBulkUploadFilterWithDefaults() *KalturaBulkUploadFilter {
	this := KalturaBulkUploadFilter{}
	return &this
}

func (o KalturaBulkUploadFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBulkUploadBaseFilter, errKalturaBulkUploadBaseFilter := json.Marshal(o.KalturaBulkUploadBaseFilter)
	if errKalturaBulkUploadBaseFilter != nil {
		return []byte{}, errKalturaBulkUploadBaseFilter
	}
	errKalturaBulkUploadBaseFilter = json.Unmarshal([]byte(serializedKalturaBulkUploadBaseFilter), &toSerialize)
	if errKalturaBulkUploadBaseFilter != nil {
		return []byte{}, errKalturaBulkUploadBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBulkUploadFilter struct {
	value *KalturaBulkUploadFilter
	isSet bool
}

func (v NullableKalturaBulkUploadFilter) Get() *KalturaBulkUploadFilter {
	return v.value
}

func (v *NullableKalturaBulkUploadFilter) Set(val *KalturaBulkUploadFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBulkUploadFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBulkUploadFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBulkUploadFilter(val *KalturaBulkUploadFilter) *NullableKalturaBulkUploadFilter {
	return &NullableKalturaBulkUploadFilter{value: val, isSet: true}
}

func (v NullableKalturaBulkUploadFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBulkUploadFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


