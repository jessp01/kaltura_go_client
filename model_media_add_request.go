/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MediaAddRequest struct for MediaAddRequest
type MediaAddRequest struct {
	Entry KalturaMediaEntry `json:"entry"`
}

// NewMediaAddRequest instantiates a new MediaAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaAddRequest(entry KalturaMediaEntry) *MediaAddRequest {
	this := MediaAddRequest{}
	this.Entry = entry
	return &this
}

// NewMediaAddRequestWithDefaults instantiates a new MediaAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaAddRequestWithDefaults() *MediaAddRequest {
	this := MediaAddRequest{}
	return &this
}

// GetEntry returns the Entry field value
func (o *MediaAddRequest) GetEntry() KalturaMediaEntry {
	if o == nil {
		var ret KalturaMediaEntry
		return ret
	}

	return o.Entry
}

// GetEntryOk returns a tuple with the Entry field value
// and a boolean to check if the value has been set.
func (o *MediaAddRequest) GetEntryOk() (*KalturaMediaEntry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entry, true
}

// SetEntry sets field value
func (o *MediaAddRequest) SetEntry(v KalturaMediaEntry) {
	o.Entry = v
}

func (o MediaAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entry"] = o.Entry
	}
	return json.Marshal(toSerialize)
}

type NullableMediaAddRequest struct {
	value *MediaAddRequest
	isSet bool
}

func (v NullableMediaAddRequest) Get() *MediaAddRequest {
	return v.value
}

func (v *NullableMediaAddRequest) Set(val *MediaAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaAddRequest(val *MediaAddRequest) *NullableMediaAddRequest {
	return &NullableMediaAddRequest{value: val, isSet: true}
}

func (v NullableMediaAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


