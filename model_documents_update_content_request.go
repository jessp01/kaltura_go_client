/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DocumentsUpdateContentRequest struct for DocumentsUpdateContentRequest
type DocumentsUpdateContentRequest struct {
	ConversionProfileId *int32 `json:"conversionProfileId,omitempty"`
	EntryId string `json:"entryId"`
	Resource KalturaResource `json:"resource"`
}

// NewDocumentsUpdateContentRequest instantiates a new DocumentsUpdateContentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDocumentsUpdateContentRequest(entryId string, resource KalturaResource) *DocumentsUpdateContentRequest {
	this := DocumentsUpdateContentRequest{}
	this.EntryId = entryId
	this.Resource = resource
	return &this
}

// NewDocumentsUpdateContentRequestWithDefaults instantiates a new DocumentsUpdateContentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDocumentsUpdateContentRequestWithDefaults() *DocumentsUpdateContentRequest {
	this := DocumentsUpdateContentRequest{}
	return &this
}

// GetConversionProfileId returns the ConversionProfileId field value if set, zero value otherwise.
func (o *DocumentsUpdateContentRequest) GetConversionProfileId() int32 {
	if o == nil || o.ConversionProfileId == nil {
		var ret int32
		return ret
	}
	return *o.ConversionProfileId
}

// GetConversionProfileIdOk returns a tuple with the ConversionProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DocumentsUpdateContentRequest) GetConversionProfileIdOk() (*int32, bool) {
	if o == nil || o.ConversionProfileId == nil {
		return nil, false
	}
	return o.ConversionProfileId, true
}

// HasConversionProfileId returns a boolean if a field has been set.
func (o *DocumentsUpdateContentRequest) HasConversionProfileId() bool {
	if o != nil && o.ConversionProfileId != nil {
		return true
	}

	return false
}

// SetConversionProfileId gets a reference to the given int32 and assigns it to the ConversionProfileId field.
func (o *DocumentsUpdateContentRequest) SetConversionProfileId(v int32) {
	o.ConversionProfileId = &v
}

// GetEntryId returns the EntryId field value
func (o *DocumentsUpdateContentRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *DocumentsUpdateContentRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *DocumentsUpdateContentRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetResource returns the Resource field value
func (o *DocumentsUpdateContentRequest) GetResource() KalturaResource {
	if o == nil {
		var ret KalturaResource
		return ret
	}

	return o.Resource
}

// GetResourceOk returns a tuple with the Resource field value
// and a boolean to check if the value has been set.
func (o *DocumentsUpdateContentRequest) GetResourceOk() (*KalturaResource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Resource, true
}

// SetResource sets field value
func (o *DocumentsUpdateContentRequest) SetResource(v KalturaResource) {
	o.Resource = v
}

func (o DocumentsUpdateContentRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConversionProfileId != nil {
		toSerialize["conversionProfileId"] = o.ConversionProfileId
	}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if true {
		toSerialize["resource"] = o.Resource
	}
	return json.Marshal(toSerialize)
}

type NullableDocumentsUpdateContentRequest struct {
	value *DocumentsUpdateContentRequest
	isSet bool
}

func (v NullableDocumentsUpdateContentRequest) Get() *DocumentsUpdateContentRequest {
	return v.value
}

func (v *NullableDocumentsUpdateContentRequest) Set(val *DocumentsUpdateContentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDocumentsUpdateContentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDocumentsUpdateContentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDocumentsUpdateContentRequest(val *DocumentsUpdateContentRequest) *NullableDocumentsUpdateContentRequest {
	return &NullableDocumentsUpdateContentRequest{value: val, isSet: true}
}

func (v NullableDocumentsUpdateContentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDocumentsUpdateContentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


