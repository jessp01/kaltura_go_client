/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaStorageExportJobData struct for KalturaStorageExportJobData
type KalturaStorageExportJobData struct {
	KalturaStorageJobData
}

// NewKalturaStorageExportJobData instantiates a new KalturaStorageExportJobData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaStorageExportJobData() *KalturaStorageExportJobData {
	this := KalturaStorageExportJobData{}
	return &this
}

// NewKalturaStorageExportJobDataWithDefaults instantiates a new KalturaStorageExportJobData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaStorageExportJobDataWithDefaults() *KalturaStorageExportJobData {
	this := KalturaStorageExportJobData{}
	return &this
}

func (o KalturaStorageExportJobData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaStorageJobData, errKalturaStorageJobData := json.Marshal(o.KalturaStorageJobData)
	if errKalturaStorageJobData != nil {
		return []byte{}, errKalturaStorageJobData
	}
	errKalturaStorageJobData = json.Unmarshal([]byte(serializedKalturaStorageJobData), &toSerialize)
	if errKalturaStorageJobData != nil {
		return []byte{}, errKalturaStorageJobData
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaStorageExportJobData struct {
	value *KalturaStorageExportJobData
	isSet bool
}

func (v NullableKalturaStorageExportJobData) Get() *KalturaStorageExportJobData {
	return v.value
}

func (v *NullableKalturaStorageExportJobData) Set(val *KalturaStorageExportJobData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaStorageExportJobData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaStorageExportJobData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaStorageExportJobData(val *KalturaStorageExportJobData) *NullableKalturaStorageExportJobData {
	return &NullableKalturaStorageExportJobData{value: val, isSet: true}
}

func (v NullableKalturaStorageExportJobData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaStorageExportJobData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


