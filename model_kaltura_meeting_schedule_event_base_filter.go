/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaMeetingScheduleEventBaseFilter `abstract`
type KalturaMeetingScheduleEventBaseFilter struct {
	KalturaEntryScheduleEventFilter
}

// NewKalturaMeetingScheduleEventBaseFilter instantiates a new KalturaMeetingScheduleEventBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaMeetingScheduleEventBaseFilter() *KalturaMeetingScheduleEventBaseFilter {
	this := KalturaMeetingScheduleEventBaseFilter{}
	return &this
}

// NewKalturaMeetingScheduleEventBaseFilterWithDefaults instantiates a new KalturaMeetingScheduleEventBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaMeetingScheduleEventBaseFilterWithDefaults() *KalturaMeetingScheduleEventBaseFilter {
	this := KalturaMeetingScheduleEventBaseFilter{}
	return &this
}

func (o KalturaMeetingScheduleEventBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaEntryScheduleEventFilter, errKalturaEntryScheduleEventFilter := json.Marshal(o.KalturaEntryScheduleEventFilter)
	if errKalturaEntryScheduleEventFilter != nil {
		return []byte{}, errKalturaEntryScheduleEventFilter
	}
	errKalturaEntryScheduleEventFilter = json.Unmarshal([]byte(serializedKalturaEntryScheduleEventFilter), &toSerialize)
	if errKalturaEntryScheduleEventFilter != nil {
		return []byte{}, errKalturaEntryScheduleEventFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaMeetingScheduleEventBaseFilter struct {
	value *KalturaMeetingScheduleEventBaseFilter
	isSet bool
}

func (v NullableKalturaMeetingScheduleEventBaseFilter) Get() *KalturaMeetingScheduleEventBaseFilter {
	return v.value
}

func (v *NullableKalturaMeetingScheduleEventBaseFilter) Set(val *KalturaMeetingScheduleEventBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaMeetingScheduleEventBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaMeetingScheduleEventBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaMeetingScheduleEventBaseFilter(val *KalturaMeetingScheduleEventBaseFilter) *NullableKalturaMeetingScheduleEventBaseFilter {
	return &NullableKalturaMeetingScheduleEventBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaMeetingScheduleEventBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaMeetingScheduleEventBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


