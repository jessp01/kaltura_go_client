/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaCategoryUserFilter struct for KalturaCategoryUserFilter
type KalturaCategoryUserFilter struct {
	KalturaCategoryUserBaseFilter
}

// NewKalturaCategoryUserFilter instantiates a new KalturaCategoryUserFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaCategoryUserFilter() *KalturaCategoryUserFilter {
	this := KalturaCategoryUserFilter{}
	return &this
}

// NewKalturaCategoryUserFilterWithDefaults instantiates a new KalturaCategoryUserFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaCategoryUserFilterWithDefaults() *KalturaCategoryUserFilter {
	this := KalturaCategoryUserFilter{}
	return &this
}

func (o KalturaCategoryUserFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaCategoryUserBaseFilter, errKalturaCategoryUserBaseFilter := json.Marshal(o.KalturaCategoryUserBaseFilter)
	if errKalturaCategoryUserBaseFilter != nil {
		return []byte{}, errKalturaCategoryUserBaseFilter
	}
	errKalturaCategoryUserBaseFilter = json.Unmarshal([]byte(serializedKalturaCategoryUserBaseFilter), &toSerialize)
	if errKalturaCategoryUserBaseFilter != nil {
		return []byte{}, errKalturaCategoryUserBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaCategoryUserFilter struct {
	value *KalturaCategoryUserFilter
	isSet bool
}

func (v NullableKalturaCategoryUserFilter) Get() *KalturaCategoryUserFilter {
	return v.value
}

func (v *NullableKalturaCategoryUserFilter) Set(val *KalturaCategoryUserFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaCategoryUserFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaCategoryUserFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaCategoryUserFilter(val *KalturaCategoryUserFilter) *NullableKalturaCategoryUserFilter {
	return &NullableKalturaCategoryUserFilter{value: val, isSet: true}
}

func (v NullableKalturaCategoryUserFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaCategoryUserFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


