/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GroupUserAddRequest struct for GroupUserAddRequest
type GroupUserAddRequest struct {
	GroupUser KalturaGroupUser `json:"groupUser"`
}

// NewGroupUserAddRequest instantiates a new GroupUserAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupUserAddRequest(groupUser KalturaGroupUser) *GroupUserAddRequest {
	this := GroupUserAddRequest{}
	this.GroupUser = groupUser
	return &this
}

// NewGroupUserAddRequestWithDefaults instantiates a new GroupUserAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupUserAddRequestWithDefaults() *GroupUserAddRequest {
	this := GroupUserAddRequest{}
	return &this
}

// GetGroupUser returns the GroupUser field value
func (o *GroupUserAddRequest) GetGroupUser() KalturaGroupUser {
	if o == nil {
		var ret KalturaGroupUser
		return ret
	}

	return o.GroupUser
}

// GetGroupUserOk returns a tuple with the GroupUser field value
// and a boolean to check if the value has been set.
func (o *GroupUserAddRequest) GetGroupUserOk() (*KalturaGroupUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupUser, true
}

// SetGroupUser sets field value
func (o *GroupUserAddRequest) SetGroupUser(v KalturaGroupUser) {
	o.GroupUser = v
}

func (o GroupUserAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["groupUser"] = o.GroupUser
	}
	return json.Marshal(toSerialize)
}

type NullableGroupUserAddRequest struct {
	value *GroupUserAddRequest
	isSet bool
}

func (v NullableGroupUserAddRequest) Get() *GroupUserAddRequest {
	return v.value
}

func (v *NullableGroupUserAddRequest) Set(val *GroupUserAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupUserAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupUserAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupUserAddRequest(val *GroupUserAddRequest) *NullableGroupUserAddRequest {
	return &NullableGroupUserAddRequest{value: val, isSet: true}
}

func (v NullableGroupUserAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupUserAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


