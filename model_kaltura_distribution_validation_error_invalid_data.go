/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaDistributionValidationErrorInvalidData struct for KalturaDistributionValidationErrorInvalidData
type KalturaDistributionValidationErrorInvalidData struct {
	KalturaDistributionValidationError
}

// NewKalturaDistributionValidationErrorInvalidData instantiates a new KalturaDistributionValidationErrorInvalidData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaDistributionValidationErrorInvalidData() *KalturaDistributionValidationErrorInvalidData {
	this := KalturaDistributionValidationErrorInvalidData{}
	return &this
}

// NewKalturaDistributionValidationErrorInvalidDataWithDefaults instantiates a new KalturaDistributionValidationErrorInvalidData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaDistributionValidationErrorInvalidDataWithDefaults() *KalturaDistributionValidationErrorInvalidData {
	this := KalturaDistributionValidationErrorInvalidData{}
	return &this
}

func (o KalturaDistributionValidationErrorInvalidData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaDistributionValidationError, errKalturaDistributionValidationError := json.Marshal(o.KalturaDistributionValidationError)
	if errKalturaDistributionValidationError != nil {
		return []byte{}, errKalturaDistributionValidationError
	}
	errKalturaDistributionValidationError = json.Unmarshal([]byte(serializedKalturaDistributionValidationError), &toSerialize)
	if errKalturaDistributionValidationError != nil {
		return []byte{}, errKalturaDistributionValidationError
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaDistributionValidationErrorInvalidData struct {
	value *KalturaDistributionValidationErrorInvalidData
	isSet bool
}

func (v NullableKalturaDistributionValidationErrorInvalidData) Get() *KalturaDistributionValidationErrorInvalidData {
	return v.value
}

func (v *NullableKalturaDistributionValidationErrorInvalidData) Set(val *KalturaDistributionValidationErrorInvalidData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaDistributionValidationErrorInvalidData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaDistributionValidationErrorInvalidData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaDistributionValidationErrorInvalidData(val *KalturaDistributionValidationErrorInvalidData) *NullableKalturaDistributionValidationErrorInvalidData {
	return &NullableKalturaDistributionValidationErrorInvalidData{value: val, isSet: true}
}

func (v NullableKalturaDistributionValidationErrorInvalidData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaDistributionValidationErrorInvalidData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


