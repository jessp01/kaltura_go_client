/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPermissionLevelUserEntry struct for KalturaPermissionLevelUserEntry
type KalturaPermissionLevelUserEntry struct {
	KalturaUserEntry
}

// NewKalturaPermissionLevelUserEntry instantiates a new KalturaPermissionLevelUserEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPermissionLevelUserEntry() *KalturaPermissionLevelUserEntry {
	this := KalturaPermissionLevelUserEntry{}
	return &this
}

// NewKalturaPermissionLevelUserEntryWithDefaults instantiates a new KalturaPermissionLevelUserEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPermissionLevelUserEntryWithDefaults() *KalturaPermissionLevelUserEntry {
	this := KalturaPermissionLevelUserEntry{}
	return &this
}

func (o KalturaPermissionLevelUserEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaUserEntry, errKalturaUserEntry := json.Marshal(o.KalturaUserEntry)
	if errKalturaUserEntry != nil {
		return []byte{}, errKalturaUserEntry
	}
	errKalturaUserEntry = json.Unmarshal([]byte(serializedKalturaUserEntry), &toSerialize)
	if errKalturaUserEntry != nil {
		return []byte{}, errKalturaUserEntry
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPermissionLevelUserEntry struct {
	value *KalturaPermissionLevelUserEntry
	isSet bool
}

func (v NullableKalturaPermissionLevelUserEntry) Get() *KalturaPermissionLevelUserEntry {
	return v.value
}

func (v *NullableKalturaPermissionLevelUserEntry) Set(val *KalturaPermissionLevelUserEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPermissionLevelUserEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPermissionLevelUserEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPermissionLevelUserEntry(val *KalturaPermissionLevelUserEntry) *NullableKalturaPermissionLevelUserEntry {
	return &NullableKalturaPermissionLevelUserEntry{value: val, isSet: true}
}

func (v NullableKalturaPermissionLevelUserEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPermissionLevelUserEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


