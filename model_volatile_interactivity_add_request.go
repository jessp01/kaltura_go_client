/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VolatileInteractivityAddRequest struct for VolatileInteractivityAddRequest
type VolatileInteractivityAddRequest struct {
	EntryId string `json:"entryId"`
	KalturaVolatileInteractivity KalturaVolatileInteractivity `json:"kalturaVolatileInteractivity"`
}

// NewVolatileInteractivityAddRequest instantiates a new VolatileInteractivityAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolatileInteractivityAddRequest(entryId string, kalturaVolatileInteractivity KalturaVolatileInteractivity) *VolatileInteractivityAddRequest {
	this := VolatileInteractivityAddRequest{}
	this.EntryId = entryId
	this.KalturaVolatileInteractivity = kalturaVolatileInteractivity
	return &this
}

// NewVolatileInteractivityAddRequestWithDefaults instantiates a new VolatileInteractivityAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolatileInteractivityAddRequestWithDefaults() *VolatileInteractivityAddRequest {
	this := VolatileInteractivityAddRequest{}
	return &this
}

// GetEntryId returns the EntryId field value
func (o *VolatileInteractivityAddRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *VolatileInteractivityAddRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *VolatileInteractivityAddRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetKalturaVolatileInteractivity returns the KalturaVolatileInteractivity field value
func (o *VolatileInteractivityAddRequest) GetKalturaVolatileInteractivity() KalturaVolatileInteractivity {
	if o == nil {
		var ret KalturaVolatileInteractivity
		return ret
	}

	return o.KalturaVolatileInteractivity
}

// GetKalturaVolatileInteractivityOk returns a tuple with the KalturaVolatileInteractivity field value
// and a boolean to check if the value has been set.
func (o *VolatileInteractivityAddRequest) GetKalturaVolatileInteractivityOk() (*KalturaVolatileInteractivity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KalturaVolatileInteractivity, true
}

// SetKalturaVolatileInteractivity sets field value
func (o *VolatileInteractivityAddRequest) SetKalturaVolatileInteractivity(v KalturaVolatileInteractivity) {
	o.KalturaVolatileInteractivity = v
}

func (o VolatileInteractivityAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if true {
		toSerialize["kalturaVolatileInteractivity"] = o.KalturaVolatileInteractivity
	}
	return json.Marshal(toSerialize)
}

type NullableVolatileInteractivityAddRequest struct {
	value *VolatileInteractivityAddRequest
	isSet bool
}

func (v NullableVolatileInteractivityAddRequest) Get() *VolatileInteractivityAddRequest {
	return v.value
}

func (v *NullableVolatileInteractivityAddRequest) Set(val *VolatileInteractivityAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVolatileInteractivityAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVolatileInteractivityAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolatileInteractivityAddRequest(val *VolatileInteractivityAddRequest) *NullableVolatileInteractivityAddRequest {
	return &NullableVolatileInteractivityAddRequest{value: val, isSet: true}
}

func (v NullableVolatileInteractivityAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolatileInteractivityAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


