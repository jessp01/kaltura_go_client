/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaRemoteStorageResources Used to ingest media that is available on remote server and accessible using the supplied URL, the media file won't be downloaded but a file sync object of URL type will point to the media URL.
type KalturaRemoteStorageResources struct {
	KalturaContentResource
}

// NewKalturaRemoteStorageResources instantiates a new KalturaRemoteStorageResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaRemoteStorageResources() *KalturaRemoteStorageResources {
	this := KalturaRemoteStorageResources{}
	return &this
}

// NewKalturaRemoteStorageResourcesWithDefaults instantiates a new KalturaRemoteStorageResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaRemoteStorageResourcesWithDefaults() *KalturaRemoteStorageResources {
	this := KalturaRemoteStorageResources{}
	return &this
}

func (o KalturaRemoteStorageResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaContentResource, errKalturaContentResource := json.Marshal(o.KalturaContentResource)
	if errKalturaContentResource != nil {
		return []byte{}, errKalturaContentResource
	}
	errKalturaContentResource = json.Unmarshal([]byte(serializedKalturaContentResource), &toSerialize)
	if errKalturaContentResource != nil {
		return []byte{}, errKalturaContentResource
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaRemoteStorageResources struct {
	value *KalturaRemoteStorageResources
	isSet bool
}

func (v NullableKalturaRemoteStorageResources) Get() *KalturaRemoteStorageResources {
	return v.value
}

func (v *NullableKalturaRemoteStorageResources) Set(val *KalturaRemoteStorageResources) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaRemoteStorageResources) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaRemoteStorageResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaRemoteStorageResources(val *KalturaRemoteStorageResources) *NullableKalturaRemoteStorageResources {
	return &NullableKalturaRemoteStorageResources{value: val, isSet: true}
}

func (v NullableKalturaRemoteStorageResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaRemoteStorageResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


