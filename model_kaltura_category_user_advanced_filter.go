/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaCategoryUserAdvancedFilter struct for KalturaCategoryUserAdvancedFilter
type KalturaCategoryUserAdvancedFilter struct {
	KalturaSearchItem
}

// NewKalturaCategoryUserAdvancedFilter instantiates a new KalturaCategoryUserAdvancedFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaCategoryUserAdvancedFilter() *KalturaCategoryUserAdvancedFilter {
	this := KalturaCategoryUserAdvancedFilter{}
	return &this
}

// NewKalturaCategoryUserAdvancedFilterWithDefaults instantiates a new KalturaCategoryUserAdvancedFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaCategoryUserAdvancedFilterWithDefaults() *KalturaCategoryUserAdvancedFilter {
	this := KalturaCategoryUserAdvancedFilter{}
	return &this
}

func (o KalturaCategoryUserAdvancedFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaSearchItem, errKalturaSearchItem := json.Marshal(o.KalturaSearchItem)
	if errKalturaSearchItem != nil {
		return []byte{}, errKalturaSearchItem
	}
	errKalturaSearchItem = json.Unmarshal([]byte(serializedKalturaSearchItem), &toSerialize)
	if errKalturaSearchItem != nil {
		return []byte{}, errKalturaSearchItem
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaCategoryUserAdvancedFilter struct {
	value *KalturaCategoryUserAdvancedFilter
	isSet bool
}

func (v NullableKalturaCategoryUserAdvancedFilter) Get() *KalturaCategoryUserAdvancedFilter {
	return v.value
}

func (v *NullableKalturaCategoryUserAdvancedFilter) Set(val *KalturaCategoryUserAdvancedFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaCategoryUserAdvancedFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaCategoryUserAdvancedFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaCategoryUserAdvancedFilter(val *KalturaCategoryUserAdvancedFilter) *NullableKalturaCategoryUserAdvancedFilter {
	return &NullableKalturaCategoryUserAdvancedFilter{value: val, isSet: true}
}

func (v NullableKalturaCategoryUserAdvancedFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaCategoryUserAdvancedFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


