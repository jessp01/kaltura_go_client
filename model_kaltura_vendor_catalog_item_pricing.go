/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaVendorCatalogItemPricing struct for KalturaVendorCatalogItemPricing
type KalturaVendorCatalogItemPricing struct {
	// Enum Type: `KalturaVendorCatalogItemPriceFunction`
	PriceFunction *string `json:"priceFunction,omitempty"`
	PricePerUnit *float32 `json:"pricePerUnit,omitempty"`
}

// NewKalturaVendorCatalogItemPricing instantiates a new KalturaVendorCatalogItemPricing object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaVendorCatalogItemPricing() *KalturaVendorCatalogItemPricing {
	this := KalturaVendorCatalogItemPricing{}
	return &this
}

// NewKalturaVendorCatalogItemPricingWithDefaults instantiates a new KalturaVendorCatalogItemPricing object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaVendorCatalogItemPricingWithDefaults() *KalturaVendorCatalogItemPricing {
	this := KalturaVendorCatalogItemPricing{}
	return &this
}

// GetPriceFunction returns the PriceFunction field value if set, zero value otherwise.
func (o *KalturaVendorCatalogItemPricing) GetPriceFunction() string {
	if o == nil || o.PriceFunction == nil {
		var ret string
		return ret
	}
	return *o.PriceFunction
}

// GetPriceFunctionOk returns a tuple with the PriceFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVendorCatalogItemPricing) GetPriceFunctionOk() (*string, bool) {
	if o == nil || o.PriceFunction == nil {
		return nil, false
	}
	return o.PriceFunction, true
}

// HasPriceFunction returns a boolean if a field has been set.
func (o *KalturaVendorCatalogItemPricing) HasPriceFunction() bool {
	if o != nil && o.PriceFunction != nil {
		return true
	}

	return false
}

// SetPriceFunction gets a reference to the given string and assigns it to the PriceFunction field.
func (o *KalturaVendorCatalogItemPricing) SetPriceFunction(v string) {
	o.PriceFunction = &v
}

// GetPricePerUnit returns the PricePerUnit field value if set, zero value otherwise.
func (o *KalturaVendorCatalogItemPricing) GetPricePerUnit() float32 {
	if o == nil || o.PricePerUnit == nil {
		var ret float32
		return ret
	}
	return *o.PricePerUnit
}

// GetPricePerUnitOk returns a tuple with the PricePerUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaVendorCatalogItemPricing) GetPricePerUnitOk() (*float32, bool) {
	if o == nil || o.PricePerUnit == nil {
		return nil, false
	}
	return o.PricePerUnit, true
}

// HasPricePerUnit returns a boolean if a field has been set.
func (o *KalturaVendorCatalogItemPricing) HasPricePerUnit() bool {
	if o != nil && o.PricePerUnit != nil {
		return true
	}

	return false
}

// SetPricePerUnit gets a reference to the given float32 and assigns it to the PricePerUnit field.
func (o *KalturaVendorCatalogItemPricing) SetPricePerUnit(v float32) {
	o.PricePerUnit = &v
}

func (o KalturaVendorCatalogItemPricing) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PriceFunction != nil {
		toSerialize["priceFunction"] = o.PriceFunction
	}
	if o.PricePerUnit != nil {
		toSerialize["pricePerUnit"] = o.PricePerUnit
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaVendorCatalogItemPricing struct {
	value *KalturaVendorCatalogItemPricing
	isSet bool
}

func (v NullableKalturaVendorCatalogItemPricing) Get() *KalturaVendorCatalogItemPricing {
	return v.value
}

func (v *NullableKalturaVendorCatalogItemPricing) Set(val *KalturaVendorCatalogItemPricing) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaVendorCatalogItemPricing) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaVendorCatalogItemPricing) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaVendorCatalogItemPricing(val *KalturaVendorCatalogItemPricing) *NullableKalturaVendorCatalogItemPricing {
	return &NullableKalturaVendorCatalogItemPricing{value: val, isSet: true}
}

func (v NullableKalturaVendorCatalogItemPricing) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaVendorCatalogItemPricing) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


