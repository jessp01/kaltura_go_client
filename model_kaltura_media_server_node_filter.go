/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaMediaServerNodeFilter struct for KalturaMediaServerNodeFilter
type KalturaMediaServerNodeFilter struct {
	KalturaMediaServerNodeBaseFilter
}

// NewKalturaMediaServerNodeFilter instantiates a new KalturaMediaServerNodeFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaMediaServerNodeFilter() *KalturaMediaServerNodeFilter {
	this := KalturaMediaServerNodeFilter{}
	return &this
}

// NewKalturaMediaServerNodeFilterWithDefaults instantiates a new KalturaMediaServerNodeFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaMediaServerNodeFilterWithDefaults() *KalturaMediaServerNodeFilter {
	this := KalturaMediaServerNodeFilter{}
	return &this
}

func (o KalturaMediaServerNodeFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaMediaServerNodeBaseFilter, errKalturaMediaServerNodeBaseFilter := json.Marshal(o.KalturaMediaServerNodeBaseFilter)
	if errKalturaMediaServerNodeBaseFilter != nil {
		return []byte{}, errKalturaMediaServerNodeBaseFilter
	}
	errKalturaMediaServerNodeBaseFilter = json.Unmarshal([]byte(serializedKalturaMediaServerNodeBaseFilter), &toSerialize)
	if errKalturaMediaServerNodeBaseFilter != nil {
		return []byte{}, errKalturaMediaServerNodeBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaMediaServerNodeFilter struct {
	value *KalturaMediaServerNodeFilter
	isSet bool
}

func (v NullableKalturaMediaServerNodeFilter) Get() *KalturaMediaServerNodeFilter {
	return v.value
}

func (v *NullableKalturaMediaServerNodeFilter) Set(val *KalturaMediaServerNodeFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaMediaServerNodeFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaMediaServerNodeFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaMediaServerNodeFilter(val *KalturaMediaServerNodeFilter) *NullableKalturaMediaServerNodeFilter {
	return &NullableKalturaMediaServerNodeFilter{value: val, isSet: true}
}

func (v NullableKalturaMediaServerNodeFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaMediaServerNodeFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


