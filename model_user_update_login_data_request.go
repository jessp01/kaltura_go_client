/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserUpdateLoginDataRequest struct for UserUpdateLoginDataRequest
type UserUpdateLoginDataRequest struct {
	NewFirstName *string `json:"newFirstName,omitempty"`
	NewLastName *string `json:"newLastName,omitempty"`
	NewLoginId *string `json:"newLoginId,omitempty"`
	NewPassword *string `json:"newPassword,omitempty"`
	OldLoginId string `json:"oldLoginId"`
	Otp *string `json:"otp,omitempty"`
	Password string `json:"password"`
}

// NewUserUpdateLoginDataRequest instantiates a new UserUpdateLoginDataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserUpdateLoginDataRequest(oldLoginId string, password string) *UserUpdateLoginDataRequest {
	this := UserUpdateLoginDataRequest{}
	this.OldLoginId = oldLoginId
	this.Password = password
	return &this
}

// NewUserUpdateLoginDataRequestWithDefaults instantiates a new UserUpdateLoginDataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserUpdateLoginDataRequestWithDefaults() *UserUpdateLoginDataRequest {
	this := UserUpdateLoginDataRequest{}
	return &this
}

// GetNewFirstName returns the NewFirstName field value if set, zero value otherwise.
func (o *UserUpdateLoginDataRequest) GetNewFirstName() string {
	if o == nil || o.NewFirstName == nil {
		var ret string
		return ret
	}
	return *o.NewFirstName
}

// GetNewFirstNameOk returns a tuple with the NewFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateLoginDataRequest) GetNewFirstNameOk() (*string, bool) {
	if o == nil || o.NewFirstName == nil {
		return nil, false
	}
	return o.NewFirstName, true
}

// HasNewFirstName returns a boolean if a field has been set.
func (o *UserUpdateLoginDataRequest) HasNewFirstName() bool {
	if o != nil && o.NewFirstName != nil {
		return true
	}

	return false
}

// SetNewFirstName gets a reference to the given string and assigns it to the NewFirstName field.
func (o *UserUpdateLoginDataRequest) SetNewFirstName(v string) {
	o.NewFirstName = &v
}

// GetNewLastName returns the NewLastName field value if set, zero value otherwise.
func (o *UserUpdateLoginDataRequest) GetNewLastName() string {
	if o == nil || o.NewLastName == nil {
		var ret string
		return ret
	}
	return *o.NewLastName
}

// GetNewLastNameOk returns a tuple with the NewLastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateLoginDataRequest) GetNewLastNameOk() (*string, bool) {
	if o == nil || o.NewLastName == nil {
		return nil, false
	}
	return o.NewLastName, true
}

// HasNewLastName returns a boolean if a field has been set.
func (o *UserUpdateLoginDataRequest) HasNewLastName() bool {
	if o != nil && o.NewLastName != nil {
		return true
	}

	return false
}

// SetNewLastName gets a reference to the given string and assigns it to the NewLastName field.
func (o *UserUpdateLoginDataRequest) SetNewLastName(v string) {
	o.NewLastName = &v
}

// GetNewLoginId returns the NewLoginId field value if set, zero value otherwise.
func (o *UserUpdateLoginDataRequest) GetNewLoginId() string {
	if o == nil || o.NewLoginId == nil {
		var ret string
		return ret
	}
	return *o.NewLoginId
}

// GetNewLoginIdOk returns a tuple with the NewLoginId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateLoginDataRequest) GetNewLoginIdOk() (*string, bool) {
	if o == nil || o.NewLoginId == nil {
		return nil, false
	}
	return o.NewLoginId, true
}

// HasNewLoginId returns a boolean if a field has been set.
func (o *UserUpdateLoginDataRequest) HasNewLoginId() bool {
	if o != nil && o.NewLoginId != nil {
		return true
	}

	return false
}

// SetNewLoginId gets a reference to the given string and assigns it to the NewLoginId field.
func (o *UserUpdateLoginDataRequest) SetNewLoginId(v string) {
	o.NewLoginId = &v
}

// GetNewPassword returns the NewPassword field value if set, zero value otherwise.
func (o *UserUpdateLoginDataRequest) GetNewPassword() string {
	if o == nil || o.NewPassword == nil {
		var ret string
		return ret
	}
	return *o.NewPassword
}

// GetNewPasswordOk returns a tuple with the NewPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateLoginDataRequest) GetNewPasswordOk() (*string, bool) {
	if o == nil || o.NewPassword == nil {
		return nil, false
	}
	return o.NewPassword, true
}

// HasNewPassword returns a boolean if a field has been set.
func (o *UserUpdateLoginDataRequest) HasNewPassword() bool {
	if o != nil && o.NewPassword != nil {
		return true
	}

	return false
}

// SetNewPassword gets a reference to the given string and assigns it to the NewPassword field.
func (o *UserUpdateLoginDataRequest) SetNewPassword(v string) {
	o.NewPassword = &v
}

// GetOldLoginId returns the OldLoginId field value
func (o *UserUpdateLoginDataRequest) GetOldLoginId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OldLoginId
}

// GetOldLoginIdOk returns a tuple with the OldLoginId field value
// and a boolean to check if the value has been set.
func (o *UserUpdateLoginDataRequest) GetOldLoginIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OldLoginId, true
}

// SetOldLoginId sets field value
func (o *UserUpdateLoginDataRequest) SetOldLoginId(v string) {
	o.OldLoginId = v
}

// GetOtp returns the Otp field value if set, zero value otherwise.
func (o *UserUpdateLoginDataRequest) GetOtp() string {
	if o == nil || o.Otp == nil {
		var ret string
		return ret
	}
	return *o.Otp
}

// GetOtpOk returns a tuple with the Otp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateLoginDataRequest) GetOtpOk() (*string, bool) {
	if o == nil || o.Otp == nil {
		return nil, false
	}
	return o.Otp, true
}

// HasOtp returns a boolean if a field has been set.
func (o *UserUpdateLoginDataRequest) HasOtp() bool {
	if o != nil && o.Otp != nil {
		return true
	}

	return false
}

// SetOtp gets a reference to the given string and assigns it to the Otp field.
func (o *UserUpdateLoginDataRequest) SetOtp(v string) {
	o.Otp = &v
}

// GetPassword returns the Password field value
func (o *UserUpdateLoginDataRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *UserUpdateLoginDataRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *UserUpdateLoginDataRequest) SetPassword(v string) {
	o.Password = v
}

func (o UserUpdateLoginDataRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NewFirstName != nil {
		toSerialize["newFirstName"] = o.NewFirstName
	}
	if o.NewLastName != nil {
		toSerialize["newLastName"] = o.NewLastName
	}
	if o.NewLoginId != nil {
		toSerialize["newLoginId"] = o.NewLoginId
	}
	if o.NewPassword != nil {
		toSerialize["newPassword"] = o.NewPassword
	}
	if true {
		toSerialize["oldLoginId"] = o.OldLoginId
	}
	if o.Otp != nil {
		toSerialize["otp"] = o.Otp
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableUserUpdateLoginDataRequest struct {
	value *UserUpdateLoginDataRequest
	isSet bool
}

func (v NullableUserUpdateLoginDataRequest) Get() *UserUpdateLoginDataRequest {
	return v.value
}

func (v *NullableUserUpdateLoginDataRequest) Set(val *UserUpdateLoginDataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserUpdateLoginDataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserUpdateLoginDataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserUpdateLoginDataRequest(val *UserUpdateLoginDataRequest) *NullableUserUpdateLoginDataRequest {
	return &NullableUserUpdateLoginDataRequest{value: val, isSet: true}
}

func (v NullableUserUpdateLoginDataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserUpdateLoginDataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


