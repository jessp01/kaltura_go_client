/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBaseUser struct for KalturaBaseUser
type KalturaBaseUser struct {
	// Admin tags can be updated only by using an admin session
	AdminTags *string `json:"adminTags,omitempty"`
	AllowedPartnerIds *string `json:"allowedPartnerIds,omitempty"`
	AllowedPartnerPackages *string `json:"allowedPartnerPackages,omitempty"`
	City *string `json:"city,omitempty"`
	Country *string `json:"country,omitempty"`
	// `readOnly`  Creation date as Unix timestamp (In seconds)
	CreatedAt *int32 `json:"createdAt,omitempty"`
	// `readOnly`
	DeletedAt *int32 `json:"deletedAt,omitempty"`
	Description *string `json:"description,omitempty"`
	Email *string `json:"email,omitempty"`
	FullName *string `json:"fullName,omitempty"`
	Id *string `json:"id,omitempty"`
	IndexedPartnerDataInt *int32 `json:"indexedPartnerDataInt,omitempty"`
	IndexedPartnerDataString *string `json:"indexedPartnerDataString,omitempty"`
	// Enum Type: `KalturaLanguageCode`
	Language *string `json:"language,omitempty"`
	// `readOnly`
	LastLoginTime *int32 `json:"lastLoginTime,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	// Can be used to store various partner related data as a string
	PartnerData *string `json:"partnerData,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	ScreenName *string `json:"screenName,omitempty"`
	State *string `json:"state,omitempty"`
	// Enum Type: `KalturaUserStatus`
	Status *int32 `json:"status,omitempty"`
	// `readOnly`
	StatusUpdatedAt *int32 `json:"statusUpdatedAt,omitempty"`
	// `readOnly`
	StorageSize *int32 `json:"storageSize,omitempty"`
	Tags *string `json:"tags,omitempty"`
	ThumbnailUrl *string `json:"thumbnailUrl,omitempty"`
	// `readOnly`  Last update date as Unix timestamp (In seconds)
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
	// Enum Type: `KalturaUserMode`
	UserMode *int32 `json:"userMode,omitempty"`
	Zip *string `json:"zip,omitempty"`
}

// NewKalturaBaseUser instantiates a new KalturaBaseUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBaseUser() *KalturaBaseUser {
	this := KalturaBaseUser{}
	return &this
}

// NewKalturaBaseUserWithDefaults instantiates a new KalturaBaseUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBaseUserWithDefaults() *KalturaBaseUser {
	this := KalturaBaseUser{}
	return &this
}

// GetAdminTags returns the AdminTags field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetAdminTags() string {
	if o == nil || o.AdminTags == nil {
		var ret string
		return ret
	}
	return *o.AdminTags
}

// GetAdminTagsOk returns a tuple with the AdminTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetAdminTagsOk() (*string, bool) {
	if o == nil || o.AdminTags == nil {
		return nil, false
	}
	return o.AdminTags, true
}

// HasAdminTags returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasAdminTags() bool {
	if o != nil && o.AdminTags != nil {
		return true
	}

	return false
}

// SetAdminTags gets a reference to the given string and assigns it to the AdminTags field.
func (o *KalturaBaseUser) SetAdminTags(v string) {
	o.AdminTags = &v
}

// GetAllowedPartnerIds returns the AllowedPartnerIds field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetAllowedPartnerIds() string {
	if o == nil || o.AllowedPartnerIds == nil {
		var ret string
		return ret
	}
	return *o.AllowedPartnerIds
}

// GetAllowedPartnerIdsOk returns a tuple with the AllowedPartnerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetAllowedPartnerIdsOk() (*string, bool) {
	if o == nil || o.AllowedPartnerIds == nil {
		return nil, false
	}
	return o.AllowedPartnerIds, true
}

// HasAllowedPartnerIds returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasAllowedPartnerIds() bool {
	if o != nil && o.AllowedPartnerIds != nil {
		return true
	}

	return false
}

// SetAllowedPartnerIds gets a reference to the given string and assigns it to the AllowedPartnerIds field.
func (o *KalturaBaseUser) SetAllowedPartnerIds(v string) {
	o.AllowedPartnerIds = &v
}

// GetAllowedPartnerPackages returns the AllowedPartnerPackages field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetAllowedPartnerPackages() string {
	if o == nil || o.AllowedPartnerPackages == nil {
		var ret string
		return ret
	}
	return *o.AllowedPartnerPackages
}

// GetAllowedPartnerPackagesOk returns a tuple with the AllowedPartnerPackages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetAllowedPartnerPackagesOk() (*string, bool) {
	if o == nil || o.AllowedPartnerPackages == nil {
		return nil, false
	}
	return o.AllowedPartnerPackages, true
}

// HasAllowedPartnerPackages returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasAllowedPartnerPackages() bool {
	if o != nil && o.AllowedPartnerPackages != nil {
		return true
	}

	return false
}

// SetAllowedPartnerPackages gets a reference to the given string and assigns it to the AllowedPartnerPackages field.
func (o *KalturaBaseUser) SetAllowedPartnerPackages(v string) {
	o.AllowedPartnerPackages = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetCity() string {
	if o == nil || o.City == nil {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetCityOk() (*string, bool) {
	if o == nil || o.City == nil {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasCity() bool {
	if o != nil && o.City != nil {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *KalturaBaseUser) SetCity(v string) {
	o.City = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetCountry() string {
	if o == nil || o.Country == nil {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetCountryOk() (*string, bool) {
	if o == nil || o.Country == nil {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasCountry() bool {
	if o != nil && o.Country != nil {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *KalturaBaseUser) SetCountry(v string) {
	o.Country = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaBaseUser) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDeletedAt returns the DeletedAt field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetDeletedAt() int32 {
	if o == nil || o.DeletedAt == nil {
		var ret int32
		return ret
	}
	return *o.DeletedAt
}

// GetDeletedAtOk returns a tuple with the DeletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetDeletedAtOk() (*int32, bool) {
	if o == nil || o.DeletedAt == nil {
		return nil, false
	}
	return o.DeletedAt, true
}

// HasDeletedAt returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasDeletedAt() bool {
	if o != nil && o.DeletedAt != nil {
		return true
	}

	return false
}

// SetDeletedAt gets a reference to the given int32 and assigns it to the DeletedAt field.
func (o *KalturaBaseUser) SetDeletedAt(v int32) {
	o.DeletedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KalturaBaseUser) SetDescription(v string) {
	o.Description = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *KalturaBaseUser) SetEmail(v string) {
	o.Email = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetFullName() string {
	if o == nil || o.FullName == nil {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetFullNameOk() (*string, bool) {
	if o == nil || o.FullName == nil {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasFullName() bool {
	if o != nil && o.FullName != nil {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *KalturaBaseUser) SetFullName(v string) {
	o.FullName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KalturaBaseUser) SetId(v string) {
	o.Id = &v
}

// GetIndexedPartnerDataInt returns the IndexedPartnerDataInt field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetIndexedPartnerDataInt() int32 {
	if o == nil || o.IndexedPartnerDataInt == nil {
		var ret int32
		return ret
	}
	return *o.IndexedPartnerDataInt
}

// GetIndexedPartnerDataIntOk returns a tuple with the IndexedPartnerDataInt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetIndexedPartnerDataIntOk() (*int32, bool) {
	if o == nil || o.IndexedPartnerDataInt == nil {
		return nil, false
	}
	return o.IndexedPartnerDataInt, true
}

// HasIndexedPartnerDataInt returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasIndexedPartnerDataInt() bool {
	if o != nil && o.IndexedPartnerDataInt != nil {
		return true
	}

	return false
}

// SetIndexedPartnerDataInt gets a reference to the given int32 and assigns it to the IndexedPartnerDataInt field.
func (o *KalturaBaseUser) SetIndexedPartnerDataInt(v int32) {
	o.IndexedPartnerDataInt = &v
}

// GetIndexedPartnerDataString returns the IndexedPartnerDataString field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetIndexedPartnerDataString() string {
	if o == nil || o.IndexedPartnerDataString == nil {
		var ret string
		return ret
	}
	return *o.IndexedPartnerDataString
}

// GetIndexedPartnerDataStringOk returns a tuple with the IndexedPartnerDataString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetIndexedPartnerDataStringOk() (*string, bool) {
	if o == nil || o.IndexedPartnerDataString == nil {
		return nil, false
	}
	return o.IndexedPartnerDataString, true
}

// HasIndexedPartnerDataString returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasIndexedPartnerDataString() bool {
	if o != nil && o.IndexedPartnerDataString != nil {
		return true
	}

	return false
}

// SetIndexedPartnerDataString gets a reference to the given string and assigns it to the IndexedPartnerDataString field.
func (o *KalturaBaseUser) SetIndexedPartnerDataString(v string) {
	o.IndexedPartnerDataString = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *KalturaBaseUser) SetLanguage(v string) {
	o.Language = &v
}

// GetLastLoginTime returns the LastLoginTime field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetLastLoginTime() int32 {
	if o == nil || o.LastLoginTime == nil {
		var ret int32
		return ret
	}
	return *o.LastLoginTime
}

// GetLastLoginTimeOk returns a tuple with the LastLoginTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetLastLoginTimeOk() (*int32, bool) {
	if o == nil || o.LastLoginTime == nil {
		return nil, false
	}
	return o.LastLoginTime, true
}

// HasLastLoginTime returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasLastLoginTime() bool {
	if o != nil && o.LastLoginTime != nil {
		return true
	}

	return false
}

// SetLastLoginTime gets a reference to the given int32 and assigns it to the LastLoginTime field.
func (o *KalturaBaseUser) SetLastLoginTime(v int32) {
	o.LastLoginTime = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaBaseUser) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetPartnerData returns the PartnerData field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetPartnerData() string {
	if o == nil || o.PartnerData == nil {
		var ret string
		return ret
	}
	return *o.PartnerData
}

// GetPartnerDataOk returns a tuple with the PartnerData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetPartnerDataOk() (*string, bool) {
	if o == nil || o.PartnerData == nil {
		return nil, false
	}
	return o.PartnerData, true
}

// HasPartnerData returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasPartnerData() bool {
	if o != nil && o.PartnerData != nil {
		return true
	}

	return false
}

// SetPartnerData gets a reference to the given string and assigns it to the PartnerData field.
func (o *KalturaBaseUser) SetPartnerData(v string) {
	o.PartnerData = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaBaseUser) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetScreenName returns the ScreenName field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetScreenName() string {
	if o == nil || o.ScreenName == nil {
		var ret string
		return ret
	}
	return *o.ScreenName
}

// GetScreenNameOk returns a tuple with the ScreenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetScreenNameOk() (*string, bool) {
	if o == nil || o.ScreenName == nil {
		return nil, false
	}
	return o.ScreenName, true
}

// HasScreenName returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasScreenName() bool {
	if o != nil && o.ScreenName != nil {
		return true
	}

	return false
}

// SetScreenName gets a reference to the given string and assigns it to the ScreenName field.
func (o *KalturaBaseUser) SetScreenName(v string) {
	o.ScreenName = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *KalturaBaseUser) SetState(v string) {
	o.State = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KalturaBaseUser) SetStatus(v int32) {
	o.Status = &v
}

// GetStatusUpdatedAt returns the StatusUpdatedAt field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetStatusUpdatedAt() int32 {
	if o == nil || o.StatusUpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.StatusUpdatedAt
}

// GetStatusUpdatedAtOk returns a tuple with the StatusUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetStatusUpdatedAtOk() (*int32, bool) {
	if o == nil || o.StatusUpdatedAt == nil {
		return nil, false
	}
	return o.StatusUpdatedAt, true
}

// HasStatusUpdatedAt returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasStatusUpdatedAt() bool {
	if o != nil && o.StatusUpdatedAt != nil {
		return true
	}

	return false
}

// SetStatusUpdatedAt gets a reference to the given int32 and assigns it to the StatusUpdatedAt field.
func (o *KalturaBaseUser) SetStatusUpdatedAt(v int32) {
	o.StatusUpdatedAt = &v
}

// GetStorageSize returns the StorageSize field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetStorageSize() int32 {
	if o == nil || o.StorageSize == nil {
		var ret int32
		return ret
	}
	return *o.StorageSize
}

// GetStorageSizeOk returns a tuple with the StorageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetStorageSizeOk() (*int32, bool) {
	if o == nil || o.StorageSize == nil {
		return nil, false
	}
	return o.StorageSize, true
}

// HasStorageSize returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasStorageSize() bool {
	if o != nil && o.StorageSize != nil {
		return true
	}

	return false
}

// SetStorageSize gets a reference to the given int32 and assigns it to the StorageSize field.
func (o *KalturaBaseUser) SetStorageSize(v int32) {
	o.StorageSize = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *KalturaBaseUser) SetTags(v string) {
	o.Tags = &v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetThumbnailUrl() string {
	if o == nil || o.ThumbnailUrl == nil {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetThumbnailUrlOk() (*string, bool) {
	if o == nil || o.ThumbnailUrl == nil {
		return nil, false
	}
	return o.ThumbnailUrl, true
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasThumbnailUrl() bool {
	if o != nil && o.ThumbnailUrl != nil {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given string and assigns it to the ThumbnailUrl field.
func (o *KalturaBaseUser) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaBaseUser) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUserMode returns the UserMode field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetUserMode() int32 {
	if o == nil || o.UserMode == nil {
		var ret int32
		return ret
	}
	return *o.UserMode
}

// GetUserModeOk returns a tuple with the UserMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetUserModeOk() (*int32, bool) {
	if o == nil || o.UserMode == nil {
		return nil, false
	}
	return o.UserMode, true
}

// HasUserMode returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasUserMode() bool {
	if o != nil && o.UserMode != nil {
		return true
	}

	return false
}

// SetUserMode gets a reference to the given int32 and assigns it to the UserMode field.
func (o *KalturaBaseUser) SetUserMode(v int32) {
	o.UserMode = &v
}

// GetZip returns the Zip field value if set, zero value otherwise.
func (o *KalturaBaseUser) GetZip() string {
	if o == nil || o.Zip == nil {
		var ret string
		return ret
	}
	return *o.Zip
}

// GetZipOk returns a tuple with the Zip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBaseUser) GetZipOk() (*string, bool) {
	if o == nil || o.Zip == nil {
		return nil, false
	}
	return o.Zip, true
}

// HasZip returns a boolean if a field has been set.
func (o *KalturaBaseUser) HasZip() bool {
	if o != nil && o.Zip != nil {
		return true
	}

	return false
}

// SetZip gets a reference to the given string and assigns it to the Zip field.
func (o *KalturaBaseUser) SetZip(v string) {
	o.Zip = &v
}

func (o KalturaBaseUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdminTags != nil {
		toSerialize["adminTags"] = o.AdminTags
	}
	if o.AllowedPartnerIds != nil {
		toSerialize["allowedPartnerIds"] = o.AllowedPartnerIds
	}
	if o.AllowedPartnerPackages != nil {
		toSerialize["allowedPartnerPackages"] = o.AllowedPartnerPackages
	}
	if o.City != nil {
		toSerialize["city"] = o.City
	}
	if o.Country != nil {
		toSerialize["country"] = o.Country
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.DeletedAt != nil {
		toSerialize["deletedAt"] = o.DeletedAt
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.FullName != nil {
		toSerialize["fullName"] = o.FullName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IndexedPartnerDataInt != nil {
		toSerialize["indexedPartnerDataInt"] = o.IndexedPartnerDataInt
	}
	if o.IndexedPartnerDataString != nil {
		toSerialize["indexedPartnerDataString"] = o.IndexedPartnerDataString
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.LastLoginTime != nil {
		toSerialize["lastLoginTime"] = o.LastLoginTime
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.PartnerData != nil {
		toSerialize["partnerData"] = o.PartnerData
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.ScreenName != nil {
		toSerialize["screenName"] = o.ScreenName
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusUpdatedAt != nil {
		toSerialize["statusUpdatedAt"] = o.StatusUpdatedAt
	}
	if o.StorageSize != nil {
		toSerialize["storageSize"] = o.StorageSize
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.ThumbnailUrl != nil {
		toSerialize["thumbnailUrl"] = o.ThumbnailUrl
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.UserMode != nil {
		toSerialize["userMode"] = o.UserMode
	}
	if o.Zip != nil {
		toSerialize["zip"] = o.Zip
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBaseUser struct {
	value *KalturaBaseUser
	isSet bool
}

func (v NullableKalturaBaseUser) Get() *KalturaBaseUser {
	return v.value
}

func (v *NullableKalturaBaseUser) Set(val *KalturaBaseUser) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBaseUser) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBaseUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBaseUser(val *KalturaBaseUser) *NullableKalturaBaseUser {
	return &NullableKalturaBaseUser{value: val, isSet: true}
}

func (v NullableKalturaBaseUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBaseUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


