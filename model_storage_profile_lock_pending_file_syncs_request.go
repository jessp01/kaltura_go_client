/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StorageProfileLockPendingFileSyncsRequest struct for StorageProfileLockPendingFileSyncsRequest
type StorageProfileLockPendingFileSyncsRequest struct {
	Filter KalturaFileSyncFilter `json:"filter"`
	MaxCount int32 `json:"maxCount"`
	MaxSize *int32 `json:"maxSize,omitempty"`
	StorageProfileId int32 `json:"storageProfileId"`
	WorkerId int32 `json:"workerId"`
}

// NewStorageProfileLockPendingFileSyncsRequest instantiates a new StorageProfileLockPendingFileSyncsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageProfileLockPendingFileSyncsRequest(filter KalturaFileSyncFilter, maxCount int32, storageProfileId int32, workerId int32) *StorageProfileLockPendingFileSyncsRequest {
	this := StorageProfileLockPendingFileSyncsRequest{}
	this.Filter = filter
	this.MaxCount = maxCount
	this.StorageProfileId = storageProfileId
	this.WorkerId = workerId
	return &this
}

// NewStorageProfileLockPendingFileSyncsRequestWithDefaults instantiates a new StorageProfileLockPendingFileSyncsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageProfileLockPendingFileSyncsRequestWithDefaults() *StorageProfileLockPendingFileSyncsRequest {
	this := StorageProfileLockPendingFileSyncsRequest{}
	return &this
}

// GetFilter returns the Filter field value
func (o *StorageProfileLockPendingFileSyncsRequest) GetFilter() KalturaFileSyncFilter {
	if o == nil {
		var ret KalturaFileSyncFilter
		return ret
	}

	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value
// and a boolean to check if the value has been set.
func (o *StorageProfileLockPendingFileSyncsRequest) GetFilterOk() (*KalturaFileSyncFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filter, true
}

// SetFilter sets field value
func (o *StorageProfileLockPendingFileSyncsRequest) SetFilter(v KalturaFileSyncFilter) {
	o.Filter = v
}

// GetMaxCount returns the MaxCount field value
func (o *StorageProfileLockPendingFileSyncsRequest) GetMaxCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxCount
}

// GetMaxCountOk returns a tuple with the MaxCount field value
// and a boolean to check if the value has been set.
func (o *StorageProfileLockPendingFileSyncsRequest) GetMaxCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxCount, true
}

// SetMaxCount sets field value
func (o *StorageProfileLockPendingFileSyncsRequest) SetMaxCount(v int32) {
	o.MaxCount = v
}

// GetMaxSize returns the MaxSize field value if set, zero value otherwise.
func (o *StorageProfileLockPendingFileSyncsRequest) GetMaxSize() int32 {
	if o == nil || o.MaxSize == nil {
		var ret int32
		return ret
	}
	return *o.MaxSize
}

// GetMaxSizeOk returns a tuple with the MaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageProfileLockPendingFileSyncsRequest) GetMaxSizeOk() (*int32, bool) {
	if o == nil || o.MaxSize == nil {
		return nil, false
	}
	return o.MaxSize, true
}

// HasMaxSize returns a boolean if a field has been set.
func (o *StorageProfileLockPendingFileSyncsRequest) HasMaxSize() bool {
	if o != nil && o.MaxSize != nil {
		return true
	}

	return false
}

// SetMaxSize gets a reference to the given int32 and assigns it to the MaxSize field.
func (o *StorageProfileLockPendingFileSyncsRequest) SetMaxSize(v int32) {
	o.MaxSize = &v
}

// GetStorageProfileId returns the StorageProfileId field value
func (o *StorageProfileLockPendingFileSyncsRequest) GetStorageProfileId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StorageProfileId
}

// GetStorageProfileIdOk returns a tuple with the StorageProfileId field value
// and a boolean to check if the value has been set.
func (o *StorageProfileLockPendingFileSyncsRequest) GetStorageProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageProfileId, true
}

// SetStorageProfileId sets field value
func (o *StorageProfileLockPendingFileSyncsRequest) SetStorageProfileId(v int32) {
	o.StorageProfileId = v
}

// GetWorkerId returns the WorkerId field value
func (o *StorageProfileLockPendingFileSyncsRequest) GetWorkerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value
// and a boolean to check if the value has been set.
func (o *StorageProfileLockPendingFileSyncsRequest) GetWorkerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkerId, true
}

// SetWorkerId sets field value
func (o *StorageProfileLockPendingFileSyncsRequest) SetWorkerId(v int32) {
	o.WorkerId = v
}

func (o StorageProfileLockPendingFileSyncsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["filter"] = o.Filter
	}
	if true {
		toSerialize["maxCount"] = o.MaxCount
	}
	if o.MaxSize != nil {
		toSerialize["maxSize"] = o.MaxSize
	}
	if true {
		toSerialize["storageProfileId"] = o.StorageProfileId
	}
	if true {
		toSerialize["workerId"] = o.WorkerId
	}
	return json.Marshal(toSerialize)
}

type NullableStorageProfileLockPendingFileSyncsRequest struct {
	value *StorageProfileLockPendingFileSyncsRequest
	isSet bool
}

func (v NullableStorageProfileLockPendingFileSyncsRequest) Get() *StorageProfileLockPendingFileSyncsRequest {
	return v.value
}

func (v *NullableStorageProfileLockPendingFileSyncsRequest) Set(val *StorageProfileLockPendingFileSyncsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageProfileLockPendingFileSyncsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageProfileLockPendingFileSyncsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageProfileLockPendingFileSyncsRequest(val *StorageProfileLockPendingFileSyncsRequest) *NullableStorageProfileLockPendingFileSyncsRequest {
	return &NullableStorageProfileLockPendingFileSyncsRequest{value: val, isSet: true}
}

func (v NullableStorageProfileLockPendingFileSyncsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageProfileLockPendingFileSyncsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


