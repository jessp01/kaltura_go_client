/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaGroupUserFilter struct for KalturaGroupUserFilter
type KalturaGroupUserFilter struct {
	KalturaGroupUserBaseFilter
}

// NewKalturaGroupUserFilter instantiates a new KalturaGroupUserFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaGroupUserFilter() *KalturaGroupUserFilter {
	this := KalturaGroupUserFilter{}
	return &this
}

// NewKalturaGroupUserFilterWithDefaults instantiates a new KalturaGroupUserFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaGroupUserFilterWithDefaults() *KalturaGroupUserFilter {
	this := KalturaGroupUserFilter{}
	return &this
}

func (o KalturaGroupUserFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaGroupUserBaseFilter, errKalturaGroupUserBaseFilter := json.Marshal(o.KalturaGroupUserBaseFilter)
	if errKalturaGroupUserBaseFilter != nil {
		return []byte{}, errKalturaGroupUserBaseFilter
	}
	errKalturaGroupUserBaseFilter = json.Unmarshal([]byte(serializedKalturaGroupUserBaseFilter), &toSerialize)
	if errKalturaGroupUserBaseFilter != nil {
		return []byte{}, errKalturaGroupUserBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaGroupUserFilter struct {
	value *KalturaGroupUserFilter
	isSet bool
}

func (v NullableKalturaGroupUserFilter) Get() *KalturaGroupUserFilter {
	return v.value
}

func (v *NullableKalturaGroupUserFilter) Set(val *KalturaGroupUserFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaGroupUserFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaGroupUserFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaGroupUserFilter(val *KalturaGroupUserFilter) *NullableKalturaGroupUserFilter {
	return &NullableKalturaGroupUserFilter{value: val, isSet: true}
}

func (v NullableKalturaGroupUserFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaGroupUserFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


