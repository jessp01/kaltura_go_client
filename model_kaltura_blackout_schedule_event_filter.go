/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBlackoutScheduleEventFilter struct for KalturaBlackoutScheduleEventFilter
type KalturaBlackoutScheduleEventFilter struct {
	KalturaRecordScheduleEventBaseFilter
}

// NewKalturaBlackoutScheduleEventFilter instantiates a new KalturaBlackoutScheduleEventFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBlackoutScheduleEventFilter() *KalturaBlackoutScheduleEventFilter {
	this := KalturaBlackoutScheduleEventFilter{}
	return &this
}

// NewKalturaBlackoutScheduleEventFilterWithDefaults instantiates a new KalturaBlackoutScheduleEventFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBlackoutScheduleEventFilterWithDefaults() *KalturaBlackoutScheduleEventFilter {
	this := KalturaBlackoutScheduleEventFilter{}
	return &this
}

func (o KalturaBlackoutScheduleEventFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaRecordScheduleEventBaseFilter, errKalturaRecordScheduleEventBaseFilter := json.Marshal(o.KalturaRecordScheduleEventBaseFilter)
	if errKalturaRecordScheduleEventBaseFilter != nil {
		return []byte{}, errKalturaRecordScheduleEventBaseFilter
	}
	errKalturaRecordScheduleEventBaseFilter = json.Unmarshal([]byte(serializedKalturaRecordScheduleEventBaseFilter), &toSerialize)
	if errKalturaRecordScheduleEventBaseFilter != nil {
		return []byte{}, errKalturaRecordScheduleEventBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBlackoutScheduleEventFilter struct {
	value *KalturaBlackoutScheduleEventFilter
	isSet bool
}

func (v NullableKalturaBlackoutScheduleEventFilter) Get() *KalturaBlackoutScheduleEventFilter {
	return v.value
}

func (v *NullableKalturaBlackoutScheduleEventFilter) Set(val *KalturaBlackoutScheduleEventFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBlackoutScheduleEventFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBlackoutScheduleEventFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBlackoutScheduleEventFilter(val *KalturaBlackoutScheduleEventFilter) *NullableKalturaBlackoutScheduleEventFilter {
	return &NullableKalturaBlackoutScheduleEventFilter{value: val, isSet: true}
}

func (v NullableKalturaBlackoutScheduleEventFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBlackoutScheduleEventFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


