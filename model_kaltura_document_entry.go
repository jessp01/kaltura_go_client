/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaDocumentEntry struct for KalturaDocumentEntry
type KalturaDocumentEntry struct {
	KalturaBaseEntry
}

// NewKalturaDocumentEntry instantiates a new KalturaDocumentEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaDocumentEntry() *KalturaDocumentEntry {
	this := KalturaDocumentEntry{}
	return &this
}

// NewKalturaDocumentEntryWithDefaults instantiates a new KalturaDocumentEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaDocumentEntryWithDefaults() *KalturaDocumentEntry {
	this := KalturaDocumentEntry{}
	return &this
}

func (o KalturaDocumentEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBaseEntry, errKalturaBaseEntry := json.Marshal(o.KalturaBaseEntry)
	if errKalturaBaseEntry != nil {
		return []byte{}, errKalturaBaseEntry
	}
	errKalturaBaseEntry = json.Unmarshal([]byte(serializedKalturaBaseEntry), &toSerialize)
	if errKalturaBaseEntry != nil {
		return []byte{}, errKalturaBaseEntry
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaDocumentEntry struct {
	value *KalturaDocumentEntry
	isSet bool
}

func (v NullableKalturaDocumentEntry) Get() *KalturaDocumentEntry {
	return v.value
}

func (v *NullableKalturaDocumentEntry) Set(val *KalturaDocumentEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaDocumentEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaDocumentEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaDocumentEntry(val *KalturaDocumentEntry) *NullableKalturaDocumentEntry {
	return &NullableKalturaDocumentEntry{value: val, isSet: true}
}

func (v NullableKalturaDocumentEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaDocumentEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


