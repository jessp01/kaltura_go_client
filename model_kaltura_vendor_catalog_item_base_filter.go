/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaVendorCatalogItemBaseFilter `abstract`
type KalturaVendorCatalogItemBaseFilter struct {
	KalturaRelatedFilter
}

// NewKalturaVendorCatalogItemBaseFilter instantiates a new KalturaVendorCatalogItemBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaVendorCatalogItemBaseFilter() *KalturaVendorCatalogItemBaseFilter {
	this := KalturaVendorCatalogItemBaseFilter{}
	return &this
}

// NewKalturaVendorCatalogItemBaseFilterWithDefaults instantiates a new KalturaVendorCatalogItemBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaVendorCatalogItemBaseFilterWithDefaults() *KalturaVendorCatalogItemBaseFilter {
	this := KalturaVendorCatalogItemBaseFilter{}
	return &this
}

func (o KalturaVendorCatalogItemBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaRelatedFilter, errKalturaRelatedFilter := json.Marshal(o.KalturaRelatedFilter)
	if errKalturaRelatedFilter != nil {
		return []byte{}, errKalturaRelatedFilter
	}
	errKalturaRelatedFilter = json.Unmarshal([]byte(serializedKalturaRelatedFilter), &toSerialize)
	if errKalturaRelatedFilter != nil {
		return []byte{}, errKalturaRelatedFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaVendorCatalogItemBaseFilter struct {
	value *KalturaVendorCatalogItemBaseFilter
	isSet bool
}

func (v NullableKalturaVendorCatalogItemBaseFilter) Get() *KalturaVendorCatalogItemBaseFilter {
	return v.value
}

func (v *NullableKalturaVendorCatalogItemBaseFilter) Set(val *KalturaVendorCatalogItemBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaVendorCatalogItemBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaVendorCatalogItemBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaVendorCatalogItemBaseFilter(val *KalturaVendorCatalogItemBaseFilter) *NullableKalturaVendorCatalogItemBaseFilter {
	return &NullableKalturaVendorCatalogItemBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaVendorCatalogItemBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaVendorCatalogItemBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


