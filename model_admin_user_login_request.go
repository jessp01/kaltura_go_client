/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AdminUserLoginRequest struct for AdminUserLoginRequest
type AdminUserLoginRequest struct {
	Email string `json:"email"`
	PartnerId *int32 `json:"partnerId,omitempty"`
	Password string `json:"password"`
}

// NewAdminUserLoginRequest instantiates a new AdminUserLoginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminUserLoginRequest(email string, password string) *AdminUserLoginRequest {
	this := AdminUserLoginRequest{}
	this.Email = email
	this.Password = password
	return &this
}

// NewAdminUserLoginRequestWithDefaults instantiates a new AdminUserLoginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminUserLoginRequestWithDefaults() *AdminUserLoginRequest {
	this := AdminUserLoginRequest{}
	return &this
}

// GetEmail returns the Email field value
func (o *AdminUserLoginRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *AdminUserLoginRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *AdminUserLoginRequest) SetEmail(v string) {
	o.Email = v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *AdminUserLoginRequest) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminUserLoginRequest) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *AdminUserLoginRequest) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *AdminUserLoginRequest) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetPassword returns the Password field value
func (o *AdminUserLoginRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *AdminUserLoginRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *AdminUserLoginRequest) SetPassword(v string) {
	o.Password = v
}

func (o AdminUserLoginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableAdminUserLoginRequest struct {
	value *AdminUserLoginRequest
	isSet bool
}

func (v NullableAdminUserLoginRequest) Get() *AdminUserLoginRequest {
	return v.value
}

func (v *NullableAdminUserLoginRequest) Set(val *AdminUserLoginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminUserLoginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminUserLoginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminUserLoginRequest(val *AdminUserLoginRequest) *NullableAdminUserLoginRequest {
	return &NullableAdminUserLoginRequest{value: val, isSet: true}
}

func (v NullableAdminUserLoginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminUserLoginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


