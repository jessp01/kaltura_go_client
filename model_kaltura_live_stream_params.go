/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLiveStreamParams struct for KalturaLiveStreamParams
type KalturaLiveStreamParams struct {
	// Bit rate of the stream. (i.e. 900)
	Bitrate *int32 `json:"bitrate,omitempty"`
	// Live stream's codec
	Codec *string `json:"codec,omitempty"`
	// flavor asset id
	FlavorId *string `json:"flavorId,omitempty"`
	// Live stream's farme rate
	FrameRate *int32 `json:"frameRate,omitempty"`
	// Stream's height
	Height *int32 `json:"height,omitempty"`
	// Live stream's key frame interval
	KeyFrameInterval *float32 `json:"keyFrameInterval,omitempty"`
	// Live stream's language
	Language *string `json:"language,omitempty"`
	// Stream's width
	Width *int32 `json:"width,omitempty"`
}

// NewKalturaLiveStreamParams instantiates a new KalturaLiveStreamParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLiveStreamParams() *KalturaLiveStreamParams {
	this := KalturaLiveStreamParams{}
	return &this
}

// NewKalturaLiveStreamParamsWithDefaults instantiates a new KalturaLiveStreamParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLiveStreamParamsWithDefaults() *KalturaLiveStreamParams {
	this := KalturaLiveStreamParams{}
	return &this
}

// GetBitrate returns the Bitrate field value if set, zero value otherwise.
func (o *KalturaLiveStreamParams) GetBitrate() int32 {
	if o == nil || o.Bitrate == nil {
		var ret int32
		return ret
	}
	return *o.Bitrate
}

// GetBitrateOk returns a tuple with the Bitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamParams) GetBitrateOk() (*int32, bool) {
	if o == nil || o.Bitrate == nil {
		return nil, false
	}
	return o.Bitrate, true
}

// HasBitrate returns a boolean if a field has been set.
func (o *KalturaLiveStreamParams) HasBitrate() bool {
	if o != nil && o.Bitrate != nil {
		return true
	}

	return false
}

// SetBitrate gets a reference to the given int32 and assigns it to the Bitrate field.
func (o *KalturaLiveStreamParams) SetBitrate(v int32) {
	o.Bitrate = &v
}

// GetCodec returns the Codec field value if set, zero value otherwise.
func (o *KalturaLiveStreamParams) GetCodec() string {
	if o == nil || o.Codec == nil {
		var ret string
		return ret
	}
	return *o.Codec
}

// GetCodecOk returns a tuple with the Codec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamParams) GetCodecOk() (*string, bool) {
	if o == nil || o.Codec == nil {
		return nil, false
	}
	return o.Codec, true
}

// HasCodec returns a boolean if a field has been set.
func (o *KalturaLiveStreamParams) HasCodec() bool {
	if o != nil && o.Codec != nil {
		return true
	}

	return false
}

// SetCodec gets a reference to the given string and assigns it to the Codec field.
func (o *KalturaLiveStreamParams) SetCodec(v string) {
	o.Codec = &v
}

// GetFlavorId returns the FlavorId field value if set, zero value otherwise.
func (o *KalturaLiveStreamParams) GetFlavorId() string {
	if o == nil || o.FlavorId == nil {
		var ret string
		return ret
	}
	return *o.FlavorId
}

// GetFlavorIdOk returns a tuple with the FlavorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamParams) GetFlavorIdOk() (*string, bool) {
	if o == nil || o.FlavorId == nil {
		return nil, false
	}
	return o.FlavorId, true
}

// HasFlavorId returns a boolean if a field has been set.
func (o *KalturaLiveStreamParams) HasFlavorId() bool {
	if o != nil && o.FlavorId != nil {
		return true
	}

	return false
}

// SetFlavorId gets a reference to the given string and assigns it to the FlavorId field.
func (o *KalturaLiveStreamParams) SetFlavorId(v string) {
	o.FlavorId = &v
}

// GetFrameRate returns the FrameRate field value if set, zero value otherwise.
func (o *KalturaLiveStreamParams) GetFrameRate() int32 {
	if o == nil || o.FrameRate == nil {
		var ret int32
		return ret
	}
	return *o.FrameRate
}

// GetFrameRateOk returns a tuple with the FrameRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamParams) GetFrameRateOk() (*int32, bool) {
	if o == nil || o.FrameRate == nil {
		return nil, false
	}
	return o.FrameRate, true
}

// HasFrameRate returns a boolean if a field has been set.
func (o *KalturaLiveStreamParams) HasFrameRate() bool {
	if o != nil && o.FrameRate != nil {
		return true
	}

	return false
}

// SetFrameRate gets a reference to the given int32 and assigns it to the FrameRate field.
func (o *KalturaLiveStreamParams) SetFrameRate(v int32) {
	o.FrameRate = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *KalturaLiveStreamParams) GetHeight() int32 {
	if o == nil || o.Height == nil {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamParams) GetHeightOk() (*int32, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *KalturaLiveStreamParams) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *KalturaLiveStreamParams) SetHeight(v int32) {
	o.Height = &v
}

// GetKeyFrameInterval returns the KeyFrameInterval field value if set, zero value otherwise.
func (o *KalturaLiveStreamParams) GetKeyFrameInterval() float32 {
	if o == nil || o.KeyFrameInterval == nil {
		var ret float32
		return ret
	}
	return *o.KeyFrameInterval
}

// GetKeyFrameIntervalOk returns a tuple with the KeyFrameInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamParams) GetKeyFrameIntervalOk() (*float32, bool) {
	if o == nil || o.KeyFrameInterval == nil {
		return nil, false
	}
	return o.KeyFrameInterval, true
}

// HasKeyFrameInterval returns a boolean if a field has been set.
func (o *KalturaLiveStreamParams) HasKeyFrameInterval() bool {
	if o != nil && o.KeyFrameInterval != nil {
		return true
	}

	return false
}

// SetKeyFrameInterval gets a reference to the given float32 and assigns it to the KeyFrameInterval field.
func (o *KalturaLiveStreamParams) SetKeyFrameInterval(v float32) {
	o.KeyFrameInterval = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *KalturaLiveStreamParams) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamParams) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *KalturaLiveStreamParams) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *KalturaLiveStreamParams) SetLanguage(v string) {
	o.Language = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *KalturaLiveStreamParams) GetWidth() int32 {
	if o == nil || o.Width == nil {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamParams) GetWidthOk() (*int32, bool) {
	if o == nil || o.Width == nil {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *KalturaLiveStreamParams) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *KalturaLiveStreamParams) SetWidth(v int32) {
	o.Width = &v
}

func (o KalturaLiveStreamParams) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bitrate != nil {
		toSerialize["bitrate"] = o.Bitrate
	}
	if o.Codec != nil {
		toSerialize["codec"] = o.Codec
	}
	if o.FlavorId != nil {
		toSerialize["flavorId"] = o.FlavorId
	}
	if o.FrameRate != nil {
		toSerialize["frameRate"] = o.FrameRate
	}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	if o.KeyFrameInterval != nil {
		toSerialize["keyFrameInterval"] = o.KeyFrameInterval
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.Width != nil {
		toSerialize["width"] = o.Width
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLiveStreamParams struct {
	value *KalturaLiveStreamParams
	isSet bool
}

func (v NullableKalturaLiveStreamParams) Get() *KalturaLiveStreamParams {
	return v.value
}

func (v *NullableKalturaLiveStreamParams) Set(val *KalturaLiveStreamParams) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLiveStreamParams) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLiveStreamParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLiveStreamParams(val *KalturaLiveStreamParams) *NullableKalturaLiveStreamParams {
	return &NullableKalturaLiveStreamParams{value: val, isSet: true}
}

func (v NullableKalturaLiveStreamParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLiveStreamParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


