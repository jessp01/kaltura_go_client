/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaESearchCategoryResult struct for KalturaESearchCategoryResult
type KalturaESearchCategoryResult struct {
	KalturaESearchResult
}

// NewKalturaESearchCategoryResult instantiates a new KalturaESearchCategoryResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaESearchCategoryResult() *KalturaESearchCategoryResult {
	this := KalturaESearchCategoryResult{}
	return &this
}

// NewKalturaESearchCategoryResultWithDefaults instantiates a new KalturaESearchCategoryResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaESearchCategoryResultWithDefaults() *KalturaESearchCategoryResult {
	this := KalturaESearchCategoryResult{}
	return &this
}

func (o KalturaESearchCategoryResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaESearchResult, errKalturaESearchResult := json.Marshal(o.KalturaESearchResult)
	if errKalturaESearchResult != nil {
		return []byte{}, errKalturaESearchResult
	}
	errKalturaESearchResult = json.Unmarshal([]byte(serializedKalturaESearchResult), &toSerialize)
	if errKalturaESearchResult != nil {
		return []byte{}, errKalturaESearchResult
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaESearchCategoryResult struct {
	value *KalturaESearchCategoryResult
	isSet bool
}

func (v NullableKalturaESearchCategoryResult) Get() *KalturaESearchCategoryResult {
	return v.value
}

func (v *NullableKalturaESearchCategoryResult) Set(val *KalturaESearchCategoryResult) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaESearchCategoryResult) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaESearchCategoryResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaESearchCategoryResult(val *KalturaESearchCategoryResult) *NullableKalturaESearchCategoryResult {
	return &NullableKalturaESearchCategoryResult{value: val, isSet: true}
}

func (v NullableKalturaESearchCategoryResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaESearchCategoryResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


