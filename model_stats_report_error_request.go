/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StatsReportErrorRequest struct for StatsReportErrorRequest
type StatsReportErrorRequest struct {
	ErrorCode string `json:"errorCode"`
	ErrorMessage string `json:"errorMessage"`
}

// NewStatsReportErrorRequest instantiates a new StatsReportErrorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatsReportErrorRequest(errorCode string, errorMessage string) *StatsReportErrorRequest {
	this := StatsReportErrorRequest{}
	this.ErrorCode = errorCode
	this.ErrorMessage = errorMessage
	return &this
}

// NewStatsReportErrorRequestWithDefaults instantiates a new StatsReportErrorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatsReportErrorRequestWithDefaults() *StatsReportErrorRequest {
	this := StatsReportErrorRequest{}
	return &this
}

// GetErrorCode returns the ErrorCode field value
func (o *StatsReportErrorRequest) GetErrorCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value
// and a boolean to check if the value has been set.
func (o *StatsReportErrorRequest) GetErrorCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorCode, true
}

// SetErrorCode sets field value
func (o *StatsReportErrorRequest) SetErrorCode(v string) {
	o.ErrorCode = v
}

// GetErrorMessage returns the ErrorMessage field value
func (o *StatsReportErrorRequest) GetErrorMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value
// and a boolean to check if the value has been set.
func (o *StatsReportErrorRequest) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorMessage, true
}

// SetErrorMessage sets field value
func (o *StatsReportErrorRequest) SetErrorMessage(v string) {
	o.ErrorMessage = v
}

func (o StatsReportErrorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if true {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	return json.Marshal(toSerialize)
}

type NullableStatsReportErrorRequest struct {
	value *StatsReportErrorRequest
	isSet bool
}

func (v NullableStatsReportErrorRequest) Get() *StatsReportErrorRequest {
	return v.value
}

func (v *NullableStatsReportErrorRequest) Set(val *StatsReportErrorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStatsReportErrorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStatsReportErrorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatsReportErrorRequest(val *StatsReportErrorRequest) *NullableStatsReportErrorRequest {
	return &NullableStatsReportErrorRequest{value: val, isSet: true}
}

func (v NullableStatsReportErrorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatsReportErrorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


