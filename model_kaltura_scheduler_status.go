/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSchedulerStatus struct for KalturaSchedulerStatus
type KalturaSchedulerStatus struct {
	// `readOnly`  The id of the Category
	Id *int32 `json:"id,omitempty"`
	// The configured id of the scheduler
	SchedulerConfiguredId *int32 `json:"schedulerConfiguredId,omitempty"`
	// `readOnly`  The id of the scheduler
	SchedulerId *int32 `json:"schedulerId,omitempty"`
	// Enum Type: `KalturaSchedulerStatusType`  The status type
	Type *int32 `json:"type,omitempty"`
	// The status value
	Value *int32 `json:"value,omitempty"`
	// The configured id of the job worker
	WorkerConfiguredId *int32 `json:"workerConfiguredId,omitempty"`
	// `readOnly`  The id of the worker
	WorkerId *int32 `json:"workerId,omitempty"`
	// Enum Type: `KalturaBatchJobType`  The type of the job worker.
	WorkerType *string `json:"workerType,omitempty"`
}

// NewKalturaSchedulerStatus instantiates a new KalturaSchedulerStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSchedulerStatus() *KalturaSchedulerStatus {
	this := KalturaSchedulerStatus{}
	return &this
}

// NewKalturaSchedulerStatusWithDefaults instantiates a new KalturaSchedulerStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSchedulerStatusWithDefaults() *KalturaSchedulerStatus {
	this := KalturaSchedulerStatus{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaSchedulerStatus) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerStatus) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaSchedulerStatus) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaSchedulerStatus) SetId(v int32) {
	o.Id = &v
}

// GetSchedulerConfiguredId returns the SchedulerConfiguredId field value if set, zero value otherwise.
func (o *KalturaSchedulerStatus) GetSchedulerConfiguredId() int32 {
	if o == nil || o.SchedulerConfiguredId == nil {
		var ret int32
		return ret
	}
	return *o.SchedulerConfiguredId
}

// GetSchedulerConfiguredIdOk returns a tuple with the SchedulerConfiguredId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerStatus) GetSchedulerConfiguredIdOk() (*int32, bool) {
	if o == nil || o.SchedulerConfiguredId == nil {
		return nil, false
	}
	return o.SchedulerConfiguredId, true
}

// HasSchedulerConfiguredId returns a boolean if a field has been set.
func (o *KalturaSchedulerStatus) HasSchedulerConfiguredId() bool {
	if o != nil && o.SchedulerConfiguredId != nil {
		return true
	}

	return false
}

// SetSchedulerConfiguredId gets a reference to the given int32 and assigns it to the SchedulerConfiguredId field.
func (o *KalturaSchedulerStatus) SetSchedulerConfiguredId(v int32) {
	o.SchedulerConfiguredId = &v
}

// GetSchedulerId returns the SchedulerId field value if set, zero value otherwise.
func (o *KalturaSchedulerStatus) GetSchedulerId() int32 {
	if o == nil || o.SchedulerId == nil {
		var ret int32
		return ret
	}
	return *o.SchedulerId
}

// GetSchedulerIdOk returns a tuple with the SchedulerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerStatus) GetSchedulerIdOk() (*int32, bool) {
	if o == nil || o.SchedulerId == nil {
		return nil, false
	}
	return o.SchedulerId, true
}

// HasSchedulerId returns a boolean if a field has been set.
func (o *KalturaSchedulerStatus) HasSchedulerId() bool {
	if o != nil && o.SchedulerId != nil {
		return true
	}

	return false
}

// SetSchedulerId gets a reference to the given int32 and assigns it to the SchedulerId field.
func (o *KalturaSchedulerStatus) SetSchedulerId(v int32) {
	o.SchedulerId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaSchedulerStatus) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerStatus) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaSchedulerStatus) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *KalturaSchedulerStatus) SetType(v int32) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *KalturaSchedulerStatus) GetValue() int32 {
	if o == nil || o.Value == nil {
		var ret int32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerStatus) GetValueOk() (*int32, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *KalturaSchedulerStatus) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given int32 and assigns it to the Value field.
func (o *KalturaSchedulerStatus) SetValue(v int32) {
	o.Value = &v
}

// GetWorkerConfiguredId returns the WorkerConfiguredId field value if set, zero value otherwise.
func (o *KalturaSchedulerStatus) GetWorkerConfiguredId() int32 {
	if o == nil || o.WorkerConfiguredId == nil {
		var ret int32
		return ret
	}
	return *o.WorkerConfiguredId
}

// GetWorkerConfiguredIdOk returns a tuple with the WorkerConfiguredId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerStatus) GetWorkerConfiguredIdOk() (*int32, bool) {
	if o == nil || o.WorkerConfiguredId == nil {
		return nil, false
	}
	return o.WorkerConfiguredId, true
}

// HasWorkerConfiguredId returns a boolean if a field has been set.
func (o *KalturaSchedulerStatus) HasWorkerConfiguredId() bool {
	if o != nil && o.WorkerConfiguredId != nil {
		return true
	}

	return false
}

// SetWorkerConfiguredId gets a reference to the given int32 and assigns it to the WorkerConfiguredId field.
func (o *KalturaSchedulerStatus) SetWorkerConfiguredId(v int32) {
	o.WorkerConfiguredId = &v
}

// GetWorkerId returns the WorkerId field value if set, zero value otherwise.
func (o *KalturaSchedulerStatus) GetWorkerId() int32 {
	if o == nil || o.WorkerId == nil {
		var ret int32
		return ret
	}
	return *o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerStatus) GetWorkerIdOk() (*int32, bool) {
	if o == nil || o.WorkerId == nil {
		return nil, false
	}
	return o.WorkerId, true
}

// HasWorkerId returns a boolean if a field has been set.
func (o *KalturaSchedulerStatus) HasWorkerId() bool {
	if o != nil && o.WorkerId != nil {
		return true
	}

	return false
}

// SetWorkerId gets a reference to the given int32 and assigns it to the WorkerId field.
func (o *KalturaSchedulerStatus) SetWorkerId(v int32) {
	o.WorkerId = &v
}

// GetWorkerType returns the WorkerType field value if set, zero value otherwise.
func (o *KalturaSchedulerStatus) GetWorkerType() string {
	if o == nil || o.WorkerType == nil {
		var ret string
		return ret
	}
	return *o.WorkerType
}

// GetWorkerTypeOk returns a tuple with the WorkerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerStatus) GetWorkerTypeOk() (*string, bool) {
	if o == nil || o.WorkerType == nil {
		return nil, false
	}
	return o.WorkerType, true
}

// HasWorkerType returns a boolean if a field has been set.
func (o *KalturaSchedulerStatus) HasWorkerType() bool {
	if o != nil && o.WorkerType != nil {
		return true
	}

	return false
}

// SetWorkerType gets a reference to the given string and assigns it to the WorkerType field.
func (o *KalturaSchedulerStatus) SetWorkerType(v string) {
	o.WorkerType = &v
}

func (o KalturaSchedulerStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.SchedulerConfiguredId != nil {
		toSerialize["schedulerConfiguredId"] = o.SchedulerConfiguredId
	}
	if o.SchedulerId != nil {
		toSerialize["schedulerId"] = o.SchedulerId
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.WorkerConfiguredId != nil {
		toSerialize["workerConfiguredId"] = o.WorkerConfiguredId
	}
	if o.WorkerId != nil {
		toSerialize["workerId"] = o.WorkerId
	}
	if o.WorkerType != nil {
		toSerialize["workerType"] = o.WorkerType
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSchedulerStatus struct {
	value *KalturaSchedulerStatus
	isSet bool
}

func (v NullableKalturaSchedulerStatus) Get() *KalturaSchedulerStatus {
	return v.value
}

func (v *NullableKalturaSchedulerStatus) Set(val *KalturaSchedulerStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSchedulerStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSchedulerStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSchedulerStatus(val *KalturaSchedulerStatus) *NullableKalturaSchedulerStatus {
	return &NullableKalturaSchedulerStatus{value: val, isSet: true}
}

func (v NullableKalturaSchedulerStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSchedulerStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


