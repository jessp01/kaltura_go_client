/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaEmailNotificationRecipient struct for KalturaEmailNotificationRecipient
type KalturaEmailNotificationRecipient struct {
	Email *KalturaStringValue `json:"email,omitempty"`
	Name *KalturaStringValue `json:"name,omitempty"`
}

// NewKalturaEmailNotificationRecipient instantiates a new KalturaEmailNotificationRecipient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaEmailNotificationRecipient() *KalturaEmailNotificationRecipient {
	this := KalturaEmailNotificationRecipient{}
	return &this
}

// NewKalturaEmailNotificationRecipientWithDefaults instantiates a new KalturaEmailNotificationRecipient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaEmailNotificationRecipientWithDefaults() *KalturaEmailNotificationRecipient {
	this := KalturaEmailNotificationRecipient{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *KalturaEmailNotificationRecipient) GetEmail() KalturaStringValue {
	if o == nil || o.Email == nil {
		var ret KalturaStringValue
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEmailNotificationRecipient) GetEmailOk() (*KalturaStringValue, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *KalturaEmailNotificationRecipient) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given KalturaStringValue and assigns it to the Email field.
func (o *KalturaEmailNotificationRecipient) SetEmail(v KalturaStringValue) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KalturaEmailNotificationRecipient) GetName() KalturaStringValue {
	if o == nil || o.Name == nil {
		var ret KalturaStringValue
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEmailNotificationRecipient) GetNameOk() (*KalturaStringValue, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KalturaEmailNotificationRecipient) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given KalturaStringValue and assigns it to the Name field.
func (o *KalturaEmailNotificationRecipient) SetName(v KalturaStringValue) {
	o.Name = &v
}

func (o KalturaEmailNotificationRecipient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaEmailNotificationRecipient struct {
	value *KalturaEmailNotificationRecipient
	isSet bool
}

func (v NullableKalturaEmailNotificationRecipient) Get() *KalturaEmailNotificationRecipient {
	return v.value
}

func (v *NullableKalturaEmailNotificationRecipient) Set(val *KalturaEmailNotificationRecipient) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaEmailNotificationRecipient) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaEmailNotificationRecipient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaEmailNotificationRecipient(val *KalturaEmailNotificationRecipient) *NullableKalturaEmailNotificationRecipient {
	return &NullableKalturaEmailNotificationRecipient{value: val, isSet: true}
}

func (v NullableKalturaEmailNotificationRecipient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaEmailNotificationRecipient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


