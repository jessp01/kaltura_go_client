/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaIntegerValue An int representation to return an array of ints
type KalturaIntegerValue struct {
	KalturaValue
}

// NewKalturaIntegerValue instantiates a new KalturaIntegerValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaIntegerValue() *KalturaIntegerValue {
	this := KalturaIntegerValue{}
	return &this
}

// NewKalturaIntegerValueWithDefaults instantiates a new KalturaIntegerValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaIntegerValueWithDefaults() *KalturaIntegerValue {
	this := KalturaIntegerValue{}
	return &this
}

func (o KalturaIntegerValue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaValue, errKalturaValue := json.Marshal(o.KalturaValue)
	if errKalturaValue != nil {
		return []byte{}, errKalturaValue
	}
	errKalturaValue = json.Unmarshal([]byte(serializedKalturaValue), &toSerialize)
	if errKalturaValue != nil {
		return []byte{}, errKalturaValue
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaIntegerValue struct {
	value *KalturaIntegerValue
	isSet bool
}

func (v NullableKalturaIntegerValue) Get() *KalturaIntegerValue {
	return v.value
}

func (v *NullableKalturaIntegerValue) Set(val *KalturaIntegerValue) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaIntegerValue) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaIntegerValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaIntegerValue(val *KalturaIntegerValue) *NullableKalturaIntegerValue {
	return &NullableKalturaIntegerValue{value: val, isSet: true}
}

func (v NullableKalturaIntegerValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaIntegerValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


