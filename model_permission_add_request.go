/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PermissionAddRequest struct for PermissionAddRequest
type PermissionAddRequest struct {
	Permission KalturaPermission `json:"permission"`
}

// NewPermissionAddRequest instantiates a new PermissionAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionAddRequest(permission KalturaPermission) *PermissionAddRequest {
	this := PermissionAddRequest{}
	this.Permission = permission
	return &this
}

// NewPermissionAddRequestWithDefaults instantiates a new PermissionAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionAddRequestWithDefaults() *PermissionAddRequest {
	this := PermissionAddRequest{}
	return &this
}

// GetPermission returns the Permission field value
func (o *PermissionAddRequest) GetPermission() KalturaPermission {
	if o == nil {
		var ret KalturaPermission
		return ret
	}

	return o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
func (o *PermissionAddRequest) GetPermissionOk() (*KalturaPermission, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permission, true
}

// SetPermission sets field value
func (o *PermissionAddRequest) SetPermission(v KalturaPermission) {
	o.Permission = v
}

func (o PermissionAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["permission"] = o.Permission
	}
	return json.Marshal(toSerialize)
}

type NullablePermissionAddRequest struct {
	value *PermissionAddRequest
	isSet bool
}

func (v NullablePermissionAddRequest) Get() *PermissionAddRequest {
	return v.value
}

func (v *NullablePermissionAddRequest) Set(val *PermissionAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionAddRequest(val *PermissionAddRequest) *NullablePermissionAddRequest {
	return &NullablePermissionAddRequest{value: val, isSet: true}
}

func (v NullablePermissionAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


