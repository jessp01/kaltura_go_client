/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MediaUpdateThumbnailFromSourceEntryRequest struct for MediaUpdateThumbnailFromSourceEntryRequest
type MediaUpdateThumbnailFromSourceEntryRequest struct {
	EntryId string `json:"entryId"`
	FlavorParamsId *int32 `json:"flavorParamsId,omitempty"`
	SourceEntryId string `json:"sourceEntryId"`
	TimeOffset int32 `json:"timeOffset"`
}

// NewMediaUpdateThumbnailFromSourceEntryRequest instantiates a new MediaUpdateThumbnailFromSourceEntryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaUpdateThumbnailFromSourceEntryRequest(entryId string, sourceEntryId string, timeOffset int32) *MediaUpdateThumbnailFromSourceEntryRequest {
	this := MediaUpdateThumbnailFromSourceEntryRequest{}
	this.EntryId = entryId
	this.SourceEntryId = sourceEntryId
	this.TimeOffset = timeOffset
	return &this
}

// NewMediaUpdateThumbnailFromSourceEntryRequestWithDefaults instantiates a new MediaUpdateThumbnailFromSourceEntryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaUpdateThumbnailFromSourceEntryRequestWithDefaults() *MediaUpdateThumbnailFromSourceEntryRequest {
	this := MediaUpdateThumbnailFromSourceEntryRequest{}
	return &this
}

// GetEntryId returns the EntryId field value
func (o *MediaUpdateThumbnailFromSourceEntryRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *MediaUpdateThumbnailFromSourceEntryRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *MediaUpdateThumbnailFromSourceEntryRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetFlavorParamsId returns the FlavorParamsId field value if set, zero value otherwise.
func (o *MediaUpdateThumbnailFromSourceEntryRequest) GetFlavorParamsId() int32 {
	if o == nil || o.FlavorParamsId == nil {
		var ret int32
		return ret
	}
	return *o.FlavorParamsId
}

// GetFlavorParamsIdOk returns a tuple with the FlavorParamsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaUpdateThumbnailFromSourceEntryRequest) GetFlavorParamsIdOk() (*int32, bool) {
	if o == nil || o.FlavorParamsId == nil {
		return nil, false
	}
	return o.FlavorParamsId, true
}

// HasFlavorParamsId returns a boolean if a field has been set.
func (o *MediaUpdateThumbnailFromSourceEntryRequest) HasFlavorParamsId() bool {
	if o != nil && o.FlavorParamsId != nil {
		return true
	}

	return false
}

// SetFlavorParamsId gets a reference to the given int32 and assigns it to the FlavorParamsId field.
func (o *MediaUpdateThumbnailFromSourceEntryRequest) SetFlavorParamsId(v int32) {
	o.FlavorParamsId = &v
}

// GetSourceEntryId returns the SourceEntryId field value
func (o *MediaUpdateThumbnailFromSourceEntryRequest) GetSourceEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceEntryId
}

// GetSourceEntryIdOk returns a tuple with the SourceEntryId field value
// and a boolean to check if the value has been set.
func (o *MediaUpdateThumbnailFromSourceEntryRequest) GetSourceEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceEntryId, true
}

// SetSourceEntryId sets field value
func (o *MediaUpdateThumbnailFromSourceEntryRequest) SetSourceEntryId(v string) {
	o.SourceEntryId = v
}

// GetTimeOffset returns the TimeOffset field value
func (o *MediaUpdateThumbnailFromSourceEntryRequest) GetTimeOffset() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TimeOffset
}

// GetTimeOffsetOk returns a tuple with the TimeOffset field value
// and a boolean to check if the value has been set.
func (o *MediaUpdateThumbnailFromSourceEntryRequest) GetTimeOffsetOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeOffset, true
}

// SetTimeOffset sets field value
func (o *MediaUpdateThumbnailFromSourceEntryRequest) SetTimeOffset(v int32) {
	o.TimeOffset = v
}

func (o MediaUpdateThumbnailFromSourceEntryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if o.FlavorParamsId != nil {
		toSerialize["flavorParamsId"] = o.FlavorParamsId
	}
	if true {
		toSerialize["sourceEntryId"] = o.SourceEntryId
	}
	if true {
		toSerialize["timeOffset"] = o.TimeOffset
	}
	return json.Marshal(toSerialize)
}

type NullableMediaUpdateThumbnailFromSourceEntryRequest struct {
	value *MediaUpdateThumbnailFromSourceEntryRequest
	isSet bool
}

func (v NullableMediaUpdateThumbnailFromSourceEntryRequest) Get() *MediaUpdateThumbnailFromSourceEntryRequest {
	return v.value
}

func (v *NullableMediaUpdateThumbnailFromSourceEntryRequest) Set(val *MediaUpdateThumbnailFromSourceEntryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaUpdateThumbnailFromSourceEntryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaUpdateThumbnailFromSourceEntryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaUpdateThumbnailFromSourceEntryRequest(val *MediaUpdateThumbnailFromSourceEntryRequest) *NullableMediaUpdateThumbnailFromSourceEntryRequest {
	return &NullableMediaUpdateThumbnailFromSourceEntryRequest{value: val, isSet: true}
}

func (v NullableMediaUpdateThumbnailFromSourceEntryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaUpdateThumbnailFromSourceEntryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


