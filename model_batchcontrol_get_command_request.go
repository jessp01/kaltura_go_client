/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchcontrolGetCommandRequest struct for BatchcontrolGetCommandRequest
type BatchcontrolGetCommandRequest struct {
	CommandId int32 `json:"commandId"`
}

// NewBatchcontrolGetCommandRequest instantiates a new BatchcontrolGetCommandRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchcontrolGetCommandRequest(commandId int32) *BatchcontrolGetCommandRequest {
	this := BatchcontrolGetCommandRequest{}
	this.CommandId = commandId
	return &this
}

// NewBatchcontrolGetCommandRequestWithDefaults instantiates a new BatchcontrolGetCommandRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchcontrolGetCommandRequestWithDefaults() *BatchcontrolGetCommandRequest {
	this := BatchcontrolGetCommandRequest{}
	return &this
}

// GetCommandId returns the CommandId field value
func (o *BatchcontrolGetCommandRequest) GetCommandId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CommandId
}

// GetCommandIdOk returns a tuple with the CommandId field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolGetCommandRequest) GetCommandIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommandId, true
}

// SetCommandId sets field value
func (o *BatchcontrolGetCommandRequest) SetCommandId(v int32) {
	o.CommandId = v
}

func (o BatchcontrolGetCommandRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["commandId"] = o.CommandId
	}
	return json.Marshal(toSerialize)
}

type NullableBatchcontrolGetCommandRequest struct {
	value *BatchcontrolGetCommandRequest
	isSet bool
}

func (v NullableBatchcontrolGetCommandRequest) Get() *BatchcontrolGetCommandRequest {
	return v.value
}

func (v *NullableBatchcontrolGetCommandRequest) Set(val *BatchcontrolGetCommandRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchcontrolGetCommandRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchcontrolGetCommandRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchcontrolGetCommandRequest(val *BatchcontrolGetCommandRequest) *NullableBatchcontrolGetCommandRequest {
	return &NullableBatchcontrolGetCommandRequest{value: val, isSet: true}
}

func (v NullableBatchcontrolGetCommandRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchcontrolGetCommandRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


