/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSipEntryServerNodeBaseFilter `abstract`
type KalturaSipEntryServerNodeBaseFilter struct {
	KalturaEntryServerNodeFilter
}

// NewKalturaSipEntryServerNodeBaseFilter instantiates a new KalturaSipEntryServerNodeBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSipEntryServerNodeBaseFilter() *KalturaSipEntryServerNodeBaseFilter {
	this := KalturaSipEntryServerNodeBaseFilter{}
	return &this
}

// NewKalturaSipEntryServerNodeBaseFilterWithDefaults instantiates a new KalturaSipEntryServerNodeBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSipEntryServerNodeBaseFilterWithDefaults() *KalturaSipEntryServerNodeBaseFilter {
	this := KalturaSipEntryServerNodeBaseFilter{}
	return &this
}

func (o KalturaSipEntryServerNodeBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaEntryServerNodeFilter, errKalturaEntryServerNodeFilter := json.Marshal(o.KalturaEntryServerNodeFilter)
	if errKalturaEntryServerNodeFilter != nil {
		return []byte{}, errKalturaEntryServerNodeFilter
	}
	errKalturaEntryServerNodeFilter = json.Unmarshal([]byte(serializedKalturaEntryServerNodeFilter), &toSerialize)
	if errKalturaEntryServerNodeFilter != nil {
		return []byte{}, errKalturaEntryServerNodeFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSipEntryServerNodeBaseFilter struct {
	value *KalturaSipEntryServerNodeBaseFilter
	isSet bool
}

func (v NullableKalturaSipEntryServerNodeBaseFilter) Get() *KalturaSipEntryServerNodeBaseFilter {
	return v.value
}

func (v *NullableKalturaSipEntryServerNodeBaseFilter) Set(val *KalturaSipEntryServerNodeBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSipEntryServerNodeBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSipEntryServerNodeBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSipEntryServerNodeBaseFilter(val *KalturaSipEntryServerNodeBaseFilter) *NullableKalturaSipEntryServerNodeBaseFilter {
	return &NullableKalturaSipEntryServerNodeBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaSipEntryServerNodeBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSipEntryServerNodeBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


