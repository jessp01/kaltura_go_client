/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaReportExportFile struct for KalturaReportExportFile
type KalturaReportExportFile struct {
	FileId *string `json:"fileId,omitempty"`
	FileName *string `json:"fileName,omitempty"`
}

// NewKalturaReportExportFile instantiates a new KalturaReportExportFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaReportExportFile() *KalturaReportExportFile {
	this := KalturaReportExportFile{}
	return &this
}

// NewKalturaReportExportFileWithDefaults instantiates a new KalturaReportExportFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaReportExportFileWithDefaults() *KalturaReportExportFile {
	this := KalturaReportExportFile{}
	return &this
}

// GetFileId returns the FileId field value if set, zero value otherwise.
func (o *KalturaReportExportFile) GetFileId() string {
	if o == nil || o.FileId == nil {
		var ret string
		return ret
	}
	return *o.FileId
}

// GetFileIdOk returns a tuple with the FileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportExportFile) GetFileIdOk() (*string, bool) {
	if o == nil || o.FileId == nil {
		return nil, false
	}
	return o.FileId, true
}

// HasFileId returns a boolean if a field has been set.
func (o *KalturaReportExportFile) HasFileId() bool {
	if o != nil && o.FileId != nil {
		return true
	}

	return false
}

// SetFileId gets a reference to the given string and assigns it to the FileId field.
func (o *KalturaReportExportFile) SetFileId(v string) {
	o.FileId = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *KalturaReportExportFile) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportExportFile) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *KalturaReportExportFile) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *KalturaReportExportFile) SetFileName(v string) {
	o.FileName = &v
}

func (o KalturaReportExportFile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FileId != nil {
		toSerialize["fileId"] = o.FileId
	}
	if o.FileName != nil {
		toSerialize["fileName"] = o.FileName
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaReportExportFile struct {
	value *KalturaReportExportFile
	isSet bool
}

func (v NullableKalturaReportExportFile) Get() *KalturaReportExportFile {
	return v.value
}

func (v *NullableKalturaReportExportFile) Set(val *KalturaReportExportFile) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaReportExportFile) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaReportExportFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaReportExportFile(val *KalturaReportExportFile) *NullableKalturaReportExportFile {
	return &NullableKalturaReportExportFile{value: val, isSet: true}
}

func (v NullableKalturaReportExportFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaReportExportFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


