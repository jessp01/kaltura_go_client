/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaDropFolderFileFilter struct for KalturaDropFolderFileFilter
type KalturaDropFolderFileFilter struct {
	KalturaDropFolderFileBaseFilter
}

// NewKalturaDropFolderFileFilter instantiates a new KalturaDropFolderFileFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaDropFolderFileFilter() *KalturaDropFolderFileFilter {
	this := KalturaDropFolderFileFilter{}
	return &this
}

// NewKalturaDropFolderFileFilterWithDefaults instantiates a new KalturaDropFolderFileFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaDropFolderFileFilterWithDefaults() *KalturaDropFolderFileFilter {
	this := KalturaDropFolderFileFilter{}
	return &this
}

func (o KalturaDropFolderFileFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaDropFolderFileBaseFilter, errKalturaDropFolderFileBaseFilter := json.Marshal(o.KalturaDropFolderFileBaseFilter)
	if errKalturaDropFolderFileBaseFilter != nil {
		return []byte{}, errKalturaDropFolderFileBaseFilter
	}
	errKalturaDropFolderFileBaseFilter = json.Unmarshal([]byte(serializedKalturaDropFolderFileBaseFilter), &toSerialize)
	if errKalturaDropFolderFileBaseFilter != nil {
		return []byte{}, errKalturaDropFolderFileBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaDropFolderFileFilter struct {
	value *KalturaDropFolderFileFilter
	isSet bool
}

func (v NullableKalturaDropFolderFileFilter) Get() *KalturaDropFolderFileFilter {
	return v.value
}

func (v *NullableKalturaDropFolderFileFilter) Set(val *KalturaDropFolderFileFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaDropFolderFileFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaDropFolderFileFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaDropFolderFileFilter(val *KalturaDropFolderFileFilter) *NullableKalturaDropFolderFileFilter {
	return &NullableKalturaDropFolderFileFilter{value: val, isSet: true}
}

func (v NullableKalturaDropFolderFileFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaDropFolderFileFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


