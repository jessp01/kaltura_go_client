/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLiveStreamBitrate struct for KalturaLiveStreamBitrate
type KalturaLiveStreamBitrate struct {
	Bitrate *int32 `json:"bitrate,omitempty"`
	Height *int32 `json:"height,omitempty"`
	Tags *string `json:"tags,omitempty"`
	Width *int32 `json:"width,omitempty"`
}

// NewKalturaLiveStreamBitrate instantiates a new KalturaLiveStreamBitrate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLiveStreamBitrate() *KalturaLiveStreamBitrate {
	this := KalturaLiveStreamBitrate{}
	return &this
}

// NewKalturaLiveStreamBitrateWithDefaults instantiates a new KalturaLiveStreamBitrate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLiveStreamBitrateWithDefaults() *KalturaLiveStreamBitrate {
	this := KalturaLiveStreamBitrate{}
	return &this
}

// GetBitrate returns the Bitrate field value if set, zero value otherwise.
func (o *KalturaLiveStreamBitrate) GetBitrate() int32 {
	if o == nil || o.Bitrate == nil {
		var ret int32
		return ret
	}
	return *o.Bitrate
}

// GetBitrateOk returns a tuple with the Bitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamBitrate) GetBitrateOk() (*int32, bool) {
	if o == nil || o.Bitrate == nil {
		return nil, false
	}
	return o.Bitrate, true
}

// HasBitrate returns a boolean if a field has been set.
func (o *KalturaLiveStreamBitrate) HasBitrate() bool {
	if o != nil && o.Bitrate != nil {
		return true
	}

	return false
}

// SetBitrate gets a reference to the given int32 and assigns it to the Bitrate field.
func (o *KalturaLiveStreamBitrate) SetBitrate(v int32) {
	o.Bitrate = &v
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *KalturaLiveStreamBitrate) GetHeight() int32 {
	if o == nil || o.Height == nil {
		var ret int32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamBitrate) GetHeightOk() (*int32, bool) {
	if o == nil || o.Height == nil {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *KalturaLiveStreamBitrate) HasHeight() bool {
	if o != nil && o.Height != nil {
		return true
	}

	return false
}

// SetHeight gets a reference to the given int32 and assigns it to the Height field.
func (o *KalturaLiveStreamBitrate) SetHeight(v int32) {
	o.Height = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *KalturaLiveStreamBitrate) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamBitrate) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *KalturaLiveStreamBitrate) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *KalturaLiveStreamBitrate) SetTags(v string) {
	o.Tags = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *KalturaLiveStreamBitrate) GetWidth() int32 {
	if o == nil || o.Width == nil {
		var ret int32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStreamBitrate) GetWidthOk() (*int32, bool) {
	if o == nil || o.Width == nil {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *KalturaLiveStreamBitrate) HasWidth() bool {
	if o != nil && o.Width != nil {
		return true
	}

	return false
}

// SetWidth gets a reference to the given int32 and assigns it to the Width field.
func (o *KalturaLiveStreamBitrate) SetWidth(v int32) {
	o.Width = &v
}

func (o KalturaLiveStreamBitrate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bitrate != nil {
		toSerialize["bitrate"] = o.Bitrate
	}
	if o.Height != nil {
		toSerialize["height"] = o.Height
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Width != nil {
		toSerialize["width"] = o.Width
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLiveStreamBitrate struct {
	value *KalturaLiveStreamBitrate
	isSet bool
}

func (v NullableKalturaLiveStreamBitrate) Get() *KalturaLiveStreamBitrate {
	return v.value
}

func (v *NullableKalturaLiveStreamBitrate) Set(val *KalturaLiveStreamBitrate) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLiveStreamBitrate) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLiveStreamBitrate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLiveStreamBitrate(val *KalturaLiveStreamBitrate) *NullableKalturaLiveStreamBitrate {
	return &NullableKalturaLiveStreamBitrate{value: val, isSet: true}
}

func (v NullableKalturaLiveStreamBitrate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLiveStreamBitrate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


