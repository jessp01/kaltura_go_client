/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaESearchEntryResult struct for KalturaESearchEntryResult
type KalturaESearchEntryResult struct {
	KalturaESearchResult
}

// NewKalturaESearchEntryResult instantiates a new KalturaESearchEntryResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaESearchEntryResult() *KalturaESearchEntryResult {
	this := KalturaESearchEntryResult{}
	return &this
}

// NewKalturaESearchEntryResultWithDefaults instantiates a new KalturaESearchEntryResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaESearchEntryResultWithDefaults() *KalturaESearchEntryResult {
	this := KalturaESearchEntryResult{}
	return &this
}

func (o KalturaESearchEntryResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaESearchResult, errKalturaESearchResult := json.Marshal(o.KalturaESearchResult)
	if errKalturaESearchResult != nil {
		return []byte{}, errKalturaESearchResult
	}
	errKalturaESearchResult = json.Unmarshal([]byte(serializedKalturaESearchResult), &toSerialize)
	if errKalturaESearchResult != nil {
		return []byte{}, errKalturaESearchResult
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaESearchEntryResult struct {
	value *KalturaESearchEntryResult
	isSet bool
}

func (v NullableKalturaESearchEntryResult) Get() *KalturaESearchEntryResult {
	return v.value
}

func (v *NullableKalturaESearchEntryResult) Set(val *KalturaESearchEntryResult) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaESearchEntryResult) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaESearchEntryResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaESearchEntryResult(val *KalturaESearchEntryResult) *NullableKalturaESearchEntryResult {
	return &NullableKalturaESearchEntryResult{value: val, isSet: true}
}

func (v NullableKalturaESearchEntryResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaESearchEntryResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


