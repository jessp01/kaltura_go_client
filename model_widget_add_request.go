/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WidgetAddRequest struct for WidgetAddRequest
type WidgetAddRequest struct {
	Widget KalturaWidget `json:"widget"`
}

// NewWidgetAddRequest instantiates a new WidgetAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWidgetAddRequest(widget KalturaWidget) *WidgetAddRequest {
	this := WidgetAddRequest{}
	this.Widget = widget
	return &this
}

// NewWidgetAddRequestWithDefaults instantiates a new WidgetAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWidgetAddRequestWithDefaults() *WidgetAddRequest {
	this := WidgetAddRequest{}
	return &this
}

// GetWidget returns the Widget field value
func (o *WidgetAddRequest) GetWidget() KalturaWidget {
	if o == nil {
		var ret KalturaWidget
		return ret
	}

	return o.Widget
}

// GetWidgetOk returns a tuple with the Widget field value
// and a boolean to check if the value has been set.
func (o *WidgetAddRequest) GetWidgetOk() (*KalturaWidget, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Widget, true
}

// SetWidget sets field value
func (o *WidgetAddRequest) SetWidget(v KalturaWidget) {
	o.Widget = v
}

func (o WidgetAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["widget"] = o.Widget
	}
	return json.Marshal(toSerialize)
}

type NullableWidgetAddRequest struct {
	value *WidgetAddRequest
	isSet bool
}

func (v NullableWidgetAddRequest) Get() *WidgetAddRequest {
	return v.value
}

func (v *NullableWidgetAddRequest) Set(val *WidgetAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWidgetAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWidgetAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWidgetAddRequest(val *WidgetAddRequest) *NullableWidgetAddRequest {
	return &NullableWidgetAddRequest{value: val, isSet: true}
}

func (v NullableWidgetAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWidgetAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


