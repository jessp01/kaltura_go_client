/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLiveStats struct for KalturaLiveStats
type KalturaLiveStats struct {
	Audience *int32 `json:"audience,omitempty"`
	AvgBitrate *float32 `json:"avgBitrate,omitempty"`
	BufferTime *int32 `json:"bufferTime,omitempty"`
	DvrAudience *int32 `json:"dvrAudience,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	Plays *int32 `json:"plays,omitempty"`
	SecondsViewed *int32 `json:"secondsViewed,omitempty"`
	StartEvent *int32 `json:"startEvent,omitempty"`
	Timestamp *int32 `json:"timestamp,omitempty"`
}

// NewKalturaLiveStats instantiates a new KalturaLiveStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLiveStats() *KalturaLiveStats {
	this := KalturaLiveStats{}
	return &this
}

// NewKalturaLiveStatsWithDefaults instantiates a new KalturaLiveStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLiveStatsWithDefaults() *KalturaLiveStats {
	this := KalturaLiveStats{}
	return &this
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *KalturaLiveStats) GetAudience() int32 {
	if o == nil || o.Audience == nil {
		var ret int32
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStats) GetAudienceOk() (*int32, bool) {
	if o == nil || o.Audience == nil {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *KalturaLiveStats) HasAudience() bool {
	if o != nil && o.Audience != nil {
		return true
	}

	return false
}

// SetAudience gets a reference to the given int32 and assigns it to the Audience field.
func (o *KalturaLiveStats) SetAudience(v int32) {
	o.Audience = &v
}

// GetAvgBitrate returns the AvgBitrate field value if set, zero value otherwise.
func (o *KalturaLiveStats) GetAvgBitrate() float32 {
	if o == nil || o.AvgBitrate == nil {
		var ret float32
		return ret
	}
	return *o.AvgBitrate
}

// GetAvgBitrateOk returns a tuple with the AvgBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStats) GetAvgBitrateOk() (*float32, bool) {
	if o == nil || o.AvgBitrate == nil {
		return nil, false
	}
	return o.AvgBitrate, true
}

// HasAvgBitrate returns a boolean if a field has been set.
func (o *KalturaLiveStats) HasAvgBitrate() bool {
	if o != nil && o.AvgBitrate != nil {
		return true
	}

	return false
}

// SetAvgBitrate gets a reference to the given float32 and assigns it to the AvgBitrate field.
func (o *KalturaLiveStats) SetAvgBitrate(v float32) {
	o.AvgBitrate = &v
}

// GetBufferTime returns the BufferTime field value if set, zero value otherwise.
func (o *KalturaLiveStats) GetBufferTime() int32 {
	if o == nil || o.BufferTime == nil {
		var ret int32
		return ret
	}
	return *o.BufferTime
}

// GetBufferTimeOk returns a tuple with the BufferTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStats) GetBufferTimeOk() (*int32, bool) {
	if o == nil || o.BufferTime == nil {
		return nil, false
	}
	return o.BufferTime, true
}

// HasBufferTime returns a boolean if a field has been set.
func (o *KalturaLiveStats) HasBufferTime() bool {
	if o != nil && o.BufferTime != nil {
		return true
	}

	return false
}

// SetBufferTime gets a reference to the given int32 and assigns it to the BufferTime field.
func (o *KalturaLiveStats) SetBufferTime(v int32) {
	o.BufferTime = &v
}

// GetDvrAudience returns the DvrAudience field value if set, zero value otherwise.
func (o *KalturaLiveStats) GetDvrAudience() int32 {
	if o == nil || o.DvrAudience == nil {
		var ret int32
		return ret
	}
	return *o.DvrAudience
}

// GetDvrAudienceOk returns a tuple with the DvrAudience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStats) GetDvrAudienceOk() (*int32, bool) {
	if o == nil || o.DvrAudience == nil {
		return nil, false
	}
	return o.DvrAudience, true
}

// HasDvrAudience returns a boolean if a field has been set.
func (o *KalturaLiveStats) HasDvrAudience() bool {
	if o != nil && o.DvrAudience != nil {
		return true
	}

	return false
}

// SetDvrAudience gets a reference to the given int32 and assigns it to the DvrAudience field.
func (o *KalturaLiveStats) SetDvrAudience(v int32) {
	o.DvrAudience = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaLiveStats) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStats) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaLiveStats) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaLiveStats) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetPlays returns the Plays field value if set, zero value otherwise.
func (o *KalturaLiveStats) GetPlays() int32 {
	if o == nil || o.Plays == nil {
		var ret int32
		return ret
	}
	return *o.Plays
}

// GetPlaysOk returns a tuple with the Plays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStats) GetPlaysOk() (*int32, bool) {
	if o == nil || o.Plays == nil {
		return nil, false
	}
	return o.Plays, true
}

// HasPlays returns a boolean if a field has been set.
func (o *KalturaLiveStats) HasPlays() bool {
	if o != nil && o.Plays != nil {
		return true
	}

	return false
}

// SetPlays gets a reference to the given int32 and assigns it to the Plays field.
func (o *KalturaLiveStats) SetPlays(v int32) {
	o.Plays = &v
}

// GetSecondsViewed returns the SecondsViewed field value if set, zero value otherwise.
func (o *KalturaLiveStats) GetSecondsViewed() int32 {
	if o == nil || o.SecondsViewed == nil {
		var ret int32
		return ret
	}
	return *o.SecondsViewed
}

// GetSecondsViewedOk returns a tuple with the SecondsViewed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStats) GetSecondsViewedOk() (*int32, bool) {
	if o == nil || o.SecondsViewed == nil {
		return nil, false
	}
	return o.SecondsViewed, true
}

// HasSecondsViewed returns a boolean if a field has been set.
func (o *KalturaLiveStats) HasSecondsViewed() bool {
	if o != nil && o.SecondsViewed != nil {
		return true
	}

	return false
}

// SetSecondsViewed gets a reference to the given int32 and assigns it to the SecondsViewed field.
func (o *KalturaLiveStats) SetSecondsViewed(v int32) {
	o.SecondsViewed = &v
}

// GetStartEvent returns the StartEvent field value if set, zero value otherwise.
func (o *KalturaLiveStats) GetStartEvent() int32 {
	if o == nil || o.StartEvent == nil {
		var ret int32
		return ret
	}
	return *o.StartEvent
}

// GetStartEventOk returns a tuple with the StartEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStats) GetStartEventOk() (*int32, bool) {
	if o == nil || o.StartEvent == nil {
		return nil, false
	}
	return o.StartEvent, true
}

// HasStartEvent returns a boolean if a field has been set.
func (o *KalturaLiveStats) HasStartEvent() bool {
	if o != nil && o.StartEvent != nil {
		return true
	}

	return false
}

// SetStartEvent gets a reference to the given int32 and assigns it to the StartEvent field.
func (o *KalturaLiveStats) SetStartEvent(v int32) {
	o.StartEvent = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *KalturaLiveStats) GetTimestamp() int32 {
	if o == nil || o.Timestamp == nil {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStats) GetTimestampOk() (*int32, bool) {
	if o == nil || o.Timestamp == nil {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *KalturaLiveStats) HasTimestamp() bool {
	if o != nil && o.Timestamp != nil {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *KalturaLiveStats) SetTimestamp(v int32) {
	o.Timestamp = &v
}

func (o KalturaLiveStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Audience != nil {
		toSerialize["audience"] = o.Audience
	}
	if o.AvgBitrate != nil {
		toSerialize["avgBitrate"] = o.AvgBitrate
	}
	if o.BufferTime != nil {
		toSerialize["bufferTime"] = o.BufferTime
	}
	if o.DvrAudience != nil {
		toSerialize["dvrAudience"] = o.DvrAudience
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.Plays != nil {
		toSerialize["plays"] = o.Plays
	}
	if o.SecondsViewed != nil {
		toSerialize["secondsViewed"] = o.SecondsViewed
	}
	if o.StartEvent != nil {
		toSerialize["startEvent"] = o.StartEvent
	}
	if o.Timestamp != nil {
		toSerialize["timestamp"] = o.Timestamp
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLiveStats struct {
	value *KalturaLiveStats
	isSet bool
}

func (v NullableKalturaLiveStats) Get() *KalturaLiveStats {
	return v.value
}

func (v *NullableKalturaLiveStats) Set(val *KalturaLiveStats) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLiveStats) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLiveStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLiveStats(val *KalturaLiveStats) *NullableKalturaLiveStats {
	return &NullableKalturaLiveStats{value: val, isSet: true}
}

func (v NullableKalturaLiveStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLiveStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


