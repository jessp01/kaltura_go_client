/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ThumbAssetGetUrlRequest struct for ThumbAssetGetUrlRequest
type ThumbAssetGetUrlRequest struct {
	Id string `json:"id"`
	StorageId *int32 `json:"storageId,omitempty"`
	ThumbParams *KalturaThumbParams `json:"thumbParams,omitempty"`
}

// NewThumbAssetGetUrlRequest instantiates a new ThumbAssetGetUrlRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThumbAssetGetUrlRequest(id string) *ThumbAssetGetUrlRequest {
	this := ThumbAssetGetUrlRequest{}
	this.Id = id
	return &this
}

// NewThumbAssetGetUrlRequestWithDefaults instantiates a new ThumbAssetGetUrlRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThumbAssetGetUrlRequestWithDefaults() *ThumbAssetGetUrlRequest {
	this := ThumbAssetGetUrlRequest{}
	return &this
}

// GetId returns the Id field value
func (o *ThumbAssetGetUrlRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ThumbAssetGetUrlRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ThumbAssetGetUrlRequest) SetId(v string) {
	o.Id = v
}

// GetStorageId returns the StorageId field value if set, zero value otherwise.
func (o *ThumbAssetGetUrlRequest) GetStorageId() int32 {
	if o == nil || o.StorageId == nil {
		var ret int32
		return ret
	}
	return *o.StorageId
}

// GetStorageIdOk returns a tuple with the StorageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThumbAssetGetUrlRequest) GetStorageIdOk() (*int32, bool) {
	if o == nil || o.StorageId == nil {
		return nil, false
	}
	return o.StorageId, true
}

// HasStorageId returns a boolean if a field has been set.
func (o *ThumbAssetGetUrlRequest) HasStorageId() bool {
	if o != nil && o.StorageId != nil {
		return true
	}

	return false
}

// SetStorageId gets a reference to the given int32 and assigns it to the StorageId field.
func (o *ThumbAssetGetUrlRequest) SetStorageId(v int32) {
	o.StorageId = &v
}

// GetThumbParams returns the ThumbParams field value if set, zero value otherwise.
func (o *ThumbAssetGetUrlRequest) GetThumbParams() KalturaThumbParams {
	if o == nil || o.ThumbParams == nil {
		var ret KalturaThumbParams
		return ret
	}
	return *o.ThumbParams
}

// GetThumbParamsOk returns a tuple with the ThumbParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThumbAssetGetUrlRequest) GetThumbParamsOk() (*KalturaThumbParams, bool) {
	if o == nil || o.ThumbParams == nil {
		return nil, false
	}
	return o.ThumbParams, true
}

// HasThumbParams returns a boolean if a field has been set.
func (o *ThumbAssetGetUrlRequest) HasThumbParams() bool {
	if o != nil && o.ThumbParams != nil {
		return true
	}

	return false
}

// SetThumbParams gets a reference to the given KalturaThumbParams and assigns it to the ThumbParams field.
func (o *ThumbAssetGetUrlRequest) SetThumbParams(v KalturaThumbParams) {
	o.ThumbParams = &v
}

func (o ThumbAssetGetUrlRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.StorageId != nil {
		toSerialize["storageId"] = o.StorageId
	}
	if o.ThumbParams != nil {
		toSerialize["thumbParams"] = o.ThumbParams
	}
	return json.Marshal(toSerialize)
}

type NullableThumbAssetGetUrlRequest struct {
	value *ThumbAssetGetUrlRequest
	isSet bool
}

func (v NullableThumbAssetGetUrlRequest) Get() *ThumbAssetGetUrlRequest {
	return v.value
}

func (v *NullableThumbAssetGetUrlRequest) Set(val *ThumbAssetGetUrlRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableThumbAssetGetUrlRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableThumbAssetGetUrlRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThumbAssetGetUrlRequest(val *ThumbAssetGetUrlRequest) *NullableThumbAssetGetUrlRequest {
	return &NullableThumbAssetGetUrlRequest{value: val, isSet: true}
}

func (v NullableThumbAssetGetUrlRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThumbAssetGetUrlRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


