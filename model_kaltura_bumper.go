/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBumper struct for KalturaBumper
type KalturaBumper struct {
	EntryId *string `json:"entryId,omitempty"`
	Sources []KalturaPlaybackSource `json:"sources,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewKalturaBumper instantiates a new KalturaBumper object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBumper() *KalturaBumper {
	this := KalturaBumper{}
	return &this
}

// NewKalturaBumperWithDefaults instantiates a new KalturaBumper object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBumperWithDefaults() *KalturaBumper {
	this := KalturaBumper{}
	return &this
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *KalturaBumper) GetEntryId() string {
	if o == nil || o.EntryId == nil {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBumper) GetEntryIdOk() (*string, bool) {
	if o == nil || o.EntryId == nil {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *KalturaBumper) HasEntryId() bool {
	if o != nil && o.EntryId != nil {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *KalturaBumper) SetEntryId(v string) {
	o.EntryId = &v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *KalturaBumper) GetSources() []KalturaPlaybackSource {
	if o == nil || o.Sources == nil {
		var ret []KalturaPlaybackSource
		return ret
	}
	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBumper) GetSourcesOk() ([]KalturaPlaybackSource, bool) {
	if o == nil || o.Sources == nil {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *KalturaBumper) HasSources() bool {
	if o != nil && o.Sources != nil {
		return true
	}

	return false
}

// SetSources gets a reference to the given []KalturaPlaybackSource and assigns it to the Sources field.
func (o *KalturaBumper) SetSources(v []KalturaPlaybackSource) {
	o.Sources = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *KalturaBumper) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBumper) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *KalturaBumper) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *KalturaBumper) SetUrl(v string) {
	o.Url = &v
}

func (o KalturaBumper) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntryId != nil {
		toSerialize["entryId"] = o.EntryId
	}
	if o.Sources != nil {
		toSerialize["sources"] = o.Sources
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBumper struct {
	value *KalturaBumper
	isSet bool
}

func (v NullableKalturaBumper) Get() *KalturaBumper {
	return v.value
}

func (v *NullableKalturaBumper) Set(val *KalturaBumper) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBumper) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBumper) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBumper(val *KalturaBumper) *NullableKalturaBumper {
	return &NullableKalturaBumper{value: val, isSet: true}
}

func (v NullableKalturaBumper) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBumper) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


