/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBusinessProcessSignalNotificationTemplateFilter struct for KalturaBusinessProcessSignalNotificationTemplateFilter
type KalturaBusinessProcessSignalNotificationTemplateFilter struct {
	KalturaBusinessProcessSignalNotificationTemplateBaseFilter
}

// NewKalturaBusinessProcessSignalNotificationTemplateFilter instantiates a new KalturaBusinessProcessSignalNotificationTemplateFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBusinessProcessSignalNotificationTemplateFilter() *KalturaBusinessProcessSignalNotificationTemplateFilter {
	this := KalturaBusinessProcessSignalNotificationTemplateFilter{}
	return &this
}

// NewKalturaBusinessProcessSignalNotificationTemplateFilterWithDefaults instantiates a new KalturaBusinessProcessSignalNotificationTemplateFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBusinessProcessSignalNotificationTemplateFilterWithDefaults() *KalturaBusinessProcessSignalNotificationTemplateFilter {
	this := KalturaBusinessProcessSignalNotificationTemplateFilter{}
	return &this
}

func (o KalturaBusinessProcessSignalNotificationTemplateFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBusinessProcessSignalNotificationTemplateBaseFilter, errKalturaBusinessProcessSignalNotificationTemplateBaseFilter := json.Marshal(o.KalturaBusinessProcessSignalNotificationTemplateBaseFilter)
	if errKalturaBusinessProcessSignalNotificationTemplateBaseFilter != nil {
		return []byte{}, errKalturaBusinessProcessSignalNotificationTemplateBaseFilter
	}
	errKalturaBusinessProcessSignalNotificationTemplateBaseFilter = json.Unmarshal([]byte(serializedKalturaBusinessProcessSignalNotificationTemplateBaseFilter), &toSerialize)
	if errKalturaBusinessProcessSignalNotificationTemplateBaseFilter != nil {
		return []byte{}, errKalturaBusinessProcessSignalNotificationTemplateBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBusinessProcessSignalNotificationTemplateFilter struct {
	value *KalturaBusinessProcessSignalNotificationTemplateFilter
	isSet bool
}

func (v NullableKalturaBusinessProcessSignalNotificationTemplateFilter) Get() *KalturaBusinessProcessSignalNotificationTemplateFilter {
	return v.value
}

func (v *NullableKalturaBusinessProcessSignalNotificationTemplateFilter) Set(val *KalturaBusinessProcessSignalNotificationTemplateFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBusinessProcessSignalNotificationTemplateFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBusinessProcessSignalNotificationTemplateFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBusinessProcessSignalNotificationTemplateFilter(val *KalturaBusinessProcessSignalNotificationTemplateFilter) *NullableKalturaBusinessProcessSignalNotificationTemplateFilter {
	return &NullableKalturaBusinessProcessSignalNotificationTemplateFilter{value: val, isSet: true}
}

func (v NullableKalturaBusinessProcessSignalNotificationTemplateFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBusinessProcessSignalNotificationTemplateFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


