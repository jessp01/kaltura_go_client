/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSessionInfo struct for KalturaSessionInfo
type KalturaSessionInfo struct {
	// `readOnly`
	Expiry *int32 `json:"expiry,omitempty"`
	// `readOnly`
	Ks *string `json:"ks,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// `readOnly`
	Privileges *string `json:"privileges,omitempty"`
	// `readOnly`  Enum Type: `KalturaSessionType`
	SessionType *int32 `json:"sessionType,omitempty"`
	// `readOnly`
	UserId *string `json:"userId,omitempty"`
}

// NewKalturaSessionInfo instantiates a new KalturaSessionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSessionInfo() *KalturaSessionInfo {
	this := KalturaSessionInfo{}
	return &this
}

// NewKalturaSessionInfoWithDefaults instantiates a new KalturaSessionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSessionInfoWithDefaults() *KalturaSessionInfo {
	this := KalturaSessionInfo{}
	return &this
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *KalturaSessionInfo) GetExpiry() int32 {
	if o == nil || o.Expiry == nil {
		var ret int32
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSessionInfo) GetExpiryOk() (*int32, bool) {
	if o == nil || o.Expiry == nil {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *KalturaSessionInfo) HasExpiry() bool {
	if o != nil && o.Expiry != nil {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given int32 and assigns it to the Expiry field.
func (o *KalturaSessionInfo) SetExpiry(v int32) {
	o.Expiry = &v
}

// GetKs returns the Ks field value if set, zero value otherwise.
func (o *KalturaSessionInfo) GetKs() string {
	if o == nil || o.Ks == nil {
		var ret string
		return ret
	}
	return *o.Ks
}

// GetKsOk returns a tuple with the Ks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSessionInfo) GetKsOk() (*string, bool) {
	if o == nil || o.Ks == nil {
		return nil, false
	}
	return o.Ks, true
}

// HasKs returns a boolean if a field has been set.
func (o *KalturaSessionInfo) HasKs() bool {
	if o != nil && o.Ks != nil {
		return true
	}

	return false
}

// SetKs gets a reference to the given string and assigns it to the Ks field.
func (o *KalturaSessionInfo) SetKs(v string) {
	o.Ks = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaSessionInfo) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSessionInfo) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaSessionInfo) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaSessionInfo) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaSessionInfo) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSessionInfo) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaSessionInfo) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaSessionInfo) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetPrivileges returns the Privileges field value if set, zero value otherwise.
func (o *KalturaSessionInfo) GetPrivileges() string {
	if o == nil || o.Privileges == nil {
		var ret string
		return ret
	}
	return *o.Privileges
}

// GetPrivilegesOk returns a tuple with the Privileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSessionInfo) GetPrivilegesOk() (*string, bool) {
	if o == nil || o.Privileges == nil {
		return nil, false
	}
	return o.Privileges, true
}

// HasPrivileges returns a boolean if a field has been set.
func (o *KalturaSessionInfo) HasPrivileges() bool {
	if o != nil && o.Privileges != nil {
		return true
	}

	return false
}

// SetPrivileges gets a reference to the given string and assigns it to the Privileges field.
func (o *KalturaSessionInfo) SetPrivileges(v string) {
	o.Privileges = &v
}

// GetSessionType returns the SessionType field value if set, zero value otherwise.
func (o *KalturaSessionInfo) GetSessionType() int32 {
	if o == nil || o.SessionType == nil {
		var ret int32
		return ret
	}
	return *o.SessionType
}

// GetSessionTypeOk returns a tuple with the SessionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSessionInfo) GetSessionTypeOk() (*int32, bool) {
	if o == nil || o.SessionType == nil {
		return nil, false
	}
	return o.SessionType, true
}

// HasSessionType returns a boolean if a field has been set.
func (o *KalturaSessionInfo) HasSessionType() bool {
	if o != nil && o.SessionType != nil {
		return true
	}

	return false
}

// SetSessionType gets a reference to the given int32 and assigns it to the SessionType field.
func (o *KalturaSessionInfo) SetSessionType(v int32) {
	o.SessionType = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *KalturaSessionInfo) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSessionInfo) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *KalturaSessionInfo) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *KalturaSessionInfo) SetUserId(v string) {
	o.UserId = &v
}

func (o KalturaSessionInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Expiry != nil {
		toSerialize["expiry"] = o.Expiry
	}
	if o.Ks != nil {
		toSerialize["ks"] = o.Ks
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.Privileges != nil {
		toSerialize["privileges"] = o.Privileges
	}
	if o.SessionType != nil {
		toSerialize["sessionType"] = o.SessionType
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSessionInfo struct {
	value *KalturaSessionInfo
	isSet bool
}

func (v NullableKalturaSessionInfo) Get() *KalturaSessionInfo {
	return v.value
}

func (v *NullableKalturaSessionInfo) Set(val *KalturaSessionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSessionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSessionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSessionInfo(val *KalturaSessionInfo) *NullableKalturaSessionInfo {
	return &NullableKalturaSessionInfo{value: val, isSet: true}
}

func (v NullableKalturaSessionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSessionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


