/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaEntriesCsvJobData struct for KalturaEntriesCsvJobData
type KalturaEntriesCsvJobData struct {
	KalturaMappedObjectsCsvJobData
}

// NewKalturaEntriesCsvJobData instantiates a new KalturaEntriesCsvJobData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaEntriesCsvJobData() *KalturaEntriesCsvJobData {
	this := KalturaEntriesCsvJobData{}
	return &this
}

// NewKalturaEntriesCsvJobDataWithDefaults instantiates a new KalturaEntriesCsvJobData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaEntriesCsvJobDataWithDefaults() *KalturaEntriesCsvJobData {
	this := KalturaEntriesCsvJobData{}
	return &this
}

func (o KalturaEntriesCsvJobData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaMappedObjectsCsvJobData, errKalturaMappedObjectsCsvJobData := json.Marshal(o.KalturaMappedObjectsCsvJobData)
	if errKalturaMappedObjectsCsvJobData != nil {
		return []byte{}, errKalturaMappedObjectsCsvJobData
	}
	errKalturaMappedObjectsCsvJobData = json.Unmarshal([]byte(serializedKalturaMappedObjectsCsvJobData), &toSerialize)
	if errKalturaMappedObjectsCsvJobData != nil {
		return []byte{}, errKalturaMappedObjectsCsvJobData
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaEntriesCsvJobData struct {
	value *KalturaEntriesCsvJobData
	isSet bool
}

func (v NullableKalturaEntriesCsvJobData) Get() *KalturaEntriesCsvJobData {
	return v.value
}

func (v *NullableKalturaEntriesCsvJobData) Set(val *KalturaEntriesCsvJobData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaEntriesCsvJobData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaEntriesCsvJobData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaEntriesCsvJobData(val *KalturaEntriesCsvJobData) *NullableKalturaEntriesCsvJobData {
	return &NullableKalturaEntriesCsvJobData{value: val, isSet: true}
}

func (v NullableKalturaEntriesCsvJobData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaEntriesCsvJobData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


