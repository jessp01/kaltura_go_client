/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaExclusiveLockKey struct for KalturaExclusiveLockKey
type KalturaExclusiveLockKey struct {
	BatchIndex *int32 `json:"batchIndex,omitempty"`
	SchedulerId *int32 `json:"schedulerId,omitempty"`
	WorkerId *int32 `json:"workerId,omitempty"`
}

// NewKalturaExclusiveLockKey instantiates a new KalturaExclusiveLockKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaExclusiveLockKey() *KalturaExclusiveLockKey {
	this := KalturaExclusiveLockKey{}
	return &this
}

// NewKalturaExclusiveLockKeyWithDefaults instantiates a new KalturaExclusiveLockKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaExclusiveLockKeyWithDefaults() *KalturaExclusiveLockKey {
	this := KalturaExclusiveLockKey{}
	return &this
}

// GetBatchIndex returns the BatchIndex field value if set, zero value otherwise.
func (o *KalturaExclusiveLockKey) GetBatchIndex() int32 {
	if o == nil || o.BatchIndex == nil {
		var ret int32
		return ret
	}
	return *o.BatchIndex
}

// GetBatchIndexOk returns a tuple with the BatchIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaExclusiveLockKey) GetBatchIndexOk() (*int32, bool) {
	if o == nil || o.BatchIndex == nil {
		return nil, false
	}
	return o.BatchIndex, true
}

// HasBatchIndex returns a boolean if a field has been set.
func (o *KalturaExclusiveLockKey) HasBatchIndex() bool {
	if o != nil && o.BatchIndex != nil {
		return true
	}

	return false
}

// SetBatchIndex gets a reference to the given int32 and assigns it to the BatchIndex field.
func (o *KalturaExclusiveLockKey) SetBatchIndex(v int32) {
	o.BatchIndex = &v
}

// GetSchedulerId returns the SchedulerId field value if set, zero value otherwise.
func (o *KalturaExclusiveLockKey) GetSchedulerId() int32 {
	if o == nil || o.SchedulerId == nil {
		var ret int32
		return ret
	}
	return *o.SchedulerId
}

// GetSchedulerIdOk returns a tuple with the SchedulerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaExclusiveLockKey) GetSchedulerIdOk() (*int32, bool) {
	if o == nil || o.SchedulerId == nil {
		return nil, false
	}
	return o.SchedulerId, true
}

// HasSchedulerId returns a boolean if a field has been set.
func (o *KalturaExclusiveLockKey) HasSchedulerId() bool {
	if o != nil && o.SchedulerId != nil {
		return true
	}

	return false
}

// SetSchedulerId gets a reference to the given int32 and assigns it to the SchedulerId field.
func (o *KalturaExclusiveLockKey) SetSchedulerId(v int32) {
	o.SchedulerId = &v
}

// GetWorkerId returns the WorkerId field value if set, zero value otherwise.
func (o *KalturaExclusiveLockKey) GetWorkerId() int32 {
	if o == nil || o.WorkerId == nil {
		var ret int32
		return ret
	}
	return *o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaExclusiveLockKey) GetWorkerIdOk() (*int32, bool) {
	if o == nil || o.WorkerId == nil {
		return nil, false
	}
	return o.WorkerId, true
}

// HasWorkerId returns a boolean if a field has been set.
func (o *KalturaExclusiveLockKey) HasWorkerId() bool {
	if o != nil && o.WorkerId != nil {
		return true
	}

	return false
}

// SetWorkerId gets a reference to the given int32 and assigns it to the WorkerId field.
func (o *KalturaExclusiveLockKey) SetWorkerId(v int32) {
	o.WorkerId = &v
}

func (o KalturaExclusiveLockKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BatchIndex != nil {
		toSerialize["batchIndex"] = o.BatchIndex
	}
	if o.SchedulerId != nil {
		toSerialize["schedulerId"] = o.SchedulerId
	}
	if o.WorkerId != nil {
		toSerialize["workerId"] = o.WorkerId
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaExclusiveLockKey struct {
	value *KalturaExclusiveLockKey
	isSet bool
}

func (v NullableKalturaExclusiveLockKey) Get() *KalturaExclusiveLockKey {
	return v.value
}

func (v *NullableKalturaExclusiveLockKey) Set(val *KalturaExclusiveLockKey) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaExclusiveLockKey) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaExclusiveLockKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaExclusiveLockKey(val *KalturaExclusiveLockKey) *NullableKalturaExclusiveLockKey {
	return &NullableKalturaExclusiveLockKey{value: val, isSet: true}
}

func (v NullableKalturaExclusiveLockKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaExclusiveLockKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


