/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EventNotificationTemplateDispatchRequest struct for EventNotificationTemplateDispatchRequest
type EventNotificationTemplateDispatchRequest struct {
	Id int32 `json:"id"`
	Scope KalturaEventNotificationScope `json:"scope"`
}

// NewEventNotificationTemplateDispatchRequest instantiates a new EventNotificationTemplateDispatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventNotificationTemplateDispatchRequest(id int32, scope KalturaEventNotificationScope) *EventNotificationTemplateDispatchRequest {
	this := EventNotificationTemplateDispatchRequest{}
	this.Id = id
	this.Scope = scope
	return &this
}

// NewEventNotificationTemplateDispatchRequestWithDefaults instantiates a new EventNotificationTemplateDispatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventNotificationTemplateDispatchRequestWithDefaults() *EventNotificationTemplateDispatchRequest {
	this := EventNotificationTemplateDispatchRequest{}
	return &this
}

// GetId returns the Id field value
func (o *EventNotificationTemplateDispatchRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EventNotificationTemplateDispatchRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EventNotificationTemplateDispatchRequest) SetId(v int32) {
	o.Id = v
}

// GetScope returns the Scope field value
func (o *EventNotificationTemplateDispatchRequest) GetScope() KalturaEventNotificationScope {
	if o == nil {
		var ret KalturaEventNotificationScope
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *EventNotificationTemplateDispatchRequest) GetScopeOk() (*KalturaEventNotificationScope, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *EventNotificationTemplateDispatchRequest) SetScope(v KalturaEventNotificationScope) {
	o.Scope = v
}

func (o EventNotificationTemplateDispatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["scope"] = o.Scope
	}
	return json.Marshal(toSerialize)
}

type NullableEventNotificationTemplateDispatchRequest struct {
	value *EventNotificationTemplateDispatchRequest
	isSet bool
}

func (v NullableEventNotificationTemplateDispatchRequest) Get() *EventNotificationTemplateDispatchRequest {
	return v.value
}

func (v *NullableEventNotificationTemplateDispatchRequest) Set(val *EventNotificationTemplateDispatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEventNotificationTemplateDispatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEventNotificationTemplateDispatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventNotificationTemplateDispatchRequest(val *EventNotificationTemplateDispatchRequest) *NullableEventNotificationTemplateDispatchRequest {
	return &NullableEventNotificationTemplateDispatchRequest{value: val, isSet: true}
}

func (v NullableEventNotificationTemplateDispatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventNotificationTemplateDispatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


