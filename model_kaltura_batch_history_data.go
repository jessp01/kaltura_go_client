/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBatchHistoryData struct for KalturaBatchHistoryData
type KalturaBatchHistoryData struct {
	BatchIndex *int32 `json:"batchIndex,omitempty"`
	ErrNumber *int32 `json:"errNumber,omitempty"`
	ErrType *int32 `json:"errType,omitempty"`
	HostName *string `json:"hostName,omitempty"`
	Message *string `json:"message,omitempty"`
	SchedulerId *int32 `json:"schedulerId,omitempty"`
	SchedulerName *string `json:"schedulerName,omitempty"`
	SessionId *string `json:"sessionId,omitempty"`
	TimeStamp *int32 `json:"timeStamp,omitempty"`
	WorkerId *int32 `json:"workerId,omitempty"`
}

// NewKalturaBatchHistoryData instantiates a new KalturaBatchHistoryData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBatchHistoryData() *KalturaBatchHistoryData {
	this := KalturaBatchHistoryData{}
	return &this
}

// NewKalturaBatchHistoryDataWithDefaults instantiates a new KalturaBatchHistoryData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBatchHistoryDataWithDefaults() *KalturaBatchHistoryData {
	this := KalturaBatchHistoryData{}
	return &this
}

// GetBatchIndex returns the BatchIndex field value if set, zero value otherwise.
func (o *KalturaBatchHistoryData) GetBatchIndex() int32 {
	if o == nil || o.BatchIndex == nil {
		var ret int32
		return ret
	}
	return *o.BatchIndex
}

// GetBatchIndexOk returns a tuple with the BatchIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchHistoryData) GetBatchIndexOk() (*int32, bool) {
	if o == nil || o.BatchIndex == nil {
		return nil, false
	}
	return o.BatchIndex, true
}

// HasBatchIndex returns a boolean if a field has been set.
func (o *KalturaBatchHistoryData) HasBatchIndex() bool {
	if o != nil && o.BatchIndex != nil {
		return true
	}

	return false
}

// SetBatchIndex gets a reference to the given int32 and assigns it to the BatchIndex field.
func (o *KalturaBatchHistoryData) SetBatchIndex(v int32) {
	o.BatchIndex = &v
}

// GetErrNumber returns the ErrNumber field value if set, zero value otherwise.
func (o *KalturaBatchHistoryData) GetErrNumber() int32 {
	if o == nil || o.ErrNumber == nil {
		var ret int32
		return ret
	}
	return *o.ErrNumber
}

// GetErrNumberOk returns a tuple with the ErrNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchHistoryData) GetErrNumberOk() (*int32, bool) {
	if o == nil || o.ErrNumber == nil {
		return nil, false
	}
	return o.ErrNumber, true
}

// HasErrNumber returns a boolean if a field has been set.
func (o *KalturaBatchHistoryData) HasErrNumber() bool {
	if o != nil && o.ErrNumber != nil {
		return true
	}

	return false
}

// SetErrNumber gets a reference to the given int32 and assigns it to the ErrNumber field.
func (o *KalturaBatchHistoryData) SetErrNumber(v int32) {
	o.ErrNumber = &v
}

// GetErrType returns the ErrType field value if set, zero value otherwise.
func (o *KalturaBatchHistoryData) GetErrType() int32 {
	if o == nil || o.ErrType == nil {
		var ret int32
		return ret
	}
	return *o.ErrType
}

// GetErrTypeOk returns a tuple with the ErrType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchHistoryData) GetErrTypeOk() (*int32, bool) {
	if o == nil || o.ErrType == nil {
		return nil, false
	}
	return o.ErrType, true
}

// HasErrType returns a boolean if a field has been set.
func (o *KalturaBatchHistoryData) HasErrType() bool {
	if o != nil && o.ErrType != nil {
		return true
	}

	return false
}

// SetErrType gets a reference to the given int32 and assigns it to the ErrType field.
func (o *KalturaBatchHistoryData) SetErrType(v int32) {
	o.ErrType = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *KalturaBatchHistoryData) GetHostName() string {
	if o == nil || o.HostName == nil {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchHistoryData) GetHostNameOk() (*string, bool) {
	if o == nil || o.HostName == nil {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *KalturaBatchHistoryData) HasHostName() bool {
	if o != nil && o.HostName != nil {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *KalturaBatchHistoryData) SetHostName(v string) {
	o.HostName = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *KalturaBatchHistoryData) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchHistoryData) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *KalturaBatchHistoryData) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *KalturaBatchHistoryData) SetMessage(v string) {
	o.Message = &v
}

// GetSchedulerId returns the SchedulerId field value if set, zero value otherwise.
func (o *KalturaBatchHistoryData) GetSchedulerId() int32 {
	if o == nil || o.SchedulerId == nil {
		var ret int32
		return ret
	}
	return *o.SchedulerId
}

// GetSchedulerIdOk returns a tuple with the SchedulerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchHistoryData) GetSchedulerIdOk() (*int32, bool) {
	if o == nil || o.SchedulerId == nil {
		return nil, false
	}
	return o.SchedulerId, true
}

// HasSchedulerId returns a boolean if a field has been set.
func (o *KalturaBatchHistoryData) HasSchedulerId() bool {
	if o != nil && o.SchedulerId != nil {
		return true
	}

	return false
}

// SetSchedulerId gets a reference to the given int32 and assigns it to the SchedulerId field.
func (o *KalturaBatchHistoryData) SetSchedulerId(v int32) {
	o.SchedulerId = &v
}

// GetSchedulerName returns the SchedulerName field value if set, zero value otherwise.
func (o *KalturaBatchHistoryData) GetSchedulerName() string {
	if o == nil || o.SchedulerName == nil {
		var ret string
		return ret
	}
	return *o.SchedulerName
}

// GetSchedulerNameOk returns a tuple with the SchedulerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchHistoryData) GetSchedulerNameOk() (*string, bool) {
	if o == nil || o.SchedulerName == nil {
		return nil, false
	}
	return o.SchedulerName, true
}

// HasSchedulerName returns a boolean if a field has been set.
func (o *KalturaBatchHistoryData) HasSchedulerName() bool {
	if o != nil && o.SchedulerName != nil {
		return true
	}

	return false
}

// SetSchedulerName gets a reference to the given string and assigns it to the SchedulerName field.
func (o *KalturaBatchHistoryData) SetSchedulerName(v string) {
	o.SchedulerName = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *KalturaBatchHistoryData) GetSessionId() string {
	if o == nil || o.SessionId == nil {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchHistoryData) GetSessionIdOk() (*string, bool) {
	if o == nil || o.SessionId == nil {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *KalturaBatchHistoryData) HasSessionId() bool {
	if o != nil && o.SessionId != nil {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *KalturaBatchHistoryData) SetSessionId(v string) {
	o.SessionId = &v
}

// GetTimeStamp returns the TimeStamp field value if set, zero value otherwise.
func (o *KalturaBatchHistoryData) GetTimeStamp() int32 {
	if o == nil || o.TimeStamp == nil {
		var ret int32
		return ret
	}
	return *o.TimeStamp
}

// GetTimeStampOk returns a tuple with the TimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchHistoryData) GetTimeStampOk() (*int32, bool) {
	if o == nil || o.TimeStamp == nil {
		return nil, false
	}
	return o.TimeStamp, true
}

// HasTimeStamp returns a boolean if a field has been set.
func (o *KalturaBatchHistoryData) HasTimeStamp() bool {
	if o != nil && o.TimeStamp != nil {
		return true
	}

	return false
}

// SetTimeStamp gets a reference to the given int32 and assigns it to the TimeStamp field.
func (o *KalturaBatchHistoryData) SetTimeStamp(v int32) {
	o.TimeStamp = &v
}

// GetWorkerId returns the WorkerId field value if set, zero value otherwise.
func (o *KalturaBatchHistoryData) GetWorkerId() int32 {
	if o == nil || o.WorkerId == nil {
		var ret int32
		return ret
	}
	return *o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaBatchHistoryData) GetWorkerIdOk() (*int32, bool) {
	if o == nil || o.WorkerId == nil {
		return nil, false
	}
	return o.WorkerId, true
}

// HasWorkerId returns a boolean if a field has been set.
func (o *KalturaBatchHistoryData) HasWorkerId() bool {
	if o != nil && o.WorkerId != nil {
		return true
	}

	return false
}

// SetWorkerId gets a reference to the given int32 and assigns it to the WorkerId field.
func (o *KalturaBatchHistoryData) SetWorkerId(v int32) {
	o.WorkerId = &v
}

func (o KalturaBatchHistoryData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BatchIndex != nil {
		toSerialize["batchIndex"] = o.BatchIndex
	}
	if o.ErrNumber != nil {
		toSerialize["errNumber"] = o.ErrNumber
	}
	if o.ErrType != nil {
		toSerialize["errType"] = o.ErrType
	}
	if o.HostName != nil {
		toSerialize["hostName"] = o.HostName
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.SchedulerId != nil {
		toSerialize["schedulerId"] = o.SchedulerId
	}
	if o.SchedulerName != nil {
		toSerialize["schedulerName"] = o.SchedulerName
	}
	if o.SessionId != nil {
		toSerialize["sessionId"] = o.SessionId
	}
	if o.TimeStamp != nil {
		toSerialize["timeStamp"] = o.TimeStamp
	}
	if o.WorkerId != nil {
		toSerialize["workerId"] = o.WorkerId
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBatchHistoryData struct {
	value *KalturaBatchHistoryData
	isSet bool
}

func (v NullableKalturaBatchHistoryData) Get() *KalturaBatchHistoryData {
	return v.value
}

func (v *NullableKalturaBatchHistoryData) Set(val *KalturaBatchHistoryData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBatchHistoryData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBatchHistoryData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBatchHistoryData(val *KalturaBatchHistoryData) *NullableKalturaBatchHistoryData {
	return &NullableKalturaBatchHistoryData{value: val, isSet: true}
}

func (v NullableKalturaBatchHistoryData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBatchHistoryData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


