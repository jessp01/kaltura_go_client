/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaUserRoleFilter struct for KalturaUserRoleFilter
type KalturaUserRoleFilter struct {
	KalturaUserRoleBaseFilter
}

// NewKalturaUserRoleFilter instantiates a new KalturaUserRoleFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaUserRoleFilter() *KalturaUserRoleFilter {
	this := KalturaUserRoleFilter{}
	return &this
}

// NewKalturaUserRoleFilterWithDefaults instantiates a new KalturaUserRoleFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaUserRoleFilterWithDefaults() *KalturaUserRoleFilter {
	this := KalturaUserRoleFilter{}
	return &this
}

func (o KalturaUserRoleFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaUserRoleBaseFilter, errKalturaUserRoleBaseFilter := json.Marshal(o.KalturaUserRoleBaseFilter)
	if errKalturaUserRoleBaseFilter != nil {
		return []byte{}, errKalturaUserRoleBaseFilter
	}
	errKalturaUserRoleBaseFilter = json.Unmarshal([]byte(serializedKalturaUserRoleBaseFilter), &toSerialize)
	if errKalturaUserRoleBaseFilter != nil {
		return []byte{}, errKalturaUserRoleBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaUserRoleFilter struct {
	value *KalturaUserRoleFilter
	isSet bool
}

func (v NullableKalturaUserRoleFilter) Get() *KalturaUserRoleFilter {
	return v.value
}

func (v *NullableKalturaUserRoleFilter) Set(val *KalturaUserRoleFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaUserRoleFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaUserRoleFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaUserRoleFilter(val *KalturaUserRoleFilter) *NullableKalturaUserRoleFilter {
	return &NullableKalturaUserRoleFilter{value: val, isSet: true}
}

func (v NullableKalturaUserRoleFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaUserRoleFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


