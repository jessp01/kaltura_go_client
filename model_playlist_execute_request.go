/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PlaylistExecuteRequest struct for PlaylistExecuteRequest
type PlaylistExecuteRequest struct {
	Detailed *string `json:"detailed,omitempty"`
	Filter *KalturaMediaEntryFilterForPlaylist `json:"filter,omitempty"`
	Id string `json:"id"`
	Pager *KalturaFilterPager `json:"pager,omitempty"`
	PlaylistContext *KalturaContext `json:"playlistContext,omitempty"`
}

// NewPlaylistExecuteRequest instantiates a new PlaylistExecuteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaylistExecuteRequest(id string) *PlaylistExecuteRequest {
	this := PlaylistExecuteRequest{}
	this.Id = id
	return &this
}

// NewPlaylistExecuteRequestWithDefaults instantiates a new PlaylistExecuteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaylistExecuteRequestWithDefaults() *PlaylistExecuteRequest {
	this := PlaylistExecuteRequest{}
	return &this
}

// GetDetailed returns the Detailed field value if set, zero value otherwise.
func (o *PlaylistExecuteRequest) GetDetailed() string {
	if o == nil || o.Detailed == nil {
		var ret string
		return ret
	}
	return *o.Detailed
}

// GetDetailedOk returns a tuple with the Detailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaylistExecuteRequest) GetDetailedOk() (*string, bool) {
	if o == nil || o.Detailed == nil {
		return nil, false
	}
	return o.Detailed, true
}

// HasDetailed returns a boolean if a field has been set.
func (o *PlaylistExecuteRequest) HasDetailed() bool {
	if o != nil && o.Detailed != nil {
		return true
	}

	return false
}

// SetDetailed gets a reference to the given string and assigns it to the Detailed field.
func (o *PlaylistExecuteRequest) SetDetailed(v string) {
	o.Detailed = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *PlaylistExecuteRequest) GetFilter() KalturaMediaEntryFilterForPlaylist {
	if o == nil || o.Filter == nil {
		var ret KalturaMediaEntryFilterForPlaylist
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaylistExecuteRequest) GetFilterOk() (*KalturaMediaEntryFilterForPlaylist, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *PlaylistExecuteRequest) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given KalturaMediaEntryFilterForPlaylist and assigns it to the Filter field.
func (o *PlaylistExecuteRequest) SetFilter(v KalturaMediaEntryFilterForPlaylist) {
	o.Filter = &v
}

// GetId returns the Id field value
func (o *PlaylistExecuteRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PlaylistExecuteRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PlaylistExecuteRequest) SetId(v string) {
	o.Id = v
}

// GetPager returns the Pager field value if set, zero value otherwise.
func (o *PlaylistExecuteRequest) GetPager() KalturaFilterPager {
	if o == nil || o.Pager == nil {
		var ret KalturaFilterPager
		return ret
	}
	return *o.Pager
}

// GetPagerOk returns a tuple with the Pager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaylistExecuteRequest) GetPagerOk() (*KalturaFilterPager, bool) {
	if o == nil || o.Pager == nil {
		return nil, false
	}
	return o.Pager, true
}

// HasPager returns a boolean if a field has been set.
func (o *PlaylistExecuteRequest) HasPager() bool {
	if o != nil && o.Pager != nil {
		return true
	}

	return false
}

// SetPager gets a reference to the given KalturaFilterPager and assigns it to the Pager field.
func (o *PlaylistExecuteRequest) SetPager(v KalturaFilterPager) {
	o.Pager = &v
}

// GetPlaylistContext returns the PlaylistContext field value if set, zero value otherwise.
func (o *PlaylistExecuteRequest) GetPlaylistContext() KalturaContext {
	if o == nil || o.PlaylistContext == nil {
		var ret KalturaContext
		return ret
	}
	return *o.PlaylistContext
}

// GetPlaylistContextOk returns a tuple with the PlaylistContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaylistExecuteRequest) GetPlaylistContextOk() (*KalturaContext, bool) {
	if o == nil || o.PlaylistContext == nil {
		return nil, false
	}
	return o.PlaylistContext, true
}

// HasPlaylistContext returns a boolean if a field has been set.
func (o *PlaylistExecuteRequest) HasPlaylistContext() bool {
	if o != nil && o.PlaylistContext != nil {
		return true
	}

	return false
}

// SetPlaylistContext gets a reference to the given KalturaContext and assigns it to the PlaylistContext field.
func (o *PlaylistExecuteRequest) SetPlaylistContext(v KalturaContext) {
	o.PlaylistContext = &v
}

func (o PlaylistExecuteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Detailed != nil {
		toSerialize["detailed"] = o.Detailed
	}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Pager != nil {
		toSerialize["pager"] = o.Pager
	}
	if o.PlaylistContext != nil {
		toSerialize["playlistContext"] = o.PlaylistContext
	}
	return json.Marshal(toSerialize)
}

type NullablePlaylistExecuteRequest struct {
	value *PlaylistExecuteRequest
	isSet bool
}

func (v NullablePlaylistExecuteRequest) Get() *PlaylistExecuteRequest {
	return v.value
}

func (v *NullablePlaylistExecuteRequest) Set(val *PlaylistExecuteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaylistExecuteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaylistExecuteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaylistExecuteRequest(val *PlaylistExecuteRequest) *NullablePlaylistExecuteRequest {
	return &NullablePlaylistExecuteRequest{value: val, isSet: true}
}

func (v NullablePlaylistExecuteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaylistExecuteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


