/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VendorIntegrationUpdateRequest struct for VendorIntegrationUpdateRequest
type VendorIntegrationUpdateRequest struct {
	Id int32 `json:"id"`
	IntegrationSetting KalturaIntegrationSetting `json:"integrationSetting"`
}

// NewVendorIntegrationUpdateRequest instantiates a new VendorIntegrationUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVendorIntegrationUpdateRequest(id int32, integrationSetting KalturaIntegrationSetting) *VendorIntegrationUpdateRequest {
	this := VendorIntegrationUpdateRequest{}
	this.Id = id
	this.IntegrationSetting = integrationSetting
	return &this
}

// NewVendorIntegrationUpdateRequestWithDefaults instantiates a new VendorIntegrationUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVendorIntegrationUpdateRequestWithDefaults() *VendorIntegrationUpdateRequest {
	this := VendorIntegrationUpdateRequest{}
	return &this
}

// GetId returns the Id field value
func (o *VendorIntegrationUpdateRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VendorIntegrationUpdateRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VendorIntegrationUpdateRequest) SetId(v int32) {
	o.Id = v
}

// GetIntegrationSetting returns the IntegrationSetting field value
func (o *VendorIntegrationUpdateRequest) GetIntegrationSetting() KalturaIntegrationSetting {
	if o == nil {
		var ret KalturaIntegrationSetting
		return ret
	}

	return o.IntegrationSetting
}

// GetIntegrationSettingOk returns a tuple with the IntegrationSetting field value
// and a boolean to check if the value has been set.
func (o *VendorIntegrationUpdateRequest) GetIntegrationSettingOk() (*KalturaIntegrationSetting, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationSetting, true
}

// SetIntegrationSetting sets field value
func (o *VendorIntegrationUpdateRequest) SetIntegrationSetting(v KalturaIntegrationSetting) {
	o.IntegrationSetting = v
}

func (o VendorIntegrationUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["integrationSetting"] = o.IntegrationSetting
	}
	return json.Marshal(toSerialize)
}

type NullableVendorIntegrationUpdateRequest struct {
	value *VendorIntegrationUpdateRequest
	isSet bool
}

func (v NullableVendorIntegrationUpdateRequest) Get() *VendorIntegrationUpdateRequest {
	return v.value
}

func (v *NullableVendorIntegrationUpdateRequest) Set(val *VendorIntegrationUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVendorIntegrationUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVendorIntegrationUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVendorIntegrationUpdateRequest(val *VendorIntegrationUpdateRequest) *NullableVendorIntegrationUpdateRequest {
	return &NullableVendorIntegrationUpdateRequest{value: val, isSet: true}
}

func (v NullableVendorIntegrationUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVendorIntegrationUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


