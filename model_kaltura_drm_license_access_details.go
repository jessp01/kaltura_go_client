/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaDrmLicenseAccessDetails struct for KalturaDrmLicenseAccessDetails
type KalturaDrmLicenseAccessDetails struct {
	// playback window in seconds
	AbsoluteDuration *int32 `json:"absolute_duration,omitempty"`
	// movie duration in seconds
	Duration *int32 `json:"duration,omitempty"`
	LicenseParams []KalturaKeyValue `json:"licenseParams,omitempty"`
	// Drm policy name
	Policy *string `json:"policy,omitempty"`
}

// NewKalturaDrmLicenseAccessDetails instantiates a new KalturaDrmLicenseAccessDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaDrmLicenseAccessDetails() *KalturaDrmLicenseAccessDetails {
	this := KalturaDrmLicenseAccessDetails{}
	return &this
}

// NewKalturaDrmLicenseAccessDetailsWithDefaults instantiates a new KalturaDrmLicenseAccessDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaDrmLicenseAccessDetailsWithDefaults() *KalturaDrmLicenseAccessDetails {
	this := KalturaDrmLicenseAccessDetails{}
	return &this
}

// GetAbsoluteDuration returns the AbsoluteDuration field value if set, zero value otherwise.
func (o *KalturaDrmLicenseAccessDetails) GetAbsoluteDuration() int32 {
	if o == nil || o.AbsoluteDuration == nil {
		var ret int32
		return ret
	}
	return *o.AbsoluteDuration
}

// GetAbsoluteDurationOk returns a tuple with the AbsoluteDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDrmLicenseAccessDetails) GetAbsoluteDurationOk() (*int32, bool) {
	if o == nil || o.AbsoluteDuration == nil {
		return nil, false
	}
	return o.AbsoluteDuration, true
}

// HasAbsoluteDuration returns a boolean if a field has been set.
func (o *KalturaDrmLicenseAccessDetails) HasAbsoluteDuration() bool {
	if o != nil && o.AbsoluteDuration != nil {
		return true
	}

	return false
}

// SetAbsoluteDuration gets a reference to the given int32 and assigns it to the AbsoluteDuration field.
func (o *KalturaDrmLicenseAccessDetails) SetAbsoluteDuration(v int32) {
	o.AbsoluteDuration = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *KalturaDrmLicenseAccessDetails) GetDuration() int32 {
	if o == nil || o.Duration == nil {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDrmLicenseAccessDetails) GetDurationOk() (*int32, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *KalturaDrmLicenseAccessDetails) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *KalturaDrmLicenseAccessDetails) SetDuration(v int32) {
	o.Duration = &v
}

// GetLicenseParams returns the LicenseParams field value if set, zero value otherwise.
func (o *KalturaDrmLicenseAccessDetails) GetLicenseParams() []KalturaKeyValue {
	if o == nil || o.LicenseParams == nil {
		var ret []KalturaKeyValue
		return ret
	}
	return o.LicenseParams
}

// GetLicenseParamsOk returns a tuple with the LicenseParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDrmLicenseAccessDetails) GetLicenseParamsOk() ([]KalturaKeyValue, bool) {
	if o == nil || o.LicenseParams == nil {
		return nil, false
	}
	return o.LicenseParams, true
}

// HasLicenseParams returns a boolean if a field has been set.
func (o *KalturaDrmLicenseAccessDetails) HasLicenseParams() bool {
	if o != nil && o.LicenseParams != nil {
		return true
	}

	return false
}

// SetLicenseParams gets a reference to the given []KalturaKeyValue and assigns it to the LicenseParams field.
func (o *KalturaDrmLicenseAccessDetails) SetLicenseParams(v []KalturaKeyValue) {
	o.LicenseParams = v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *KalturaDrmLicenseAccessDetails) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDrmLicenseAccessDetails) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *KalturaDrmLicenseAccessDetails) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *KalturaDrmLicenseAccessDetails) SetPolicy(v string) {
	o.Policy = &v
}

func (o KalturaDrmLicenseAccessDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AbsoluteDuration != nil {
		toSerialize["absolute_duration"] = o.AbsoluteDuration
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.LicenseParams != nil {
		toSerialize["licenseParams"] = o.LicenseParams
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaDrmLicenseAccessDetails struct {
	value *KalturaDrmLicenseAccessDetails
	isSet bool
}

func (v NullableKalturaDrmLicenseAccessDetails) Get() *KalturaDrmLicenseAccessDetails {
	return v.value
}

func (v *NullableKalturaDrmLicenseAccessDetails) Set(val *KalturaDrmLicenseAccessDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaDrmLicenseAccessDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaDrmLicenseAccessDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaDrmLicenseAccessDetails(val *KalturaDrmLicenseAccessDetails) *NullableKalturaDrmLicenseAccessDetails {
	return &NullableKalturaDrmLicenseAccessDetails{value: val, isSet: true}
}

func (v NullableKalturaDrmLicenseAccessDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaDrmLicenseAccessDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


