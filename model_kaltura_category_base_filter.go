/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaCategoryBaseFilter `abstract`
type KalturaCategoryBaseFilter struct {
	KalturaRelatedFilter
}

// NewKalturaCategoryBaseFilter instantiates a new KalturaCategoryBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaCategoryBaseFilter() *KalturaCategoryBaseFilter {
	this := KalturaCategoryBaseFilter{}
	return &this
}

// NewKalturaCategoryBaseFilterWithDefaults instantiates a new KalturaCategoryBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaCategoryBaseFilterWithDefaults() *KalturaCategoryBaseFilter {
	this := KalturaCategoryBaseFilter{}
	return &this
}

func (o KalturaCategoryBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaRelatedFilter, errKalturaRelatedFilter := json.Marshal(o.KalturaRelatedFilter)
	if errKalturaRelatedFilter != nil {
		return []byte{}, errKalturaRelatedFilter
	}
	errKalturaRelatedFilter = json.Unmarshal([]byte(serializedKalturaRelatedFilter), &toSerialize)
	if errKalturaRelatedFilter != nil {
		return []byte{}, errKalturaRelatedFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaCategoryBaseFilter struct {
	value *KalturaCategoryBaseFilter
	isSet bool
}

func (v NullableKalturaCategoryBaseFilter) Get() *KalturaCategoryBaseFilter {
	return v.value
}

func (v *NullableKalturaCategoryBaseFilter) Set(val *KalturaCategoryBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaCategoryBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaCategoryBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaCategoryBaseFilter(val *KalturaCategoryBaseFilter) *NullableKalturaCategoryBaseFilter {
	return &NullableKalturaCategoryBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaCategoryBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaCategoryBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


