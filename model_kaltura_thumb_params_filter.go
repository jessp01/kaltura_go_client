/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaThumbParamsFilter struct for KalturaThumbParamsFilter
type KalturaThumbParamsFilter struct {
	KalturaThumbParamsBaseFilter
}

// NewKalturaThumbParamsFilter instantiates a new KalturaThumbParamsFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaThumbParamsFilter() *KalturaThumbParamsFilter {
	this := KalturaThumbParamsFilter{}
	return &this
}

// NewKalturaThumbParamsFilterWithDefaults instantiates a new KalturaThumbParamsFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaThumbParamsFilterWithDefaults() *KalturaThumbParamsFilter {
	this := KalturaThumbParamsFilter{}
	return &this
}

func (o KalturaThumbParamsFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaThumbParamsBaseFilter, errKalturaThumbParamsBaseFilter := json.Marshal(o.KalturaThumbParamsBaseFilter)
	if errKalturaThumbParamsBaseFilter != nil {
		return []byte{}, errKalturaThumbParamsBaseFilter
	}
	errKalturaThumbParamsBaseFilter = json.Unmarshal([]byte(serializedKalturaThumbParamsBaseFilter), &toSerialize)
	if errKalturaThumbParamsBaseFilter != nil {
		return []byte{}, errKalturaThumbParamsBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaThumbParamsFilter struct {
	value *KalturaThumbParamsFilter
	isSet bool
}

func (v NullableKalturaThumbParamsFilter) Get() *KalturaThumbParamsFilter {
	return v.value
}

func (v *NullableKalturaThumbParamsFilter) Set(val *KalturaThumbParamsFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaThumbParamsFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaThumbParamsFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaThumbParamsFilter(val *KalturaThumbParamsFilter) *NullableKalturaThumbParamsFilter {
	return &NullableKalturaThumbParamsFilter{value: val, isSet: true}
}

func (v NullableKalturaThumbParamsFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaThumbParamsFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


