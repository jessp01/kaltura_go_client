/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLike struct for KalturaLike
type KalturaLike struct {
	// The date of the like's creation
	CreatedAt *int32 `json:"createdAt,omitempty"`
	// The id of the entry that the like belongs to
	EntryId *string `json:"entryId,omitempty"`
	// The id of user that the like belongs to
	UserId *string `json:"userId,omitempty"`
}

// NewKalturaLike instantiates a new KalturaLike object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLike() *KalturaLike {
	this := KalturaLike{}
	return &this
}

// NewKalturaLikeWithDefaults instantiates a new KalturaLike object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLikeWithDefaults() *KalturaLike {
	this := KalturaLike{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaLike) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLike) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaLike) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaLike) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *KalturaLike) GetEntryId() string {
	if o == nil || o.EntryId == nil {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLike) GetEntryIdOk() (*string, bool) {
	if o == nil || o.EntryId == nil {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *KalturaLike) HasEntryId() bool {
	if o != nil && o.EntryId != nil {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *KalturaLike) SetEntryId(v string) {
	o.EntryId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *KalturaLike) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLike) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *KalturaLike) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *KalturaLike) SetUserId(v string) {
	o.UserId = &v
}

func (o KalturaLike) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.EntryId != nil {
		toSerialize["entryId"] = o.EntryId
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLike struct {
	value *KalturaLike
	isSet bool
}

func (v NullableKalturaLike) Get() *KalturaLike {
	return v.value
}

func (v *NullableKalturaLike) Set(val *KalturaLike) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLike) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLike) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLike(val *KalturaLike) *NullableKalturaLike {
	return &NullableKalturaLike{value: val, isSet: true}
}

func (v NullableKalturaLike) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLike) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


