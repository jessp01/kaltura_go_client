/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaIntegerField `abstract`  An int representation to return evaluated dynamic value
type KalturaIntegerField struct {
	KalturaIntegerValue
}

// NewKalturaIntegerField instantiates a new KalturaIntegerField object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaIntegerField() *KalturaIntegerField {
	this := KalturaIntegerField{}
	return &this
}

// NewKalturaIntegerFieldWithDefaults instantiates a new KalturaIntegerField object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaIntegerFieldWithDefaults() *KalturaIntegerField {
	this := KalturaIntegerField{}
	return &this
}

func (o KalturaIntegerField) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaIntegerValue, errKalturaIntegerValue := json.Marshal(o.KalturaIntegerValue)
	if errKalturaIntegerValue != nil {
		return []byte{}, errKalturaIntegerValue
	}
	errKalturaIntegerValue = json.Unmarshal([]byte(serializedKalturaIntegerValue), &toSerialize)
	if errKalturaIntegerValue != nil {
		return []byte{}, errKalturaIntegerValue
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaIntegerField struct {
	value *KalturaIntegerField
	isSet bool
}

func (v NullableKalturaIntegerField) Get() *KalturaIntegerField {
	return v.value
}

func (v *NullableKalturaIntegerField) Set(val *KalturaIntegerField) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaIntegerField) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaIntegerField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaIntegerField(val *KalturaIntegerField) *NullableKalturaIntegerField {
	return &NullableKalturaIntegerField{value: val, isSet: true}
}

func (v NullableKalturaIntegerField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaIntegerField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


