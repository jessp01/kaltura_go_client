/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AppTokenStartSessionRequest struct for AppTokenStartSessionRequest
type AppTokenStartSessionRequest struct {
	Expiry *int32 `json:"expiry,omitempty"`
	Id string `json:"id"`
	SessionPrivileges *string `json:"sessionPrivileges,omitempty"`
	TokenHash string `json:"tokenHash"`
	Type *int32 `json:"type,omitempty"`
	UserId *string `json:"userId,omitempty"`
}

// NewAppTokenStartSessionRequest instantiates a new AppTokenStartSessionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppTokenStartSessionRequest(id string, tokenHash string) *AppTokenStartSessionRequest {
	this := AppTokenStartSessionRequest{}
	this.Id = id
	this.TokenHash = tokenHash
	return &this
}

// NewAppTokenStartSessionRequestWithDefaults instantiates a new AppTokenStartSessionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppTokenStartSessionRequestWithDefaults() *AppTokenStartSessionRequest {
	this := AppTokenStartSessionRequest{}
	return &this
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *AppTokenStartSessionRequest) GetExpiry() int32 {
	if o == nil || o.Expiry == nil {
		var ret int32
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppTokenStartSessionRequest) GetExpiryOk() (*int32, bool) {
	if o == nil || o.Expiry == nil {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *AppTokenStartSessionRequest) HasExpiry() bool {
	if o != nil && o.Expiry != nil {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given int32 and assigns it to the Expiry field.
func (o *AppTokenStartSessionRequest) SetExpiry(v int32) {
	o.Expiry = &v
}

// GetId returns the Id field value
func (o *AppTokenStartSessionRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AppTokenStartSessionRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AppTokenStartSessionRequest) SetId(v string) {
	o.Id = v
}

// GetSessionPrivileges returns the SessionPrivileges field value if set, zero value otherwise.
func (o *AppTokenStartSessionRequest) GetSessionPrivileges() string {
	if o == nil || o.SessionPrivileges == nil {
		var ret string
		return ret
	}
	return *o.SessionPrivileges
}

// GetSessionPrivilegesOk returns a tuple with the SessionPrivileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppTokenStartSessionRequest) GetSessionPrivilegesOk() (*string, bool) {
	if o == nil || o.SessionPrivileges == nil {
		return nil, false
	}
	return o.SessionPrivileges, true
}

// HasSessionPrivileges returns a boolean if a field has been set.
func (o *AppTokenStartSessionRequest) HasSessionPrivileges() bool {
	if o != nil && o.SessionPrivileges != nil {
		return true
	}

	return false
}

// SetSessionPrivileges gets a reference to the given string and assigns it to the SessionPrivileges field.
func (o *AppTokenStartSessionRequest) SetSessionPrivileges(v string) {
	o.SessionPrivileges = &v
}

// GetTokenHash returns the TokenHash field value
func (o *AppTokenStartSessionRequest) GetTokenHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenHash
}

// GetTokenHashOk returns a tuple with the TokenHash field value
// and a boolean to check if the value has been set.
func (o *AppTokenStartSessionRequest) GetTokenHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TokenHash, true
}

// SetTokenHash sets field value
func (o *AppTokenStartSessionRequest) SetTokenHash(v string) {
	o.TokenHash = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AppTokenStartSessionRequest) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppTokenStartSessionRequest) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AppTokenStartSessionRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *AppTokenStartSessionRequest) SetType(v int32) {
	o.Type = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *AppTokenStartSessionRequest) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppTokenStartSessionRequest) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *AppTokenStartSessionRequest) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *AppTokenStartSessionRequest) SetUserId(v string) {
	o.UserId = &v
}

func (o AppTokenStartSessionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Expiry != nil {
		toSerialize["expiry"] = o.Expiry
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.SessionPrivileges != nil {
		toSerialize["sessionPrivileges"] = o.SessionPrivileges
	}
	if true {
		toSerialize["tokenHash"] = o.TokenHash
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableAppTokenStartSessionRequest struct {
	value *AppTokenStartSessionRequest
	isSet bool
}

func (v NullableAppTokenStartSessionRequest) Get() *AppTokenStartSessionRequest {
	return v.value
}

func (v *NullableAppTokenStartSessionRequest) Set(val *AppTokenStartSessionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAppTokenStartSessionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAppTokenStartSessionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppTokenStartSessionRequest(val *AppTokenStartSessionRequest) *NullableAppTokenStartSessionRequest {
	return &NullableAppTokenStartSessionRequest{value: val, isSet: true}
}

func (v NullableAppTokenStartSessionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppTokenStartSessionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


