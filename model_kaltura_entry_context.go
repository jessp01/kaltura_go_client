/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaEntryContext struct for KalturaEntryContext
type KalturaEntryContext struct {
	KalturaContext
}

// NewKalturaEntryContext instantiates a new KalturaEntryContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaEntryContext() *KalturaEntryContext {
	this := KalturaEntryContext{}
	return &this
}

// NewKalturaEntryContextWithDefaults instantiates a new KalturaEntryContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaEntryContextWithDefaults() *KalturaEntryContext {
	this := KalturaEntryContext{}
	return &this
}

func (o KalturaEntryContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaContext, errKalturaContext := json.Marshal(o.KalturaContext)
	if errKalturaContext != nil {
		return []byte{}, errKalturaContext
	}
	errKalturaContext = json.Unmarshal([]byte(serializedKalturaContext), &toSerialize)
	if errKalturaContext != nil {
		return []byte{}, errKalturaContext
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaEntryContext struct {
	value *KalturaEntryContext
	isSet bool
}

func (v NullableKalturaEntryContext) Get() *KalturaEntryContext {
	return v.value
}

func (v *NullableKalturaEntryContext) Set(val *KalturaEntryContext) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaEntryContext) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaEntryContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaEntryContext(val *KalturaEntryContext) *NullableKalturaEntryContext {
	return &NullableKalturaEntryContext{value: val, isSet: true}
}

func (v NullableKalturaEntryContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaEntryContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


