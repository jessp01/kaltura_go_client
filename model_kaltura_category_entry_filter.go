/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaCategoryEntryFilter struct for KalturaCategoryEntryFilter
type KalturaCategoryEntryFilter struct {
	KalturaCategoryEntryBaseFilter
}

// NewKalturaCategoryEntryFilter instantiates a new KalturaCategoryEntryFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaCategoryEntryFilter() *KalturaCategoryEntryFilter {
	this := KalturaCategoryEntryFilter{}
	return &this
}

// NewKalturaCategoryEntryFilterWithDefaults instantiates a new KalturaCategoryEntryFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaCategoryEntryFilterWithDefaults() *KalturaCategoryEntryFilter {
	this := KalturaCategoryEntryFilter{}
	return &this
}

func (o KalturaCategoryEntryFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaCategoryEntryBaseFilter, errKalturaCategoryEntryBaseFilter := json.Marshal(o.KalturaCategoryEntryBaseFilter)
	if errKalturaCategoryEntryBaseFilter != nil {
		return []byte{}, errKalturaCategoryEntryBaseFilter
	}
	errKalturaCategoryEntryBaseFilter = json.Unmarshal([]byte(serializedKalturaCategoryEntryBaseFilter), &toSerialize)
	if errKalturaCategoryEntryBaseFilter != nil {
		return []byte{}, errKalturaCategoryEntryBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaCategoryEntryFilter struct {
	value *KalturaCategoryEntryFilter
	isSet bool
}

func (v NullableKalturaCategoryEntryFilter) Get() *KalturaCategoryEntryFilter {
	return v.value
}

func (v *NullableKalturaCategoryEntryFilter) Set(val *KalturaCategoryEntryFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaCategoryEntryFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaCategoryEntryFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaCategoryEntryFilter(val *KalturaCategoryEntryFilter) *NullableKalturaCategoryEntryFilter {
	return &NullableKalturaCategoryEntryFilter{value: val, isSet: true}
}

func (v NullableKalturaCategoryEntryFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaCategoryEntryFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


