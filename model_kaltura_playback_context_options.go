/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPlaybackContextOptions Object which contains contextual entry-related data.
type KalturaPlaybackContextOptions struct {
	KalturaEntryContextDataParams
}

// NewKalturaPlaybackContextOptions instantiates a new KalturaPlaybackContextOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPlaybackContextOptions() *KalturaPlaybackContextOptions {
	this := KalturaPlaybackContextOptions{}
	return &this
}

// NewKalturaPlaybackContextOptionsWithDefaults instantiates a new KalturaPlaybackContextOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPlaybackContextOptionsWithDefaults() *KalturaPlaybackContextOptions {
	this := KalturaPlaybackContextOptions{}
	return &this
}

func (o KalturaPlaybackContextOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaEntryContextDataParams, errKalturaEntryContextDataParams := json.Marshal(o.KalturaEntryContextDataParams)
	if errKalturaEntryContextDataParams != nil {
		return []byte{}, errKalturaEntryContextDataParams
	}
	errKalturaEntryContextDataParams = json.Unmarshal([]byte(serializedKalturaEntryContextDataParams), &toSerialize)
	if errKalturaEntryContextDataParams != nil {
		return []byte{}, errKalturaEntryContextDataParams
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPlaybackContextOptions struct {
	value *KalturaPlaybackContextOptions
	isSet bool
}

func (v NullableKalturaPlaybackContextOptions) Get() *KalturaPlaybackContextOptions {
	return v.value
}

func (v *NullableKalturaPlaybackContextOptions) Set(val *KalturaPlaybackContextOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPlaybackContextOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPlaybackContextOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPlaybackContextOptions(val *KalturaPlaybackContextOptions) *NullableKalturaPlaybackContextOptions {
	return &NullableKalturaPlaybackContextOptions{value: val, isSet: true}
}

func (v NullableKalturaPlaybackContextOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPlaybackContextOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


