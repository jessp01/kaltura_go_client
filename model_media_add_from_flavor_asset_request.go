/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MediaAddFromFlavorAssetRequest struct for MediaAddFromFlavorAssetRequest
type MediaAddFromFlavorAssetRequest struct {
	MediaEntry *KalturaMediaEntry `json:"mediaEntry,omitempty"`
	SourceFlavorAssetId string `json:"sourceFlavorAssetId"`
}

// NewMediaAddFromFlavorAssetRequest instantiates a new MediaAddFromFlavorAssetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaAddFromFlavorAssetRequest(sourceFlavorAssetId string) *MediaAddFromFlavorAssetRequest {
	this := MediaAddFromFlavorAssetRequest{}
	this.SourceFlavorAssetId = sourceFlavorAssetId
	return &this
}

// NewMediaAddFromFlavorAssetRequestWithDefaults instantiates a new MediaAddFromFlavorAssetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaAddFromFlavorAssetRequestWithDefaults() *MediaAddFromFlavorAssetRequest {
	this := MediaAddFromFlavorAssetRequest{}
	return &this
}

// GetMediaEntry returns the MediaEntry field value if set, zero value otherwise.
func (o *MediaAddFromFlavorAssetRequest) GetMediaEntry() KalturaMediaEntry {
	if o == nil || o.MediaEntry == nil {
		var ret KalturaMediaEntry
		return ret
	}
	return *o.MediaEntry
}

// GetMediaEntryOk returns a tuple with the MediaEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaAddFromFlavorAssetRequest) GetMediaEntryOk() (*KalturaMediaEntry, bool) {
	if o == nil || o.MediaEntry == nil {
		return nil, false
	}
	return o.MediaEntry, true
}

// HasMediaEntry returns a boolean if a field has been set.
func (o *MediaAddFromFlavorAssetRequest) HasMediaEntry() bool {
	if o != nil && o.MediaEntry != nil {
		return true
	}

	return false
}

// SetMediaEntry gets a reference to the given KalturaMediaEntry and assigns it to the MediaEntry field.
func (o *MediaAddFromFlavorAssetRequest) SetMediaEntry(v KalturaMediaEntry) {
	o.MediaEntry = &v
}

// GetSourceFlavorAssetId returns the SourceFlavorAssetId field value
func (o *MediaAddFromFlavorAssetRequest) GetSourceFlavorAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceFlavorAssetId
}

// GetSourceFlavorAssetIdOk returns a tuple with the SourceFlavorAssetId field value
// and a boolean to check if the value has been set.
func (o *MediaAddFromFlavorAssetRequest) GetSourceFlavorAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceFlavorAssetId, true
}

// SetSourceFlavorAssetId sets field value
func (o *MediaAddFromFlavorAssetRequest) SetSourceFlavorAssetId(v string) {
	o.SourceFlavorAssetId = v
}

func (o MediaAddFromFlavorAssetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MediaEntry != nil {
		toSerialize["mediaEntry"] = o.MediaEntry
	}
	if true {
		toSerialize["sourceFlavorAssetId"] = o.SourceFlavorAssetId
	}
	return json.Marshal(toSerialize)
}

type NullableMediaAddFromFlavorAssetRequest struct {
	value *MediaAddFromFlavorAssetRequest
	isSet bool
}

func (v NullableMediaAddFromFlavorAssetRequest) Get() *MediaAddFromFlavorAssetRequest {
	return v.value
}

func (v *NullableMediaAddFromFlavorAssetRequest) Set(val *MediaAddFromFlavorAssetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaAddFromFlavorAssetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaAddFromFlavorAssetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaAddFromFlavorAssetRequest(val *MediaAddFromFlavorAssetRequest) *NullableMediaAddFromFlavorAssetRequest {
	return &NullableMediaAddFromFlavorAssetRequest{value: val, isSet: true}
}

func (v NullableMediaAddFromFlavorAssetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaAddFromFlavorAssetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


