/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EventNotificationTemplateSendCommandRequest struct for EventNotificationTemplateSendCommandRequest
type EventNotificationTemplateSendCommandRequest struct {
	Command string `json:"command"`
	NotificationTemplateSystemName string `json:"notificationTemplateSystemName"`
	PushNotificationParams KalturaPushNotificationParams `json:"pushNotificationParams"`
}

// NewEventNotificationTemplateSendCommandRequest instantiates a new EventNotificationTemplateSendCommandRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventNotificationTemplateSendCommandRequest(command string, notificationTemplateSystemName string, pushNotificationParams KalturaPushNotificationParams) *EventNotificationTemplateSendCommandRequest {
	this := EventNotificationTemplateSendCommandRequest{}
	this.Command = command
	this.NotificationTemplateSystemName = notificationTemplateSystemName
	this.PushNotificationParams = pushNotificationParams
	return &this
}

// NewEventNotificationTemplateSendCommandRequestWithDefaults instantiates a new EventNotificationTemplateSendCommandRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventNotificationTemplateSendCommandRequestWithDefaults() *EventNotificationTemplateSendCommandRequest {
	this := EventNotificationTemplateSendCommandRequest{}
	return &this
}

// GetCommand returns the Command field value
func (o *EventNotificationTemplateSendCommandRequest) GetCommand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *EventNotificationTemplateSendCommandRequest) GetCommandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *EventNotificationTemplateSendCommandRequest) SetCommand(v string) {
	o.Command = v
}

// GetNotificationTemplateSystemName returns the NotificationTemplateSystemName field value
func (o *EventNotificationTemplateSendCommandRequest) GetNotificationTemplateSystemName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotificationTemplateSystemName
}

// GetNotificationTemplateSystemNameOk returns a tuple with the NotificationTemplateSystemName field value
// and a boolean to check if the value has been set.
func (o *EventNotificationTemplateSendCommandRequest) GetNotificationTemplateSystemNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationTemplateSystemName, true
}

// SetNotificationTemplateSystemName sets field value
func (o *EventNotificationTemplateSendCommandRequest) SetNotificationTemplateSystemName(v string) {
	o.NotificationTemplateSystemName = v
}

// GetPushNotificationParams returns the PushNotificationParams field value
func (o *EventNotificationTemplateSendCommandRequest) GetPushNotificationParams() KalturaPushNotificationParams {
	if o == nil {
		var ret KalturaPushNotificationParams
		return ret
	}

	return o.PushNotificationParams
}

// GetPushNotificationParamsOk returns a tuple with the PushNotificationParams field value
// and a boolean to check if the value has been set.
func (o *EventNotificationTemplateSendCommandRequest) GetPushNotificationParamsOk() (*KalturaPushNotificationParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PushNotificationParams, true
}

// SetPushNotificationParams sets field value
func (o *EventNotificationTemplateSendCommandRequest) SetPushNotificationParams(v KalturaPushNotificationParams) {
	o.PushNotificationParams = v
}

func (o EventNotificationTemplateSendCommandRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["command"] = o.Command
	}
	if true {
		toSerialize["notificationTemplateSystemName"] = o.NotificationTemplateSystemName
	}
	if true {
		toSerialize["pushNotificationParams"] = o.PushNotificationParams
	}
	return json.Marshal(toSerialize)
}

type NullableEventNotificationTemplateSendCommandRequest struct {
	value *EventNotificationTemplateSendCommandRequest
	isSet bool
}

func (v NullableEventNotificationTemplateSendCommandRequest) Get() *EventNotificationTemplateSendCommandRequest {
	return v.value
}

func (v *NullableEventNotificationTemplateSendCommandRequest) Set(val *EventNotificationTemplateSendCommandRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEventNotificationTemplateSendCommandRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEventNotificationTemplateSendCommandRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventNotificationTemplateSendCommandRequest(val *EventNotificationTemplateSendCommandRequest) *NullableEventNotificationTemplateSendCommandRequest {
	return &NullableEventNotificationTemplateSendCommandRequest{value: val, isSet: true}
}

func (v NullableEventNotificationTemplateSendCommandRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventNotificationTemplateSendCommandRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


