/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSearchResultResponse struct for KalturaSearchResultResponse
type KalturaSearchResultResponse struct {
	// `readOnly`
	NeedMediaInfo *bool `json:"needMediaInfo,omitempty"`
	Objects []KalturaSearchResult `json:"objects,omitempty"`
}

// NewKalturaSearchResultResponse instantiates a new KalturaSearchResultResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSearchResultResponse() *KalturaSearchResultResponse {
	this := KalturaSearchResultResponse{}
	return &this
}

// NewKalturaSearchResultResponseWithDefaults instantiates a new KalturaSearchResultResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSearchResultResponseWithDefaults() *KalturaSearchResultResponse {
	this := KalturaSearchResultResponse{}
	return &this
}

// GetNeedMediaInfo returns the NeedMediaInfo field value if set, zero value otherwise.
func (o *KalturaSearchResultResponse) GetNeedMediaInfo() bool {
	if o == nil || o.NeedMediaInfo == nil {
		var ret bool
		return ret
	}
	return *o.NeedMediaInfo
}

// GetNeedMediaInfoOk returns a tuple with the NeedMediaInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSearchResultResponse) GetNeedMediaInfoOk() (*bool, bool) {
	if o == nil || o.NeedMediaInfo == nil {
		return nil, false
	}
	return o.NeedMediaInfo, true
}

// HasNeedMediaInfo returns a boolean if a field has been set.
func (o *KalturaSearchResultResponse) HasNeedMediaInfo() bool {
	if o != nil && o.NeedMediaInfo != nil {
		return true
	}

	return false
}

// SetNeedMediaInfo gets a reference to the given bool and assigns it to the NeedMediaInfo field.
func (o *KalturaSearchResultResponse) SetNeedMediaInfo(v bool) {
	o.NeedMediaInfo = &v
}

// GetObjects returns the Objects field value if set, zero value otherwise.
func (o *KalturaSearchResultResponse) GetObjects() []KalturaSearchResult {
	if o == nil || o.Objects == nil {
		var ret []KalturaSearchResult
		return ret
	}
	return o.Objects
}

// GetObjectsOk returns a tuple with the Objects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSearchResultResponse) GetObjectsOk() ([]KalturaSearchResult, bool) {
	if o == nil || o.Objects == nil {
		return nil, false
	}
	return o.Objects, true
}

// HasObjects returns a boolean if a field has been set.
func (o *KalturaSearchResultResponse) HasObjects() bool {
	if o != nil && o.Objects != nil {
		return true
	}

	return false
}

// SetObjects gets a reference to the given []KalturaSearchResult and assigns it to the Objects field.
func (o *KalturaSearchResultResponse) SetObjects(v []KalturaSearchResult) {
	o.Objects = v
}

func (o KalturaSearchResultResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NeedMediaInfo != nil {
		toSerialize["needMediaInfo"] = o.NeedMediaInfo
	}
	if o.Objects != nil {
		toSerialize["objects"] = o.Objects
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSearchResultResponse struct {
	value *KalturaSearchResultResponse
	isSet bool
}

func (v NullableKalturaSearchResultResponse) Get() *KalturaSearchResultResponse {
	return v.value
}

func (v *NullableKalturaSearchResultResponse) Set(val *KalturaSearchResultResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSearchResultResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSearchResultResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSearchResultResponse(val *KalturaSearchResultResponse) *NullableKalturaSearchResultResponse {
	return &NullableKalturaSearchResultResponse{value: val, isSet: true}
}

func (v NullableKalturaSearchResultResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSearchResultResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


