/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLiveEntryServerNodeRecordingInfo struct for KalturaLiveEntryServerNodeRecordingInfo
type KalturaLiveEntryServerNodeRecordingInfo struct {
	Duration *int32 `json:"duration,omitempty"`
	RecordedEntryId *string `json:"recordedEntryId,omitempty"`
	// Enum Type: `KalturaEntryServerNodeRecordingStatus`
	RecordingStatus *int32 `json:"recordingStatus,omitempty"`
}

// NewKalturaLiveEntryServerNodeRecordingInfo instantiates a new KalturaLiveEntryServerNodeRecordingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLiveEntryServerNodeRecordingInfo() *KalturaLiveEntryServerNodeRecordingInfo {
	this := KalturaLiveEntryServerNodeRecordingInfo{}
	return &this
}

// NewKalturaLiveEntryServerNodeRecordingInfoWithDefaults instantiates a new KalturaLiveEntryServerNodeRecordingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLiveEntryServerNodeRecordingInfoWithDefaults() *KalturaLiveEntryServerNodeRecordingInfo {
	this := KalturaLiveEntryServerNodeRecordingInfo{}
	return &this
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *KalturaLiveEntryServerNodeRecordingInfo) GetDuration() int32 {
	if o == nil || o.Duration == nil {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveEntryServerNodeRecordingInfo) GetDurationOk() (*int32, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *KalturaLiveEntryServerNodeRecordingInfo) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *KalturaLiveEntryServerNodeRecordingInfo) SetDuration(v int32) {
	o.Duration = &v
}

// GetRecordedEntryId returns the RecordedEntryId field value if set, zero value otherwise.
func (o *KalturaLiveEntryServerNodeRecordingInfo) GetRecordedEntryId() string {
	if o == nil || o.RecordedEntryId == nil {
		var ret string
		return ret
	}
	return *o.RecordedEntryId
}

// GetRecordedEntryIdOk returns a tuple with the RecordedEntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveEntryServerNodeRecordingInfo) GetRecordedEntryIdOk() (*string, bool) {
	if o == nil || o.RecordedEntryId == nil {
		return nil, false
	}
	return o.RecordedEntryId, true
}

// HasRecordedEntryId returns a boolean if a field has been set.
func (o *KalturaLiveEntryServerNodeRecordingInfo) HasRecordedEntryId() bool {
	if o != nil && o.RecordedEntryId != nil {
		return true
	}

	return false
}

// SetRecordedEntryId gets a reference to the given string and assigns it to the RecordedEntryId field.
func (o *KalturaLiveEntryServerNodeRecordingInfo) SetRecordedEntryId(v string) {
	o.RecordedEntryId = &v
}

// GetRecordingStatus returns the RecordingStatus field value if set, zero value otherwise.
func (o *KalturaLiveEntryServerNodeRecordingInfo) GetRecordingStatus() int32 {
	if o == nil || o.RecordingStatus == nil {
		var ret int32
		return ret
	}
	return *o.RecordingStatus
}

// GetRecordingStatusOk returns a tuple with the RecordingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveEntryServerNodeRecordingInfo) GetRecordingStatusOk() (*int32, bool) {
	if o == nil || o.RecordingStatus == nil {
		return nil, false
	}
	return o.RecordingStatus, true
}

// HasRecordingStatus returns a boolean if a field has been set.
func (o *KalturaLiveEntryServerNodeRecordingInfo) HasRecordingStatus() bool {
	if o != nil && o.RecordingStatus != nil {
		return true
	}

	return false
}

// SetRecordingStatus gets a reference to the given int32 and assigns it to the RecordingStatus field.
func (o *KalturaLiveEntryServerNodeRecordingInfo) SetRecordingStatus(v int32) {
	o.RecordingStatus = &v
}

func (o KalturaLiveEntryServerNodeRecordingInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.RecordedEntryId != nil {
		toSerialize["recordedEntryId"] = o.RecordedEntryId
	}
	if o.RecordingStatus != nil {
		toSerialize["recordingStatus"] = o.RecordingStatus
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLiveEntryServerNodeRecordingInfo struct {
	value *KalturaLiveEntryServerNodeRecordingInfo
	isSet bool
}

func (v NullableKalturaLiveEntryServerNodeRecordingInfo) Get() *KalturaLiveEntryServerNodeRecordingInfo {
	return v.value
}

func (v *NullableKalturaLiveEntryServerNodeRecordingInfo) Set(val *KalturaLiveEntryServerNodeRecordingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLiveEntryServerNodeRecordingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLiveEntryServerNodeRecordingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLiveEntryServerNodeRecordingInfo(val *KalturaLiveEntryServerNodeRecordingInfo) *NullableKalturaLiveEntryServerNodeRecordingInfo {
	return &NullableKalturaLiveEntryServerNodeRecordingInfo{value: val, isSet: true}
}

func (v NullableKalturaLiveEntryServerNodeRecordingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLiveEntryServerNodeRecordingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


