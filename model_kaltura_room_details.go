/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaRoomDetails struct for KalturaRoomDetails
type KalturaRoomDetails struct {
	EntryId *string `json:"entryId,omitempty"`
	Expiry *int32 `json:"expiry,omitempty"`
	ServerName *string `json:"serverName,omitempty"`
	ServerUrl *string `json:"serverUrl,omitempty"`
	Token *string `json:"token,omitempty"`
}

// NewKalturaRoomDetails instantiates a new KalturaRoomDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaRoomDetails() *KalturaRoomDetails {
	this := KalturaRoomDetails{}
	return &this
}

// NewKalturaRoomDetailsWithDefaults instantiates a new KalturaRoomDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaRoomDetailsWithDefaults() *KalturaRoomDetails {
	this := KalturaRoomDetails{}
	return &this
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *KalturaRoomDetails) GetEntryId() string {
	if o == nil || o.EntryId == nil {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaRoomDetails) GetEntryIdOk() (*string, bool) {
	if o == nil || o.EntryId == nil {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *KalturaRoomDetails) HasEntryId() bool {
	if o != nil && o.EntryId != nil {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *KalturaRoomDetails) SetEntryId(v string) {
	o.EntryId = &v
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *KalturaRoomDetails) GetExpiry() int32 {
	if o == nil || o.Expiry == nil {
		var ret int32
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaRoomDetails) GetExpiryOk() (*int32, bool) {
	if o == nil || o.Expiry == nil {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *KalturaRoomDetails) HasExpiry() bool {
	if o != nil && o.Expiry != nil {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given int32 and assigns it to the Expiry field.
func (o *KalturaRoomDetails) SetExpiry(v int32) {
	o.Expiry = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *KalturaRoomDetails) GetServerName() string {
	if o == nil || o.ServerName == nil {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaRoomDetails) GetServerNameOk() (*string, bool) {
	if o == nil || o.ServerName == nil {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *KalturaRoomDetails) HasServerName() bool {
	if o != nil && o.ServerName != nil {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *KalturaRoomDetails) SetServerName(v string) {
	o.ServerName = &v
}

// GetServerUrl returns the ServerUrl field value if set, zero value otherwise.
func (o *KalturaRoomDetails) GetServerUrl() string {
	if o == nil || o.ServerUrl == nil {
		var ret string
		return ret
	}
	return *o.ServerUrl
}

// GetServerUrlOk returns a tuple with the ServerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaRoomDetails) GetServerUrlOk() (*string, bool) {
	if o == nil || o.ServerUrl == nil {
		return nil, false
	}
	return o.ServerUrl, true
}

// HasServerUrl returns a boolean if a field has been set.
func (o *KalturaRoomDetails) HasServerUrl() bool {
	if o != nil && o.ServerUrl != nil {
		return true
	}

	return false
}

// SetServerUrl gets a reference to the given string and assigns it to the ServerUrl field.
func (o *KalturaRoomDetails) SetServerUrl(v string) {
	o.ServerUrl = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *KalturaRoomDetails) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaRoomDetails) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *KalturaRoomDetails) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *KalturaRoomDetails) SetToken(v string) {
	o.Token = &v
}

func (o KalturaRoomDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntryId != nil {
		toSerialize["entryId"] = o.EntryId
	}
	if o.Expiry != nil {
		toSerialize["expiry"] = o.Expiry
	}
	if o.ServerName != nil {
		toSerialize["serverName"] = o.ServerName
	}
	if o.ServerUrl != nil {
		toSerialize["serverUrl"] = o.ServerUrl
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaRoomDetails struct {
	value *KalturaRoomDetails
	isSet bool
}

func (v NullableKalturaRoomDetails) Get() *KalturaRoomDetails {
	return v.value
}

func (v *NullableKalturaRoomDetails) Set(val *KalturaRoomDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaRoomDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaRoomDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaRoomDetails(val *KalturaRoomDetails) *NullableKalturaRoomDetails {
	return &NullableKalturaRoomDetails{value: val, isSet: true}
}

func (v NullableKalturaRoomDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaRoomDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


