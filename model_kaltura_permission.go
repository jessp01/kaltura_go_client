/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPermission struct for KalturaPermission
type KalturaPermission struct {
	// `readOnly`
	CreatedAt *int32 `json:"createdAt,omitempty"`
	DependsOnPermissionNames *string `json:"dependsOnPermissionNames,omitempty"`
	Description *string `json:"description,omitempty"`
	FriendlyName *string `json:"friendlyName,omitempty"`
	// `readOnly`
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	PartnerGroup *string `json:"partnerGroup,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	PermissionItemsIds *string `json:"permissionItemsIds,omitempty"`
	// Enum Type: `KalturaPermissionStatus`
	Status *int32 `json:"status,omitempty"`
	Tags *string `json:"tags,omitempty"`
	// `readOnly`  Enum Type: `KalturaPermissionType`
	Type *int32 `json:"type,omitempty"`
	// `readOnly`
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
}

// NewKalturaPermission instantiates a new KalturaPermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPermission() *KalturaPermission {
	this := KalturaPermission{}
	return &this
}

// NewKalturaPermissionWithDefaults instantiates a new KalturaPermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPermissionWithDefaults() *KalturaPermission {
	this := KalturaPermission{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaPermission) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaPermission) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaPermission) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDependsOnPermissionNames returns the DependsOnPermissionNames field value if set, zero value otherwise.
func (o *KalturaPermission) GetDependsOnPermissionNames() string {
	if o == nil || o.DependsOnPermissionNames == nil {
		var ret string
		return ret
	}
	return *o.DependsOnPermissionNames
}

// GetDependsOnPermissionNamesOk returns a tuple with the DependsOnPermissionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetDependsOnPermissionNamesOk() (*string, bool) {
	if o == nil || o.DependsOnPermissionNames == nil {
		return nil, false
	}
	return o.DependsOnPermissionNames, true
}

// HasDependsOnPermissionNames returns a boolean if a field has been set.
func (o *KalturaPermission) HasDependsOnPermissionNames() bool {
	if o != nil && o.DependsOnPermissionNames != nil {
		return true
	}

	return false
}

// SetDependsOnPermissionNames gets a reference to the given string and assigns it to the DependsOnPermissionNames field.
func (o *KalturaPermission) SetDependsOnPermissionNames(v string) {
	o.DependsOnPermissionNames = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KalturaPermission) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KalturaPermission) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KalturaPermission) SetDescription(v string) {
	o.Description = &v
}

// GetFriendlyName returns the FriendlyName field value if set, zero value otherwise.
func (o *KalturaPermission) GetFriendlyName() string {
	if o == nil || o.FriendlyName == nil {
		var ret string
		return ret
	}
	return *o.FriendlyName
}

// GetFriendlyNameOk returns a tuple with the FriendlyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetFriendlyNameOk() (*string, bool) {
	if o == nil || o.FriendlyName == nil {
		return nil, false
	}
	return o.FriendlyName, true
}

// HasFriendlyName returns a boolean if a field has been set.
func (o *KalturaPermission) HasFriendlyName() bool {
	if o != nil && o.FriendlyName != nil {
		return true
	}

	return false
}

// SetFriendlyName gets a reference to the given string and assigns it to the FriendlyName field.
func (o *KalturaPermission) SetFriendlyName(v string) {
	o.FriendlyName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaPermission) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaPermission) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaPermission) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KalturaPermission) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KalturaPermission) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KalturaPermission) SetName(v string) {
	o.Name = &v
}

// GetPartnerGroup returns the PartnerGroup field value if set, zero value otherwise.
func (o *KalturaPermission) GetPartnerGroup() string {
	if o == nil || o.PartnerGroup == nil {
		var ret string
		return ret
	}
	return *o.PartnerGroup
}

// GetPartnerGroupOk returns a tuple with the PartnerGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetPartnerGroupOk() (*string, bool) {
	if o == nil || o.PartnerGroup == nil {
		return nil, false
	}
	return o.PartnerGroup, true
}

// HasPartnerGroup returns a boolean if a field has been set.
func (o *KalturaPermission) HasPartnerGroup() bool {
	if o != nil && o.PartnerGroup != nil {
		return true
	}

	return false
}

// SetPartnerGroup gets a reference to the given string and assigns it to the PartnerGroup field.
func (o *KalturaPermission) SetPartnerGroup(v string) {
	o.PartnerGroup = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaPermission) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaPermission) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaPermission) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetPermissionItemsIds returns the PermissionItemsIds field value if set, zero value otherwise.
func (o *KalturaPermission) GetPermissionItemsIds() string {
	if o == nil || o.PermissionItemsIds == nil {
		var ret string
		return ret
	}
	return *o.PermissionItemsIds
}

// GetPermissionItemsIdsOk returns a tuple with the PermissionItemsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetPermissionItemsIdsOk() (*string, bool) {
	if o == nil || o.PermissionItemsIds == nil {
		return nil, false
	}
	return o.PermissionItemsIds, true
}

// HasPermissionItemsIds returns a boolean if a field has been set.
func (o *KalturaPermission) HasPermissionItemsIds() bool {
	if o != nil && o.PermissionItemsIds != nil {
		return true
	}

	return false
}

// SetPermissionItemsIds gets a reference to the given string and assigns it to the PermissionItemsIds field.
func (o *KalturaPermission) SetPermissionItemsIds(v string) {
	o.PermissionItemsIds = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaPermission) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaPermission) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KalturaPermission) SetStatus(v int32) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *KalturaPermission) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *KalturaPermission) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *KalturaPermission) SetTags(v string) {
	o.Tags = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaPermission) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaPermission) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *KalturaPermission) SetType(v int32) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaPermission) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPermission) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaPermission) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaPermission) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

func (o KalturaPermission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.DependsOnPermissionNames != nil {
		toSerialize["dependsOnPermissionNames"] = o.DependsOnPermissionNames
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.FriendlyName != nil {
		toSerialize["friendlyName"] = o.FriendlyName
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PartnerGroup != nil {
		toSerialize["partnerGroup"] = o.PartnerGroup
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.PermissionItemsIds != nil {
		toSerialize["permissionItemsIds"] = o.PermissionItemsIds
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPermission struct {
	value *KalturaPermission
	isSet bool
}

func (v NullableKalturaPermission) Get() *KalturaPermission {
	return v.value
}

func (v *NullableKalturaPermission) Set(val *KalturaPermission) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPermission) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPermission(val *KalturaPermission) *NullableKalturaPermission {
	return &NullableKalturaPermission{value: val, isSet: true}
}

func (v NullableKalturaPermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


