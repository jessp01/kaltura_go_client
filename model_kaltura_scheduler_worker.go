/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSchedulerWorker struct for KalturaSchedulerWorker
type KalturaSchedulerWorker struct {
	// Avarage time between creation and queue time
	AvgWait *int32 `json:"avgWait,omitempty"`
	// Avarage time between queue time end finish time
	AvgWork *int32 `json:"avgWork,omitempty"`
	Configs []KalturaSchedulerConfig `json:"configs,omitempty"`
	// The id as configured in the batch config
	ConfiguredId *int32 `json:"configuredId,omitempty"`
	// `readOnly`  The id of the Worker
	Id *int32 `json:"id,omitempty"`
	// last status time
	LastStatus *int32 `json:"lastStatus,omitempty"`
	// last status formated
	LastStatusStr *string `json:"lastStatusStr,omitempty"`
	LockedJobs []KalturaBatchJob `json:"lockedJobs,omitempty"`
	// The scheduler name
	Name *string `json:"name,omitempty"`
	// The id of the scheduler as configured in the batch config
	SchedulerConfiguredId *int32 `json:"schedulerConfiguredId,omitempty"`
	// The id of the Scheduler
	SchedulerId *int32 `json:"schedulerId,omitempty"`
	Statuses []KalturaSchedulerStatus `json:"statuses,omitempty"`
	// Enum Type: `KalturaBatchJobType`  The worker type
	Type *string `json:"type,omitempty"`
	// The friendly name of the type
	TypeName *string `json:"typeName,omitempty"`
}

// NewKalturaSchedulerWorker instantiates a new KalturaSchedulerWorker object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSchedulerWorker() *KalturaSchedulerWorker {
	this := KalturaSchedulerWorker{}
	return &this
}

// NewKalturaSchedulerWorkerWithDefaults instantiates a new KalturaSchedulerWorker object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSchedulerWorkerWithDefaults() *KalturaSchedulerWorker {
	this := KalturaSchedulerWorker{}
	return &this
}

// GetAvgWait returns the AvgWait field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetAvgWait() int32 {
	if o == nil || o.AvgWait == nil {
		var ret int32
		return ret
	}
	return *o.AvgWait
}

// GetAvgWaitOk returns a tuple with the AvgWait field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetAvgWaitOk() (*int32, bool) {
	if o == nil || o.AvgWait == nil {
		return nil, false
	}
	return o.AvgWait, true
}

// HasAvgWait returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasAvgWait() bool {
	if o != nil && o.AvgWait != nil {
		return true
	}

	return false
}

// SetAvgWait gets a reference to the given int32 and assigns it to the AvgWait field.
func (o *KalturaSchedulerWorker) SetAvgWait(v int32) {
	o.AvgWait = &v
}

// GetAvgWork returns the AvgWork field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetAvgWork() int32 {
	if o == nil || o.AvgWork == nil {
		var ret int32
		return ret
	}
	return *o.AvgWork
}

// GetAvgWorkOk returns a tuple with the AvgWork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetAvgWorkOk() (*int32, bool) {
	if o == nil || o.AvgWork == nil {
		return nil, false
	}
	return o.AvgWork, true
}

// HasAvgWork returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasAvgWork() bool {
	if o != nil && o.AvgWork != nil {
		return true
	}

	return false
}

// SetAvgWork gets a reference to the given int32 and assigns it to the AvgWork field.
func (o *KalturaSchedulerWorker) SetAvgWork(v int32) {
	o.AvgWork = &v
}

// GetConfigs returns the Configs field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetConfigs() []KalturaSchedulerConfig {
	if o == nil || o.Configs == nil {
		var ret []KalturaSchedulerConfig
		return ret
	}
	return o.Configs
}

// GetConfigsOk returns a tuple with the Configs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetConfigsOk() ([]KalturaSchedulerConfig, bool) {
	if o == nil || o.Configs == nil {
		return nil, false
	}
	return o.Configs, true
}

// HasConfigs returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasConfigs() bool {
	if o != nil && o.Configs != nil {
		return true
	}

	return false
}

// SetConfigs gets a reference to the given []KalturaSchedulerConfig and assigns it to the Configs field.
func (o *KalturaSchedulerWorker) SetConfigs(v []KalturaSchedulerConfig) {
	o.Configs = v
}

// GetConfiguredId returns the ConfiguredId field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetConfiguredId() int32 {
	if o == nil || o.ConfiguredId == nil {
		var ret int32
		return ret
	}
	return *o.ConfiguredId
}

// GetConfiguredIdOk returns a tuple with the ConfiguredId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetConfiguredIdOk() (*int32, bool) {
	if o == nil || o.ConfiguredId == nil {
		return nil, false
	}
	return o.ConfiguredId, true
}

// HasConfiguredId returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasConfiguredId() bool {
	if o != nil && o.ConfiguredId != nil {
		return true
	}

	return false
}

// SetConfiguredId gets a reference to the given int32 and assigns it to the ConfiguredId field.
func (o *KalturaSchedulerWorker) SetConfiguredId(v int32) {
	o.ConfiguredId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaSchedulerWorker) SetId(v int32) {
	o.Id = &v
}

// GetLastStatus returns the LastStatus field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetLastStatus() int32 {
	if o == nil || o.LastStatus == nil {
		var ret int32
		return ret
	}
	return *o.LastStatus
}

// GetLastStatusOk returns a tuple with the LastStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetLastStatusOk() (*int32, bool) {
	if o == nil || o.LastStatus == nil {
		return nil, false
	}
	return o.LastStatus, true
}

// HasLastStatus returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasLastStatus() bool {
	if o != nil && o.LastStatus != nil {
		return true
	}

	return false
}

// SetLastStatus gets a reference to the given int32 and assigns it to the LastStatus field.
func (o *KalturaSchedulerWorker) SetLastStatus(v int32) {
	o.LastStatus = &v
}

// GetLastStatusStr returns the LastStatusStr field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetLastStatusStr() string {
	if o == nil || o.LastStatusStr == nil {
		var ret string
		return ret
	}
	return *o.LastStatusStr
}

// GetLastStatusStrOk returns a tuple with the LastStatusStr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetLastStatusStrOk() (*string, bool) {
	if o == nil || o.LastStatusStr == nil {
		return nil, false
	}
	return o.LastStatusStr, true
}

// HasLastStatusStr returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasLastStatusStr() bool {
	if o != nil && o.LastStatusStr != nil {
		return true
	}

	return false
}

// SetLastStatusStr gets a reference to the given string and assigns it to the LastStatusStr field.
func (o *KalturaSchedulerWorker) SetLastStatusStr(v string) {
	o.LastStatusStr = &v
}

// GetLockedJobs returns the LockedJobs field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetLockedJobs() []KalturaBatchJob {
	if o == nil || o.LockedJobs == nil {
		var ret []KalturaBatchJob
		return ret
	}
	return o.LockedJobs
}

// GetLockedJobsOk returns a tuple with the LockedJobs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetLockedJobsOk() ([]KalturaBatchJob, bool) {
	if o == nil || o.LockedJobs == nil {
		return nil, false
	}
	return o.LockedJobs, true
}

// HasLockedJobs returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasLockedJobs() bool {
	if o != nil && o.LockedJobs != nil {
		return true
	}

	return false
}

// SetLockedJobs gets a reference to the given []KalturaBatchJob and assigns it to the LockedJobs field.
func (o *KalturaSchedulerWorker) SetLockedJobs(v []KalturaBatchJob) {
	o.LockedJobs = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KalturaSchedulerWorker) SetName(v string) {
	o.Name = &v
}

// GetSchedulerConfiguredId returns the SchedulerConfiguredId field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetSchedulerConfiguredId() int32 {
	if o == nil || o.SchedulerConfiguredId == nil {
		var ret int32
		return ret
	}
	return *o.SchedulerConfiguredId
}

// GetSchedulerConfiguredIdOk returns a tuple with the SchedulerConfiguredId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetSchedulerConfiguredIdOk() (*int32, bool) {
	if o == nil || o.SchedulerConfiguredId == nil {
		return nil, false
	}
	return o.SchedulerConfiguredId, true
}

// HasSchedulerConfiguredId returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasSchedulerConfiguredId() bool {
	if o != nil && o.SchedulerConfiguredId != nil {
		return true
	}

	return false
}

// SetSchedulerConfiguredId gets a reference to the given int32 and assigns it to the SchedulerConfiguredId field.
func (o *KalturaSchedulerWorker) SetSchedulerConfiguredId(v int32) {
	o.SchedulerConfiguredId = &v
}

// GetSchedulerId returns the SchedulerId field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetSchedulerId() int32 {
	if o == nil || o.SchedulerId == nil {
		var ret int32
		return ret
	}
	return *o.SchedulerId
}

// GetSchedulerIdOk returns a tuple with the SchedulerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetSchedulerIdOk() (*int32, bool) {
	if o == nil || o.SchedulerId == nil {
		return nil, false
	}
	return o.SchedulerId, true
}

// HasSchedulerId returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasSchedulerId() bool {
	if o != nil && o.SchedulerId != nil {
		return true
	}

	return false
}

// SetSchedulerId gets a reference to the given int32 and assigns it to the SchedulerId field.
func (o *KalturaSchedulerWorker) SetSchedulerId(v int32) {
	o.SchedulerId = &v
}

// GetStatuses returns the Statuses field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetStatuses() []KalturaSchedulerStatus {
	if o == nil || o.Statuses == nil {
		var ret []KalturaSchedulerStatus
		return ret
	}
	return o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetStatusesOk() ([]KalturaSchedulerStatus, bool) {
	if o == nil || o.Statuses == nil {
		return nil, false
	}
	return o.Statuses, true
}

// HasStatuses returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasStatuses() bool {
	if o != nil && o.Statuses != nil {
		return true
	}

	return false
}

// SetStatuses gets a reference to the given []KalturaSchedulerStatus and assigns it to the Statuses field.
func (o *KalturaSchedulerWorker) SetStatuses(v []KalturaSchedulerStatus) {
	o.Statuses = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *KalturaSchedulerWorker) SetType(v string) {
	o.Type = &v
}

// GetTypeName returns the TypeName field value if set, zero value otherwise.
func (o *KalturaSchedulerWorker) GetTypeName() string {
	if o == nil || o.TypeName == nil {
		var ret string
		return ret
	}
	return *o.TypeName
}

// GetTypeNameOk returns a tuple with the TypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerWorker) GetTypeNameOk() (*string, bool) {
	if o == nil || o.TypeName == nil {
		return nil, false
	}
	return o.TypeName, true
}

// HasTypeName returns a boolean if a field has been set.
func (o *KalturaSchedulerWorker) HasTypeName() bool {
	if o != nil && o.TypeName != nil {
		return true
	}

	return false
}

// SetTypeName gets a reference to the given string and assigns it to the TypeName field.
func (o *KalturaSchedulerWorker) SetTypeName(v string) {
	o.TypeName = &v
}

func (o KalturaSchedulerWorker) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvgWait != nil {
		toSerialize["avgWait"] = o.AvgWait
	}
	if o.AvgWork != nil {
		toSerialize["avgWork"] = o.AvgWork
	}
	if o.Configs != nil {
		toSerialize["configs"] = o.Configs
	}
	if o.ConfiguredId != nil {
		toSerialize["configuredId"] = o.ConfiguredId
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LastStatus != nil {
		toSerialize["lastStatus"] = o.LastStatus
	}
	if o.LastStatusStr != nil {
		toSerialize["lastStatusStr"] = o.LastStatusStr
	}
	if o.LockedJobs != nil {
		toSerialize["lockedJobs"] = o.LockedJobs
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.SchedulerConfiguredId != nil {
		toSerialize["schedulerConfiguredId"] = o.SchedulerConfiguredId
	}
	if o.SchedulerId != nil {
		toSerialize["schedulerId"] = o.SchedulerId
	}
	if o.Statuses != nil {
		toSerialize["statuses"] = o.Statuses
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.TypeName != nil {
		toSerialize["typeName"] = o.TypeName
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSchedulerWorker struct {
	value *KalturaSchedulerWorker
	isSet bool
}

func (v NullableKalturaSchedulerWorker) Get() *KalturaSchedulerWorker {
	return v.value
}

func (v *NullableKalturaSchedulerWorker) Set(val *KalturaSchedulerWorker) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSchedulerWorker) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSchedulerWorker) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSchedulerWorker(val *KalturaSchedulerWorker) *NullableKalturaSchedulerWorker {
	return &NullableKalturaSchedulerWorker{value: val, isSet: true}
}

func (v NullableKalturaSchedulerWorker) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSchedulerWorker) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


