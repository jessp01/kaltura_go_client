/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchAddBulkUploadResultRequest struct for BatchAddBulkUploadResultRequest
type BatchAddBulkUploadResultRequest struct {
	BulkUploadResult KalturaBulkUploadResult `json:"bulkUploadResult"`
	PluginDataArray []KalturaBulkUploadPluginData `json:"pluginDataArray,omitempty"`
}

// NewBatchAddBulkUploadResultRequest instantiates a new BatchAddBulkUploadResultRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchAddBulkUploadResultRequest(bulkUploadResult KalturaBulkUploadResult) *BatchAddBulkUploadResultRequest {
	this := BatchAddBulkUploadResultRequest{}
	this.BulkUploadResult = bulkUploadResult
	return &this
}

// NewBatchAddBulkUploadResultRequestWithDefaults instantiates a new BatchAddBulkUploadResultRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchAddBulkUploadResultRequestWithDefaults() *BatchAddBulkUploadResultRequest {
	this := BatchAddBulkUploadResultRequest{}
	return &this
}

// GetBulkUploadResult returns the BulkUploadResult field value
func (o *BatchAddBulkUploadResultRequest) GetBulkUploadResult() KalturaBulkUploadResult {
	if o == nil {
		var ret KalturaBulkUploadResult
		return ret
	}

	return o.BulkUploadResult
}

// GetBulkUploadResultOk returns a tuple with the BulkUploadResult field value
// and a boolean to check if the value has been set.
func (o *BatchAddBulkUploadResultRequest) GetBulkUploadResultOk() (*KalturaBulkUploadResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BulkUploadResult, true
}

// SetBulkUploadResult sets field value
func (o *BatchAddBulkUploadResultRequest) SetBulkUploadResult(v KalturaBulkUploadResult) {
	o.BulkUploadResult = v
}

// GetPluginDataArray returns the PluginDataArray field value if set, zero value otherwise.
func (o *BatchAddBulkUploadResultRequest) GetPluginDataArray() []KalturaBulkUploadPluginData {
	if o == nil || o.PluginDataArray == nil {
		var ret []KalturaBulkUploadPluginData
		return ret
	}
	return o.PluginDataArray
}

// GetPluginDataArrayOk returns a tuple with the PluginDataArray field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchAddBulkUploadResultRequest) GetPluginDataArrayOk() ([]KalturaBulkUploadPluginData, bool) {
	if o == nil || o.PluginDataArray == nil {
		return nil, false
	}
	return o.PluginDataArray, true
}

// HasPluginDataArray returns a boolean if a field has been set.
func (o *BatchAddBulkUploadResultRequest) HasPluginDataArray() bool {
	if o != nil && o.PluginDataArray != nil {
		return true
	}

	return false
}

// SetPluginDataArray gets a reference to the given []KalturaBulkUploadPluginData and assigns it to the PluginDataArray field.
func (o *BatchAddBulkUploadResultRequest) SetPluginDataArray(v []KalturaBulkUploadPluginData) {
	o.PluginDataArray = v
}

func (o BatchAddBulkUploadResultRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bulkUploadResult"] = o.BulkUploadResult
	}
	if o.PluginDataArray != nil {
		toSerialize["pluginDataArray"] = o.PluginDataArray
	}
	return json.Marshal(toSerialize)
}

type NullableBatchAddBulkUploadResultRequest struct {
	value *BatchAddBulkUploadResultRequest
	isSet bool
}

func (v NullableBatchAddBulkUploadResultRequest) Get() *BatchAddBulkUploadResultRequest {
	return v.value
}

func (v *NullableBatchAddBulkUploadResultRequest) Set(val *BatchAddBulkUploadResultRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchAddBulkUploadResultRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchAddBulkUploadResultRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchAddBulkUploadResultRequest(val *BatchAddBulkUploadResultRequest) *NullableBatchAddBulkUploadResultRequest {
	return &NullableBatchAddBulkUploadResultRequest{value: val, isSet: true}
}

func (v NullableBatchAddBulkUploadResultRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchAddBulkUploadResultRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


