/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchCountBulkUploadEntriesRequest struct for BatchCountBulkUploadEntriesRequest
type BatchCountBulkUploadEntriesRequest struct {
	BulkUploadJobId int32 `json:"bulkUploadJobId"`
	BulkUploadObjectType *string `json:"bulkUploadObjectType,omitempty"`
}

// NewBatchCountBulkUploadEntriesRequest instantiates a new BatchCountBulkUploadEntriesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchCountBulkUploadEntriesRequest(bulkUploadJobId int32) *BatchCountBulkUploadEntriesRequest {
	this := BatchCountBulkUploadEntriesRequest{}
	this.BulkUploadJobId = bulkUploadJobId
	return &this
}

// NewBatchCountBulkUploadEntriesRequestWithDefaults instantiates a new BatchCountBulkUploadEntriesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchCountBulkUploadEntriesRequestWithDefaults() *BatchCountBulkUploadEntriesRequest {
	this := BatchCountBulkUploadEntriesRequest{}
	return &this
}

// GetBulkUploadJobId returns the BulkUploadJobId field value
func (o *BatchCountBulkUploadEntriesRequest) GetBulkUploadJobId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BulkUploadJobId
}

// GetBulkUploadJobIdOk returns a tuple with the BulkUploadJobId field value
// and a boolean to check if the value has been set.
func (o *BatchCountBulkUploadEntriesRequest) GetBulkUploadJobIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BulkUploadJobId, true
}

// SetBulkUploadJobId sets field value
func (o *BatchCountBulkUploadEntriesRequest) SetBulkUploadJobId(v int32) {
	o.BulkUploadJobId = v
}

// GetBulkUploadObjectType returns the BulkUploadObjectType field value if set, zero value otherwise.
func (o *BatchCountBulkUploadEntriesRequest) GetBulkUploadObjectType() string {
	if o == nil || o.BulkUploadObjectType == nil {
		var ret string
		return ret
	}
	return *o.BulkUploadObjectType
}

// GetBulkUploadObjectTypeOk returns a tuple with the BulkUploadObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchCountBulkUploadEntriesRequest) GetBulkUploadObjectTypeOk() (*string, bool) {
	if o == nil || o.BulkUploadObjectType == nil {
		return nil, false
	}
	return o.BulkUploadObjectType, true
}

// HasBulkUploadObjectType returns a boolean if a field has been set.
func (o *BatchCountBulkUploadEntriesRequest) HasBulkUploadObjectType() bool {
	if o != nil && o.BulkUploadObjectType != nil {
		return true
	}

	return false
}

// SetBulkUploadObjectType gets a reference to the given string and assigns it to the BulkUploadObjectType field.
func (o *BatchCountBulkUploadEntriesRequest) SetBulkUploadObjectType(v string) {
	o.BulkUploadObjectType = &v
}

func (o BatchCountBulkUploadEntriesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bulkUploadJobId"] = o.BulkUploadJobId
	}
	if o.BulkUploadObjectType != nil {
		toSerialize["bulkUploadObjectType"] = o.BulkUploadObjectType
	}
	return json.Marshal(toSerialize)
}

type NullableBatchCountBulkUploadEntriesRequest struct {
	value *BatchCountBulkUploadEntriesRequest
	isSet bool
}

func (v NullableBatchCountBulkUploadEntriesRequest) Get() *BatchCountBulkUploadEntriesRequest {
	return v.value
}

func (v *NullableBatchCountBulkUploadEntriesRequest) Set(val *BatchCountBulkUploadEntriesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchCountBulkUploadEntriesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchCountBulkUploadEntriesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchCountBulkUploadEntriesRequest(val *BatchCountBulkUploadEntriesRequest) *NullableBatchCountBulkUploadEntriesRequest {
	return &NullableBatchCountBulkUploadEntriesRequest{value: val, isSet: true}
}

func (v NullableBatchCountBulkUploadEntriesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchCountBulkUploadEntriesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


