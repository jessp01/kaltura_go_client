/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaESearchUserOperator struct for KalturaESearchUserOperator
type KalturaESearchUserOperator struct {
	KalturaESearchUserBaseItem
}

// NewKalturaESearchUserOperator instantiates a new KalturaESearchUserOperator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaESearchUserOperator() *KalturaESearchUserOperator {
	this := KalturaESearchUserOperator{}
	return &this
}

// NewKalturaESearchUserOperatorWithDefaults instantiates a new KalturaESearchUserOperator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaESearchUserOperatorWithDefaults() *KalturaESearchUserOperator {
	this := KalturaESearchUserOperator{}
	return &this
}

func (o KalturaESearchUserOperator) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaESearchUserBaseItem, errKalturaESearchUserBaseItem := json.Marshal(o.KalturaESearchUserBaseItem)
	if errKalturaESearchUserBaseItem != nil {
		return []byte{}, errKalturaESearchUserBaseItem
	}
	errKalturaESearchUserBaseItem = json.Unmarshal([]byte(serializedKalturaESearchUserBaseItem), &toSerialize)
	if errKalturaESearchUserBaseItem != nil {
		return []byte{}, errKalturaESearchUserBaseItem
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaESearchUserOperator struct {
	value *KalturaESearchUserOperator
	isSet bool
}

func (v NullableKalturaESearchUserOperator) Get() *KalturaESearchUserOperator {
	return v.value
}

func (v *NullableKalturaESearchUserOperator) Set(val *KalturaESearchUserOperator) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaESearchUserOperator) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaESearchUserOperator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaESearchUserOperator(val *KalturaESearchUserOperator) *NullableKalturaESearchUserOperator {
	return &NullableKalturaESearchUserOperator{value: val, isSet: true}
}

func (v NullableKalturaESearchUserOperator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaESearchUserOperator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


