/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchLogConversionRequest struct for BatchLogConversionRequest
type BatchLogConversionRequest struct {
	Data string `json:"data"`
	FlavorAssetId string `json:"flavorAssetId"`
}

// NewBatchLogConversionRequest instantiates a new BatchLogConversionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchLogConversionRequest(data string, flavorAssetId string) *BatchLogConversionRequest {
	this := BatchLogConversionRequest{}
	this.Data = data
	this.FlavorAssetId = flavorAssetId
	return &this
}

// NewBatchLogConversionRequestWithDefaults instantiates a new BatchLogConversionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchLogConversionRequestWithDefaults() *BatchLogConversionRequest {
	this := BatchLogConversionRequest{}
	return &this
}

// GetData returns the Data field value
func (o *BatchLogConversionRequest) GetData() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *BatchLogConversionRequest) GetDataOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *BatchLogConversionRequest) SetData(v string) {
	o.Data = v
}

// GetFlavorAssetId returns the FlavorAssetId field value
func (o *BatchLogConversionRequest) GetFlavorAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FlavorAssetId
}

// GetFlavorAssetIdOk returns a tuple with the FlavorAssetId field value
// and a boolean to check if the value has been set.
func (o *BatchLogConversionRequest) GetFlavorAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlavorAssetId, true
}

// SetFlavorAssetId sets field value
func (o *BatchLogConversionRequest) SetFlavorAssetId(v string) {
	o.FlavorAssetId = v
}

func (o BatchLogConversionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["flavorAssetId"] = o.FlavorAssetId
	}
	return json.Marshal(toSerialize)
}

type NullableBatchLogConversionRequest struct {
	value *BatchLogConversionRequest
	isSet bool
}

func (v NullableBatchLogConversionRequest) Get() *BatchLogConversionRequest {
	return v.value
}

func (v *NullableBatchLogConversionRequest) Set(val *BatchLogConversionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchLogConversionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchLogConversionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchLogConversionRequest(val *BatchLogConversionRequest) *NullableBatchLogConversionRequest {
	return &NullableBatchLogConversionRequest{value: val, isSet: true}
}

func (v NullableBatchLogConversionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchLogConversionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


