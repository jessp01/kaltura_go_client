/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CategoryUserActivateRequest struct for CategoryUserActivateRequest
type CategoryUserActivateRequest struct {
	CategoryId int32 `json:"categoryId"`
	UserId string `json:"userId"`
}

// NewCategoryUserActivateRequest instantiates a new CategoryUserActivateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryUserActivateRequest(categoryId int32, userId string) *CategoryUserActivateRequest {
	this := CategoryUserActivateRequest{}
	this.CategoryId = categoryId
	this.UserId = userId
	return &this
}

// NewCategoryUserActivateRequestWithDefaults instantiates a new CategoryUserActivateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryUserActivateRequestWithDefaults() *CategoryUserActivateRequest {
	this := CategoryUserActivateRequest{}
	return &this
}

// GetCategoryId returns the CategoryId field value
func (o *CategoryUserActivateRequest) GetCategoryId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value
// and a boolean to check if the value has been set.
func (o *CategoryUserActivateRequest) GetCategoryIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryId, true
}

// SetCategoryId sets field value
func (o *CategoryUserActivateRequest) SetCategoryId(v int32) {
	o.CategoryId = v
}

// GetUserId returns the UserId field value
func (o *CategoryUserActivateRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *CategoryUserActivateRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *CategoryUserActivateRequest) SetUserId(v string) {
	o.UserId = v
}

func (o CategoryUserActivateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["categoryId"] = o.CategoryId
	}
	if true {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableCategoryUserActivateRequest struct {
	value *CategoryUserActivateRequest
	isSet bool
}

func (v NullableCategoryUserActivateRequest) Get() *CategoryUserActivateRequest {
	return v.value
}

func (v *NullableCategoryUserActivateRequest) Set(val *CategoryUserActivateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryUserActivateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryUserActivateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryUserActivateRequest(val *CategoryUserActivateRequest) *NullableCategoryUserActivateRequest {
	return &NullableCategoryUserActivateRequest{value: val, isSet: true}
}

func (v NullableCategoryUserActivateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryUserActivateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


