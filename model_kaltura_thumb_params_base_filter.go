/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaThumbParamsBaseFilter `abstract`
type KalturaThumbParamsBaseFilter struct {
	KalturaAssetParamsFilter
}

// NewKalturaThumbParamsBaseFilter instantiates a new KalturaThumbParamsBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaThumbParamsBaseFilter() *KalturaThumbParamsBaseFilter {
	this := KalturaThumbParamsBaseFilter{}
	return &this
}

// NewKalturaThumbParamsBaseFilterWithDefaults instantiates a new KalturaThumbParamsBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaThumbParamsBaseFilterWithDefaults() *KalturaThumbParamsBaseFilter {
	this := KalturaThumbParamsBaseFilter{}
	return &this
}

func (o KalturaThumbParamsBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaAssetParamsFilter, errKalturaAssetParamsFilter := json.Marshal(o.KalturaAssetParamsFilter)
	if errKalturaAssetParamsFilter != nil {
		return []byte{}, errKalturaAssetParamsFilter
	}
	errKalturaAssetParamsFilter = json.Unmarshal([]byte(serializedKalturaAssetParamsFilter), &toSerialize)
	if errKalturaAssetParamsFilter != nil {
		return []byte{}, errKalturaAssetParamsFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaThumbParamsBaseFilter struct {
	value *KalturaThumbParamsBaseFilter
	isSet bool
}

func (v NullableKalturaThumbParamsBaseFilter) Get() *KalturaThumbParamsBaseFilter {
	return v.value
}

func (v *NullableKalturaThumbParamsBaseFilter) Set(val *KalturaThumbParamsBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaThumbParamsBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaThumbParamsBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaThumbParamsBaseFilter(val *KalturaThumbParamsBaseFilter) *NullableKalturaThumbParamsBaseFilter {
	return &NullableKalturaThumbParamsBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaThumbParamsBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaThumbParamsBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


