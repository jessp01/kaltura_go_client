/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaMeetingScheduleEvent struct for KalturaMeetingScheduleEvent
type KalturaMeetingScheduleEvent struct {
	KalturaEntryScheduleEvent
}

// NewKalturaMeetingScheduleEvent instantiates a new KalturaMeetingScheduleEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaMeetingScheduleEvent() *KalturaMeetingScheduleEvent {
	this := KalturaMeetingScheduleEvent{}
	return &this
}

// NewKalturaMeetingScheduleEventWithDefaults instantiates a new KalturaMeetingScheduleEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaMeetingScheduleEventWithDefaults() *KalturaMeetingScheduleEvent {
	this := KalturaMeetingScheduleEvent{}
	return &this
}

func (o KalturaMeetingScheduleEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaEntryScheduleEvent, errKalturaEntryScheduleEvent := json.Marshal(o.KalturaEntryScheduleEvent)
	if errKalturaEntryScheduleEvent != nil {
		return []byte{}, errKalturaEntryScheduleEvent
	}
	errKalturaEntryScheduleEvent = json.Unmarshal([]byte(serializedKalturaEntryScheduleEvent), &toSerialize)
	if errKalturaEntryScheduleEvent != nil {
		return []byte{}, errKalturaEntryScheduleEvent
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaMeetingScheduleEvent struct {
	value *KalturaMeetingScheduleEvent
	isSet bool
}

func (v NullableKalturaMeetingScheduleEvent) Get() *KalturaMeetingScheduleEvent {
	return v.value
}

func (v *NullableKalturaMeetingScheduleEvent) Set(val *KalturaMeetingScheduleEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaMeetingScheduleEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaMeetingScheduleEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaMeetingScheduleEvent(val *KalturaMeetingScheduleEvent) *NullableKalturaMeetingScheduleEvent {
	return &NullableKalturaMeetingScheduleEvent{value: val, isSet: true}
}

func (v NullableKalturaMeetingScheduleEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaMeetingScheduleEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


