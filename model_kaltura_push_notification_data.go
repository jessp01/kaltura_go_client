/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPushNotificationData struct for KalturaPushNotificationData
type KalturaPushNotificationData struct {
	// `readOnly`
	QueueKey *string `json:"queueKey,omitempty"`
	// `readOnly`
	QueueName *string `json:"queueName,omitempty"`
	// `readOnly`
	Url *string `json:"url,omitempty"`
}

// NewKalturaPushNotificationData instantiates a new KalturaPushNotificationData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPushNotificationData() *KalturaPushNotificationData {
	this := KalturaPushNotificationData{}
	return &this
}

// NewKalturaPushNotificationDataWithDefaults instantiates a new KalturaPushNotificationData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPushNotificationDataWithDefaults() *KalturaPushNotificationData {
	this := KalturaPushNotificationData{}
	return &this
}

// GetQueueKey returns the QueueKey field value if set, zero value otherwise.
func (o *KalturaPushNotificationData) GetQueueKey() string {
	if o == nil || o.QueueKey == nil {
		var ret string
		return ret
	}
	return *o.QueueKey
}

// GetQueueKeyOk returns a tuple with the QueueKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPushNotificationData) GetQueueKeyOk() (*string, bool) {
	if o == nil || o.QueueKey == nil {
		return nil, false
	}
	return o.QueueKey, true
}

// HasQueueKey returns a boolean if a field has been set.
func (o *KalturaPushNotificationData) HasQueueKey() bool {
	if o != nil && o.QueueKey != nil {
		return true
	}

	return false
}

// SetQueueKey gets a reference to the given string and assigns it to the QueueKey field.
func (o *KalturaPushNotificationData) SetQueueKey(v string) {
	o.QueueKey = &v
}

// GetQueueName returns the QueueName field value if set, zero value otherwise.
func (o *KalturaPushNotificationData) GetQueueName() string {
	if o == nil || o.QueueName == nil {
		var ret string
		return ret
	}
	return *o.QueueName
}

// GetQueueNameOk returns a tuple with the QueueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPushNotificationData) GetQueueNameOk() (*string, bool) {
	if o == nil || o.QueueName == nil {
		return nil, false
	}
	return o.QueueName, true
}

// HasQueueName returns a boolean if a field has been set.
func (o *KalturaPushNotificationData) HasQueueName() bool {
	if o != nil && o.QueueName != nil {
		return true
	}

	return false
}

// SetQueueName gets a reference to the given string and assigns it to the QueueName field.
func (o *KalturaPushNotificationData) SetQueueName(v string) {
	o.QueueName = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *KalturaPushNotificationData) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaPushNotificationData) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *KalturaPushNotificationData) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *KalturaPushNotificationData) SetUrl(v string) {
	o.Url = &v
}

func (o KalturaPushNotificationData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.QueueKey != nil {
		toSerialize["queueKey"] = o.QueueKey
	}
	if o.QueueName != nil {
		toSerialize["queueName"] = o.QueueName
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPushNotificationData struct {
	value *KalturaPushNotificationData
	isSet bool
}

func (v NullableKalturaPushNotificationData) Get() *KalturaPushNotificationData {
	return v.value
}

func (v *NullableKalturaPushNotificationData) Set(val *KalturaPushNotificationData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPushNotificationData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPushNotificationData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPushNotificationData(val *KalturaPushNotificationData) *NullableKalturaPushNotificationData {
	return &NullableKalturaPushNotificationData{value: val, isSet: true}
}

func (v NullableKalturaPushNotificationData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPushNotificationData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


