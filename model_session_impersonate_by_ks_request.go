/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SessionImpersonateByKsRequest struct for SessionImpersonateByKsRequest
type SessionImpersonateByKsRequest struct {
	Expiry *int32 `json:"expiry,omitempty"`
	Privileges *string `json:"privileges,omitempty"`
	Session string `json:"session"`
	Type *int32 `json:"type,omitempty"`
}

// NewSessionImpersonateByKsRequest instantiates a new SessionImpersonateByKsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSessionImpersonateByKsRequest(session string) *SessionImpersonateByKsRequest {
	this := SessionImpersonateByKsRequest{}
	this.Session = session
	return &this
}

// NewSessionImpersonateByKsRequestWithDefaults instantiates a new SessionImpersonateByKsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSessionImpersonateByKsRequestWithDefaults() *SessionImpersonateByKsRequest {
	this := SessionImpersonateByKsRequest{}
	return &this
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *SessionImpersonateByKsRequest) GetExpiry() int32 {
	if o == nil || o.Expiry == nil {
		var ret int32
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionImpersonateByKsRequest) GetExpiryOk() (*int32, bool) {
	if o == nil || o.Expiry == nil {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *SessionImpersonateByKsRequest) HasExpiry() bool {
	if o != nil && o.Expiry != nil {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given int32 and assigns it to the Expiry field.
func (o *SessionImpersonateByKsRequest) SetExpiry(v int32) {
	o.Expiry = &v
}

// GetPrivileges returns the Privileges field value if set, zero value otherwise.
func (o *SessionImpersonateByKsRequest) GetPrivileges() string {
	if o == nil || o.Privileges == nil {
		var ret string
		return ret
	}
	return *o.Privileges
}

// GetPrivilegesOk returns a tuple with the Privileges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionImpersonateByKsRequest) GetPrivilegesOk() (*string, bool) {
	if o == nil || o.Privileges == nil {
		return nil, false
	}
	return o.Privileges, true
}

// HasPrivileges returns a boolean if a field has been set.
func (o *SessionImpersonateByKsRequest) HasPrivileges() bool {
	if o != nil && o.Privileges != nil {
		return true
	}

	return false
}

// SetPrivileges gets a reference to the given string and assigns it to the Privileges field.
func (o *SessionImpersonateByKsRequest) SetPrivileges(v string) {
	o.Privileges = &v
}

// GetSession returns the Session field value
func (o *SessionImpersonateByKsRequest) GetSession() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Session
}

// GetSessionOk returns a tuple with the Session field value
// and a boolean to check if the value has been set.
func (o *SessionImpersonateByKsRequest) GetSessionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Session, true
}

// SetSession sets field value
func (o *SessionImpersonateByKsRequest) SetSession(v string) {
	o.Session = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SessionImpersonateByKsRequest) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SessionImpersonateByKsRequest) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SessionImpersonateByKsRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *SessionImpersonateByKsRequest) SetType(v int32) {
	o.Type = &v
}

func (o SessionImpersonateByKsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Expiry != nil {
		toSerialize["expiry"] = o.Expiry
	}
	if o.Privileges != nil {
		toSerialize["privileges"] = o.Privileges
	}
	if true {
		toSerialize["session"] = o.Session
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableSessionImpersonateByKsRequest struct {
	value *SessionImpersonateByKsRequest
	isSet bool
}

func (v NullableSessionImpersonateByKsRequest) Get() *SessionImpersonateByKsRequest {
	return v.value
}

func (v *NullableSessionImpersonateByKsRequest) Set(val *SessionImpersonateByKsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSessionImpersonateByKsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSessionImpersonateByKsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSessionImpersonateByKsRequest(val *SessionImpersonateByKsRequest) *NullableSessionImpersonateByKsRequest {
	return &NullableSessionImpersonateByKsRequest{value: val, isSet: true}
}

func (v NullableSessionImpersonateByKsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSessionImpersonateByKsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


