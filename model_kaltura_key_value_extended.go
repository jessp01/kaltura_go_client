/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaKeyValueExtended struct for KalturaKeyValueExtended
type KalturaKeyValueExtended struct {
	KalturaKeyValue
}

// NewKalturaKeyValueExtended instantiates a new KalturaKeyValueExtended object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaKeyValueExtended() *KalturaKeyValueExtended {
	this := KalturaKeyValueExtended{}
	return &this
}

// NewKalturaKeyValueExtendedWithDefaults instantiates a new KalturaKeyValueExtended object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaKeyValueExtendedWithDefaults() *KalturaKeyValueExtended {
	this := KalturaKeyValueExtended{}
	return &this
}

func (o KalturaKeyValueExtended) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaKeyValue, errKalturaKeyValue := json.Marshal(o.KalturaKeyValue)
	if errKalturaKeyValue != nil {
		return []byte{}, errKalturaKeyValue
	}
	errKalturaKeyValue = json.Unmarshal([]byte(serializedKalturaKeyValue), &toSerialize)
	if errKalturaKeyValue != nil {
		return []byte{}, errKalturaKeyValue
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaKeyValueExtended struct {
	value *KalturaKeyValueExtended
	isSet bool
}

func (v NullableKalturaKeyValueExtended) Get() *KalturaKeyValueExtended {
	return v.value
}

func (v *NullableKalturaKeyValueExtended) Set(val *KalturaKeyValueExtended) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaKeyValueExtended) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaKeyValueExtended) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaKeyValueExtended(val *KalturaKeyValueExtended) *NullableKalturaKeyValueExtended {
	return &NullableKalturaKeyValueExtended{value: val, isSet: true}
}

func (v NullableKalturaKeyValueExtended) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaKeyValueExtended) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


