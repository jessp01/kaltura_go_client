/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaDropFolder struct for KalturaDropFolder
type KalturaDropFolder struct {
	AutoFileDeleteDays *int32 `json:"autoFileDeleteDays,omitempty"`
	CategoriesMetadataFieldName *string `json:"categoriesMetadataFieldName,omitempty"`
	ConversionProfileId *int32 `json:"conversionProfileId,omitempty"`
	// `readOnly`
	CreatedAt *int32 `json:"createdAt,omitempty"`
	Dc *int32 `json:"dc,omitempty"`
	Description *string `json:"description,omitempty"`
	EnforceEntitlement *bool `json:"enforceEntitlement,omitempty"`
	// Enum Type: `KalturaDropFolderErrorCode`
	ErrorCode *string `json:"errorCode,omitempty"`
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// Enum Type: `KalturaDropFolderFileDeletePolicy`
	FileDeletePolicy *int32 `json:"fileDeletePolicy,omitempty"`
	FileDeleteRegex *string `json:"fileDeleteRegex,omitempty"`
	FileHandlerConfig *KalturaDropFolderFileHandlerConfig `json:"fileHandlerConfig,omitempty"`
	// Enum Type: `KalturaDropFolderFileHandlerType`
	FileHandlerType *string `json:"fileHandlerType,omitempty"`
	FileNamePatterns *string `json:"fileNamePatterns,omitempty"`
	// The ammount of time, in seconds, that should pass so that a file with no change in size we'll be treated as \"finished uploading to folder\"
	FileSizeCheckInterval *int32 `json:"fileSizeCheckInterval,omitempty"`
	// `readOnly`
	Id *int32 `json:"id,omitempty"`
	IgnoreFileNamePatterns *string `json:"ignoreFileNamePatterns,omitempty"`
	Incremental *bool `json:"incremental,omitempty"`
	LastAccessedAt *int32 `json:"lastAccessedAt,omitempty"`
	LastFileTimestamp *int32 `json:"lastFileTimestamp,omitempty"`
	MetadataProfileId *int32 `json:"metadataProfileId,omitempty"`
	Name *string `json:"name,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
	// `insertOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	Path *string `json:"path,omitempty"`
	ShouldValidateKS *bool `json:"shouldValidateKS,omitempty"`
	// Enum Type: `KalturaDropFolderStatus`
	Status *int32 `json:"status,omitempty"`
	Tags *string `json:"tags,omitempty"`
	// Enum Type: `KalturaDropFolderType`
	Type *string `json:"type,omitempty"`
	// `readOnly`
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
}

// NewKalturaDropFolder instantiates a new KalturaDropFolder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaDropFolder() *KalturaDropFolder {
	this := KalturaDropFolder{}
	return &this
}

// NewKalturaDropFolderWithDefaults instantiates a new KalturaDropFolder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaDropFolderWithDefaults() *KalturaDropFolder {
	this := KalturaDropFolder{}
	return &this
}

// GetAutoFileDeleteDays returns the AutoFileDeleteDays field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetAutoFileDeleteDays() int32 {
	if o == nil || o.AutoFileDeleteDays == nil {
		var ret int32
		return ret
	}
	return *o.AutoFileDeleteDays
}

// GetAutoFileDeleteDaysOk returns a tuple with the AutoFileDeleteDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetAutoFileDeleteDaysOk() (*int32, bool) {
	if o == nil || o.AutoFileDeleteDays == nil {
		return nil, false
	}
	return o.AutoFileDeleteDays, true
}

// HasAutoFileDeleteDays returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasAutoFileDeleteDays() bool {
	if o != nil && o.AutoFileDeleteDays != nil {
		return true
	}

	return false
}

// SetAutoFileDeleteDays gets a reference to the given int32 and assigns it to the AutoFileDeleteDays field.
func (o *KalturaDropFolder) SetAutoFileDeleteDays(v int32) {
	o.AutoFileDeleteDays = &v
}

// GetCategoriesMetadataFieldName returns the CategoriesMetadataFieldName field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetCategoriesMetadataFieldName() string {
	if o == nil || o.CategoriesMetadataFieldName == nil {
		var ret string
		return ret
	}
	return *o.CategoriesMetadataFieldName
}

// GetCategoriesMetadataFieldNameOk returns a tuple with the CategoriesMetadataFieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetCategoriesMetadataFieldNameOk() (*string, bool) {
	if o == nil || o.CategoriesMetadataFieldName == nil {
		return nil, false
	}
	return o.CategoriesMetadataFieldName, true
}

// HasCategoriesMetadataFieldName returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasCategoriesMetadataFieldName() bool {
	if o != nil && o.CategoriesMetadataFieldName != nil {
		return true
	}

	return false
}

// SetCategoriesMetadataFieldName gets a reference to the given string and assigns it to the CategoriesMetadataFieldName field.
func (o *KalturaDropFolder) SetCategoriesMetadataFieldName(v string) {
	o.CategoriesMetadataFieldName = &v
}

// GetConversionProfileId returns the ConversionProfileId field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetConversionProfileId() int32 {
	if o == nil || o.ConversionProfileId == nil {
		var ret int32
		return ret
	}
	return *o.ConversionProfileId
}

// GetConversionProfileIdOk returns a tuple with the ConversionProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetConversionProfileIdOk() (*int32, bool) {
	if o == nil || o.ConversionProfileId == nil {
		return nil, false
	}
	return o.ConversionProfileId, true
}

// HasConversionProfileId returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasConversionProfileId() bool {
	if o != nil && o.ConversionProfileId != nil {
		return true
	}

	return false
}

// SetConversionProfileId gets a reference to the given int32 and assigns it to the ConversionProfileId field.
func (o *KalturaDropFolder) SetConversionProfileId(v int32) {
	o.ConversionProfileId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaDropFolder) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDc returns the Dc field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetDc() int32 {
	if o == nil || o.Dc == nil {
		var ret int32
		return ret
	}
	return *o.Dc
}

// GetDcOk returns a tuple with the Dc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetDcOk() (*int32, bool) {
	if o == nil || o.Dc == nil {
		return nil, false
	}
	return o.Dc, true
}

// HasDc returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasDc() bool {
	if o != nil && o.Dc != nil {
		return true
	}

	return false
}

// SetDc gets a reference to the given int32 and assigns it to the Dc field.
func (o *KalturaDropFolder) SetDc(v int32) {
	o.Dc = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KalturaDropFolder) SetDescription(v string) {
	o.Description = &v
}

// GetEnforceEntitlement returns the EnforceEntitlement field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetEnforceEntitlement() bool {
	if o == nil || o.EnforceEntitlement == nil {
		var ret bool
		return ret
	}
	return *o.EnforceEntitlement
}

// GetEnforceEntitlementOk returns a tuple with the EnforceEntitlement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetEnforceEntitlementOk() (*bool, bool) {
	if o == nil || o.EnforceEntitlement == nil {
		return nil, false
	}
	return o.EnforceEntitlement, true
}

// HasEnforceEntitlement returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasEnforceEntitlement() bool {
	if o != nil && o.EnforceEntitlement != nil {
		return true
	}

	return false
}

// SetEnforceEntitlement gets a reference to the given bool and assigns it to the EnforceEntitlement field.
func (o *KalturaDropFolder) SetEnforceEntitlement(v bool) {
	o.EnforceEntitlement = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetErrorCode() string {
	if o == nil || o.ErrorCode == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetErrorCodeOk() (*string, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *KalturaDropFolder) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetErrorDescription() string {
	if o == nil || o.ErrorDescription == nil {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || o.ErrorDescription == nil {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasErrorDescription() bool {
	if o != nil && o.ErrorDescription != nil {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *KalturaDropFolder) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetFileDeletePolicy returns the FileDeletePolicy field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetFileDeletePolicy() int32 {
	if o == nil || o.FileDeletePolicy == nil {
		var ret int32
		return ret
	}
	return *o.FileDeletePolicy
}

// GetFileDeletePolicyOk returns a tuple with the FileDeletePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetFileDeletePolicyOk() (*int32, bool) {
	if o == nil || o.FileDeletePolicy == nil {
		return nil, false
	}
	return o.FileDeletePolicy, true
}

// HasFileDeletePolicy returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasFileDeletePolicy() bool {
	if o != nil && o.FileDeletePolicy != nil {
		return true
	}

	return false
}

// SetFileDeletePolicy gets a reference to the given int32 and assigns it to the FileDeletePolicy field.
func (o *KalturaDropFolder) SetFileDeletePolicy(v int32) {
	o.FileDeletePolicy = &v
}

// GetFileDeleteRegex returns the FileDeleteRegex field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetFileDeleteRegex() string {
	if o == nil || o.FileDeleteRegex == nil {
		var ret string
		return ret
	}
	return *o.FileDeleteRegex
}

// GetFileDeleteRegexOk returns a tuple with the FileDeleteRegex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetFileDeleteRegexOk() (*string, bool) {
	if o == nil || o.FileDeleteRegex == nil {
		return nil, false
	}
	return o.FileDeleteRegex, true
}

// HasFileDeleteRegex returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasFileDeleteRegex() bool {
	if o != nil && o.FileDeleteRegex != nil {
		return true
	}

	return false
}

// SetFileDeleteRegex gets a reference to the given string and assigns it to the FileDeleteRegex field.
func (o *KalturaDropFolder) SetFileDeleteRegex(v string) {
	o.FileDeleteRegex = &v
}

// GetFileHandlerConfig returns the FileHandlerConfig field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetFileHandlerConfig() KalturaDropFolderFileHandlerConfig {
	if o == nil || o.FileHandlerConfig == nil {
		var ret KalturaDropFolderFileHandlerConfig
		return ret
	}
	return *o.FileHandlerConfig
}

// GetFileHandlerConfigOk returns a tuple with the FileHandlerConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetFileHandlerConfigOk() (*KalturaDropFolderFileHandlerConfig, bool) {
	if o == nil || o.FileHandlerConfig == nil {
		return nil, false
	}
	return o.FileHandlerConfig, true
}

// HasFileHandlerConfig returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasFileHandlerConfig() bool {
	if o != nil && o.FileHandlerConfig != nil {
		return true
	}

	return false
}

// SetFileHandlerConfig gets a reference to the given KalturaDropFolderFileHandlerConfig and assigns it to the FileHandlerConfig field.
func (o *KalturaDropFolder) SetFileHandlerConfig(v KalturaDropFolderFileHandlerConfig) {
	o.FileHandlerConfig = &v
}

// GetFileHandlerType returns the FileHandlerType field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetFileHandlerType() string {
	if o == nil || o.FileHandlerType == nil {
		var ret string
		return ret
	}
	return *o.FileHandlerType
}

// GetFileHandlerTypeOk returns a tuple with the FileHandlerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetFileHandlerTypeOk() (*string, bool) {
	if o == nil || o.FileHandlerType == nil {
		return nil, false
	}
	return o.FileHandlerType, true
}

// HasFileHandlerType returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasFileHandlerType() bool {
	if o != nil && o.FileHandlerType != nil {
		return true
	}

	return false
}

// SetFileHandlerType gets a reference to the given string and assigns it to the FileHandlerType field.
func (o *KalturaDropFolder) SetFileHandlerType(v string) {
	o.FileHandlerType = &v
}

// GetFileNamePatterns returns the FileNamePatterns field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetFileNamePatterns() string {
	if o == nil || o.FileNamePatterns == nil {
		var ret string
		return ret
	}
	return *o.FileNamePatterns
}

// GetFileNamePatternsOk returns a tuple with the FileNamePatterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetFileNamePatternsOk() (*string, bool) {
	if o == nil || o.FileNamePatterns == nil {
		return nil, false
	}
	return o.FileNamePatterns, true
}

// HasFileNamePatterns returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasFileNamePatterns() bool {
	if o != nil && o.FileNamePatterns != nil {
		return true
	}

	return false
}

// SetFileNamePatterns gets a reference to the given string and assigns it to the FileNamePatterns field.
func (o *KalturaDropFolder) SetFileNamePatterns(v string) {
	o.FileNamePatterns = &v
}

// GetFileSizeCheckInterval returns the FileSizeCheckInterval field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetFileSizeCheckInterval() int32 {
	if o == nil || o.FileSizeCheckInterval == nil {
		var ret int32
		return ret
	}
	return *o.FileSizeCheckInterval
}

// GetFileSizeCheckIntervalOk returns a tuple with the FileSizeCheckInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetFileSizeCheckIntervalOk() (*int32, bool) {
	if o == nil || o.FileSizeCheckInterval == nil {
		return nil, false
	}
	return o.FileSizeCheckInterval, true
}

// HasFileSizeCheckInterval returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasFileSizeCheckInterval() bool {
	if o != nil && o.FileSizeCheckInterval != nil {
		return true
	}

	return false
}

// SetFileSizeCheckInterval gets a reference to the given int32 and assigns it to the FileSizeCheckInterval field.
func (o *KalturaDropFolder) SetFileSizeCheckInterval(v int32) {
	o.FileSizeCheckInterval = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaDropFolder) SetId(v int32) {
	o.Id = &v
}

// GetIgnoreFileNamePatterns returns the IgnoreFileNamePatterns field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetIgnoreFileNamePatterns() string {
	if o == nil || o.IgnoreFileNamePatterns == nil {
		var ret string
		return ret
	}
	return *o.IgnoreFileNamePatterns
}

// GetIgnoreFileNamePatternsOk returns a tuple with the IgnoreFileNamePatterns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetIgnoreFileNamePatternsOk() (*string, bool) {
	if o == nil || o.IgnoreFileNamePatterns == nil {
		return nil, false
	}
	return o.IgnoreFileNamePatterns, true
}

// HasIgnoreFileNamePatterns returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasIgnoreFileNamePatterns() bool {
	if o != nil && o.IgnoreFileNamePatterns != nil {
		return true
	}

	return false
}

// SetIgnoreFileNamePatterns gets a reference to the given string and assigns it to the IgnoreFileNamePatterns field.
func (o *KalturaDropFolder) SetIgnoreFileNamePatterns(v string) {
	o.IgnoreFileNamePatterns = &v
}

// GetIncremental returns the Incremental field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetIncremental() bool {
	if o == nil || o.Incremental == nil {
		var ret bool
		return ret
	}
	return *o.Incremental
}

// GetIncrementalOk returns a tuple with the Incremental field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetIncrementalOk() (*bool, bool) {
	if o == nil || o.Incremental == nil {
		return nil, false
	}
	return o.Incremental, true
}

// HasIncremental returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasIncremental() bool {
	if o != nil && o.Incremental != nil {
		return true
	}

	return false
}

// SetIncremental gets a reference to the given bool and assigns it to the Incremental field.
func (o *KalturaDropFolder) SetIncremental(v bool) {
	o.Incremental = &v
}

// GetLastAccessedAt returns the LastAccessedAt field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetLastAccessedAt() int32 {
	if o == nil || o.LastAccessedAt == nil {
		var ret int32
		return ret
	}
	return *o.LastAccessedAt
}

// GetLastAccessedAtOk returns a tuple with the LastAccessedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetLastAccessedAtOk() (*int32, bool) {
	if o == nil || o.LastAccessedAt == nil {
		return nil, false
	}
	return o.LastAccessedAt, true
}

// HasLastAccessedAt returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasLastAccessedAt() bool {
	if o != nil && o.LastAccessedAt != nil {
		return true
	}

	return false
}

// SetLastAccessedAt gets a reference to the given int32 and assigns it to the LastAccessedAt field.
func (o *KalturaDropFolder) SetLastAccessedAt(v int32) {
	o.LastAccessedAt = &v
}

// GetLastFileTimestamp returns the LastFileTimestamp field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetLastFileTimestamp() int32 {
	if o == nil || o.LastFileTimestamp == nil {
		var ret int32
		return ret
	}
	return *o.LastFileTimestamp
}

// GetLastFileTimestampOk returns a tuple with the LastFileTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetLastFileTimestampOk() (*int32, bool) {
	if o == nil || o.LastFileTimestamp == nil {
		return nil, false
	}
	return o.LastFileTimestamp, true
}

// HasLastFileTimestamp returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasLastFileTimestamp() bool {
	if o != nil && o.LastFileTimestamp != nil {
		return true
	}

	return false
}

// SetLastFileTimestamp gets a reference to the given int32 and assigns it to the LastFileTimestamp field.
func (o *KalturaDropFolder) SetLastFileTimestamp(v int32) {
	o.LastFileTimestamp = &v
}

// GetMetadataProfileId returns the MetadataProfileId field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetMetadataProfileId() int32 {
	if o == nil || o.MetadataProfileId == nil {
		var ret int32
		return ret
	}
	return *o.MetadataProfileId
}

// GetMetadataProfileIdOk returns a tuple with the MetadataProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetMetadataProfileIdOk() (*int32, bool) {
	if o == nil || o.MetadataProfileId == nil {
		return nil, false
	}
	return o.MetadataProfileId, true
}

// HasMetadataProfileId returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasMetadataProfileId() bool {
	if o != nil && o.MetadataProfileId != nil {
		return true
	}

	return false
}

// SetMetadataProfileId gets a reference to the given int32 and assigns it to the MetadataProfileId field.
func (o *KalturaDropFolder) SetMetadataProfileId(v int32) {
	o.MetadataProfileId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KalturaDropFolder) SetName(v string) {
	o.Name = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaDropFolder) SetObjectType(v string) {
	o.ObjectType = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaDropFolder) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *KalturaDropFolder) SetPath(v string) {
	o.Path = &v
}

// GetShouldValidateKS returns the ShouldValidateKS field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetShouldValidateKS() bool {
	if o == nil || o.ShouldValidateKS == nil {
		var ret bool
		return ret
	}
	return *o.ShouldValidateKS
}

// GetShouldValidateKSOk returns a tuple with the ShouldValidateKS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetShouldValidateKSOk() (*bool, bool) {
	if o == nil || o.ShouldValidateKS == nil {
		return nil, false
	}
	return o.ShouldValidateKS, true
}

// HasShouldValidateKS returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasShouldValidateKS() bool {
	if o != nil && o.ShouldValidateKS != nil {
		return true
	}

	return false
}

// SetShouldValidateKS gets a reference to the given bool and assigns it to the ShouldValidateKS field.
func (o *KalturaDropFolder) SetShouldValidateKS(v bool) {
	o.ShouldValidateKS = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetStatus() int32 {
	if o == nil || o.Status == nil {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetStatusOk() (*int32, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KalturaDropFolder) SetStatus(v int32) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetTags() string {
	if o == nil || o.Tags == nil {
		var ret string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetTagsOk() (*string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given string and assigns it to the Tags field.
func (o *KalturaDropFolder) SetTags(v string) {
	o.Tags = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *KalturaDropFolder) SetType(v string) {
	o.Type = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaDropFolder) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaDropFolder) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaDropFolder) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaDropFolder) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

func (o KalturaDropFolder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AutoFileDeleteDays != nil {
		toSerialize["autoFileDeleteDays"] = o.AutoFileDeleteDays
	}
	if o.CategoriesMetadataFieldName != nil {
		toSerialize["categoriesMetadataFieldName"] = o.CategoriesMetadataFieldName
	}
	if o.ConversionProfileId != nil {
		toSerialize["conversionProfileId"] = o.ConversionProfileId
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.Dc != nil {
		toSerialize["dc"] = o.Dc
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.EnforceEntitlement != nil {
		toSerialize["enforceEntitlement"] = o.EnforceEntitlement
	}
	if o.ErrorCode != nil {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if o.ErrorDescription != nil {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if o.FileDeletePolicy != nil {
		toSerialize["fileDeletePolicy"] = o.FileDeletePolicy
	}
	if o.FileDeleteRegex != nil {
		toSerialize["fileDeleteRegex"] = o.FileDeleteRegex
	}
	if o.FileHandlerConfig != nil {
		toSerialize["fileHandlerConfig"] = o.FileHandlerConfig
	}
	if o.FileHandlerType != nil {
		toSerialize["fileHandlerType"] = o.FileHandlerType
	}
	if o.FileNamePatterns != nil {
		toSerialize["fileNamePatterns"] = o.FileNamePatterns
	}
	if o.FileSizeCheckInterval != nil {
		toSerialize["fileSizeCheckInterval"] = o.FileSizeCheckInterval
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IgnoreFileNamePatterns != nil {
		toSerialize["ignoreFileNamePatterns"] = o.IgnoreFileNamePatterns
	}
	if o.Incremental != nil {
		toSerialize["incremental"] = o.Incremental
	}
	if o.LastAccessedAt != nil {
		toSerialize["lastAccessedAt"] = o.LastAccessedAt
	}
	if o.LastFileTimestamp != nil {
		toSerialize["lastFileTimestamp"] = o.LastFileTimestamp
	}
	if o.MetadataProfileId != nil {
		toSerialize["metadataProfileId"] = o.MetadataProfileId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.ShouldValidateKS != nil {
		toSerialize["shouldValidateKS"] = o.ShouldValidateKS
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaDropFolder struct {
	value *KalturaDropFolder
	isSet bool
}

func (v NullableKalturaDropFolder) Get() *KalturaDropFolder {
	return v.value
}

func (v *NullableKalturaDropFolder) Set(val *KalturaDropFolder) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaDropFolder) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaDropFolder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaDropFolder(val *KalturaDropFolder) *NullableKalturaDropFolder {
	return &NullableKalturaDropFolder{value: val, isSet: true}
}

func (v NullableKalturaDropFolder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaDropFolder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


