/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaFileSyncDescriptor struct for KalturaFileSyncDescriptor
type KalturaFileSyncDescriptor struct {
	FileEncryptionKey *string `json:"fileEncryptionKey,omitempty"`
	FileSyncLocalPath *string `json:"fileSyncLocalPath,omitempty"`
	FileSyncObjectSubType *int32 `json:"fileSyncObjectSubType,omitempty"`
	// The translated path as used by the scheduler
	FileSyncRemoteUrl *string `json:"fileSyncRemoteUrl,omitempty"`
	ObjectType *string `json:"objectType,omitempty"`
}

// NewKalturaFileSyncDescriptor instantiates a new KalturaFileSyncDescriptor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaFileSyncDescriptor() *KalturaFileSyncDescriptor {
	this := KalturaFileSyncDescriptor{}
	return &this
}

// NewKalturaFileSyncDescriptorWithDefaults instantiates a new KalturaFileSyncDescriptor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaFileSyncDescriptorWithDefaults() *KalturaFileSyncDescriptor {
	this := KalturaFileSyncDescriptor{}
	return &this
}

// GetFileEncryptionKey returns the FileEncryptionKey field value if set, zero value otherwise.
func (o *KalturaFileSyncDescriptor) GetFileEncryptionKey() string {
	if o == nil || o.FileEncryptionKey == nil {
		var ret string
		return ret
	}
	return *o.FileEncryptionKey
}

// GetFileEncryptionKeyOk returns a tuple with the FileEncryptionKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSyncDescriptor) GetFileEncryptionKeyOk() (*string, bool) {
	if o == nil || o.FileEncryptionKey == nil {
		return nil, false
	}
	return o.FileEncryptionKey, true
}

// HasFileEncryptionKey returns a boolean if a field has been set.
func (o *KalturaFileSyncDescriptor) HasFileEncryptionKey() bool {
	if o != nil && o.FileEncryptionKey != nil {
		return true
	}

	return false
}

// SetFileEncryptionKey gets a reference to the given string and assigns it to the FileEncryptionKey field.
func (o *KalturaFileSyncDescriptor) SetFileEncryptionKey(v string) {
	o.FileEncryptionKey = &v
}

// GetFileSyncLocalPath returns the FileSyncLocalPath field value if set, zero value otherwise.
func (o *KalturaFileSyncDescriptor) GetFileSyncLocalPath() string {
	if o == nil || o.FileSyncLocalPath == nil {
		var ret string
		return ret
	}
	return *o.FileSyncLocalPath
}

// GetFileSyncLocalPathOk returns a tuple with the FileSyncLocalPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSyncDescriptor) GetFileSyncLocalPathOk() (*string, bool) {
	if o == nil || o.FileSyncLocalPath == nil {
		return nil, false
	}
	return o.FileSyncLocalPath, true
}

// HasFileSyncLocalPath returns a boolean if a field has been set.
func (o *KalturaFileSyncDescriptor) HasFileSyncLocalPath() bool {
	if o != nil && o.FileSyncLocalPath != nil {
		return true
	}

	return false
}

// SetFileSyncLocalPath gets a reference to the given string and assigns it to the FileSyncLocalPath field.
func (o *KalturaFileSyncDescriptor) SetFileSyncLocalPath(v string) {
	o.FileSyncLocalPath = &v
}

// GetFileSyncObjectSubType returns the FileSyncObjectSubType field value if set, zero value otherwise.
func (o *KalturaFileSyncDescriptor) GetFileSyncObjectSubType() int32 {
	if o == nil || o.FileSyncObjectSubType == nil {
		var ret int32
		return ret
	}
	return *o.FileSyncObjectSubType
}

// GetFileSyncObjectSubTypeOk returns a tuple with the FileSyncObjectSubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSyncDescriptor) GetFileSyncObjectSubTypeOk() (*int32, bool) {
	if o == nil || o.FileSyncObjectSubType == nil {
		return nil, false
	}
	return o.FileSyncObjectSubType, true
}

// HasFileSyncObjectSubType returns a boolean if a field has been set.
func (o *KalturaFileSyncDescriptor) HasFileSyncObjectSubType() bool {
	if o != nil && o.FileSyncObjectSubType != nil {
		return true
	}

	return false
}

// SetFileSyncObjectSubType gets a reference to the given int32 and assigns it to the FileSyncObjectSubType field.
func (o *KalturaFileSyncDescriptor) SetFileSyncObjectSubType(v int32) {
	o.FileSyncObjectSubType = &v
}

// GetFileSyncRemoteUrl returns the FileSyncRemoteUrl field value if set, zero value otherwise.
func (o *KalturaFileSyncDescriptor) GetFileSyncRemoteUrl() string {
	if o == nil || o.FileSyncRemoteUrl == nil {
		var ret string
		return ret
	}
	return *o.FileSyncRemoteUrl
}

// GetFileSyncRemoteUrlOk returns a tuple with the FileSyncRemoteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSyncDescriptor) GetFileSyncRemoteUrlOk() (*string, bool) {
	if o == nil || o.FileSyncRemoteUrl == nil {
		return nil, false
	}
	return o.FileSyncRemoteUrl, true
}

// HasFileSyncRemoteUrl returns a boolean if a field has been set.
func (o *KalturaFileSyncDescriptor) HasFileSyncRemoteUrl() bool {
	if o != nil && o.FileSyncRemoteUrl != nil {
		return true
	}

	return false
}

// SetFileSyncRemoteUrl gets a reference to the given string and assigns it to the FileSyncRemoteUrl field.
func (o *KalturaFileSyncDescriptor) SetFileSyncRemoteUrl(v string) {
	o.FileSyncRemoteUrl = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *KalturaFileSyncDescriptor) GetObjectType() string {
	if o == nil || o.ObjectType == nil {
		var ret string
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFileSyncDescriptor) GetObjectTypeOk() (*string, bool) {
	if o == nil || o.ObjectType == nil {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *KalturaFileSyncDescriptor) HasObjectType() bool {
	if o != nil && o.ObjectType != nil {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given string and assigns it to the ObjectType field.
func (o *KalturaFileSyncDescriptor) SetObjectType(v string) {
	o.ObjectType = &v
}

func (o KalturaFileSyncDescriptor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FileEncryptionKey != nil {
		toSerialize["fileEncryptionKey"] = o.FileEncryptionKey
	}
	if o.FileSyncLocalPath != nil {
		toSerialize["fileSyncLocalPath"] = o.FileSyncLocalPath
	}
	if o.FileSyncObjectSubType != nil {
		toSerialize["fileSyncObjectSubType"] = o.FileSyncObjectSubType
	}
	if o.FileSyncRemoteUrl != nil {
		toSerialize["fileSyncRemoteUrl"] = o.FileSyncRemoteUrl
	}
	if o.ObjectType != nil {
		toSerialize["objectType"] = o.ObjectType
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaFileSyncDescriptor struct {
	value *KalturaFileSyncDescriptor
	isSet bool
}

func (v NullableKalturaFileSyncDescriptor) Get() *KalturaFileSyncDescriptor {
	return v.value
}

func (v *NullableKalturaFileSyncDescriptor) Set(val *KalturaFileSyncDescriptor) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaFileSyncDescriptor) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaFileSyncDescriptor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaFileSyncDescriptor(val *KalturaFileSyncDescriptor) *NullableKalturaFileSyncDescriptor {
	return &NullableKalturaFileSyncDescriptor{value: val, isSet: true}
}

func (v NullableKalturaFileSyncDescriptor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaFileSyncDescriptor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


