/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPlayReadyPolicyBaseFilter `abstract`
type KalturaPlayReadyPolicyBaseFilter struct {
	KalturaDrmPolicyFilter
}

// NewKalturaPlayReadyPolicyBaseFilter instantiates a new KalturaPlayReadyPolicyBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPlayReadyPolicyBaseFilter() *KalturaPlayReadyPolicyBaseFilter {
	this := KalturaPlayReadyPolicyBaseFilter{}
	return &this
}

// NewKalturaPlayReadyPolicyBaseFilterWithDefaults instantiates a new KalturaPlayReadyPolicyBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPlayReadyPolicyBaseFilterWithDefaults() *KalturaPlayReadyPolicyBaseFilter {
	this := KalturaPlayReadyPolicyBaseFilter{}
	return &this
}

func (o KalturaPlayReadyPolicyBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaDrmPolicyFilter, errKalturaDrmPolicyFilter := json.Marshal(o.KalturaDrmPolicyFilter)
	if errKalturaDrmPolicyFilter != nil {
		return []byte{}, errKalturaDrmPolicyFilter
	}
	errKalturaDrmPolicyFilter = json.Unmarshal([]byte(serializedKalturaDrmPolicyFilter), &toSerialize)
	if errKalturaDrmPolicyFilter != nil {
		return []byte{}, errKalturaDrmPolicyFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPlayReadyPolicyBaseFilter struct {
	value *KalturaPlayReadyPolicyBaseFilter
	isSet bool
}

func (v NullableKalturaPlayReadyPolicyBaseFilter) Get() *KalturaPlayReadyPolicyBaseFilter {
	return v.value
}

func (v *NullableKalturaPlayReadyPolicyBaseFilter) Set(val *KalturaPlayReadyPolicyBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPlayReadyPolicyBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPlayReadyPolicyBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPlayReadyPolicyBaseFilter(val *KalturaPlayReadyPolicyBaseFilter) *NullableKalturaPlayReadyPolicyBaseFilter {
	return &NullableKalturaPlayReadyPolicyBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaPlayReadyPolicyBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPlayReadyPolicyBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


