/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AnnotationUpdateRequest struct for AnnotationUpdateRequest
type AnnotationUpdateRequest struct {
	Annotation KalturaCuePoint `json:"annotation"`
	Id string `json:"id"`
}

// NewAnnotationUpdateRequest instantiates a new AnnotationUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnnotationUpdateRequest(annotation KalturaCuePoint, id string) *AnnotationUpdateRequest {
	this := AnnotationUpdateRequest{}
	this.Annotation = annotation
	this.Id = id
	return &this
}

// NewAnnotationUpdateRequestWithDefaults instantiates a new AnnotationUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnnotationUpdateRequestWithDefaults() *AnnotationUpdateRequest {
	this := AnnotationUpdateRequest{}
	return &this
}

// GetAnnotation returns the Annotation field value
func (o *AnnotationUpdateRequest) GetAnnotation() KalturaCuePoint {
	if o == nil {
		var ret KalturaCuePoint
		return ret
	}

	return o.Annotation
}

// GetAnnotationOk returns a tuple with the Annotation field value
// and a boolean to check if the value has been set.
func (o *AnnotationUpdateRequest) GetAnnotationOk() (*KalturaCuePoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Annotation, true
}

// SetAnnotation sets field value
func (o *AnnotationUpdateRequest) SetAnnotation(v KalturaCuePoint) {
	o.Annotation = v
}

// GetId returns the Id field value
func (o *AnnotationUpdateRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AnnotationUpdateRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AnnotationUpdateRequest) SetId(v string) {
	o.Id = v
}

func (o AnnotationUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["annotation"] = o.Annotation
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableAnnotationUpdateRequest struct {
	value *AnnotationUpdateRequest
	isSet bool
}

func (v NullableAnnotationUpdateRequest) Get() *AnnotationUpdateRequest {
	return v.value
}

func (v *NullableAnnotationUpdateRequest) Set(val *AnnotationUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAnnotationUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAnnotationUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnnotationUpdateRequest(val *AnnotationUpdateRequest) *NullableAnnotationUpdateRequest {
	return &NullableAnnotationUpdateRequest{value: val, isSet: true}
}

func (v NullableAnnotationUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnnotationUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


