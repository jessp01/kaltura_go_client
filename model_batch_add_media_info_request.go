/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchAddMediaInfoRequest struct for BatchAddMediaInfoRequest
type BatchAddMediaInfoRequest struct {
	MediaInfo KalturaMediaInfo `json:"mediaInfo"`
}

// NewBatchAddMediaInfoRequest instantiates a new BatchAddMediaInfoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchAddMediaInfoRequest(mediaInfo KalturaMediaInfo) *BatchAddMediaInfoRequest {
	this := BatchAddMediaInfoRequest{}
	this.MediaInfo = mediaInfo
	return &this
}

// NewBatchAddMediaInfoRequestWithDefaults instantiates a new BatchAddMediaInfoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchAddMediaInfoRequestWithDefaults() *BatchAddMediaInfoRequest {
	this := BatchAddMediaInfoRequest{}
	return &this
}

// GetMediaInfo returns the MediaInfo field value
func (o *BatchAddMediaInfoRequest) GetMediaInfo() KalturaMediaInfo {
	if o == nil {
		var ret KalturaMediaInfo
		return ret
	}

	return o.MediaInfo
}

// GetMediaInfoOk returns a tuple with the MediaInfo field value
// and a boolean to check if the value has been set.
func (o *BatchAddMediaInfoRequest) GetMediaInfoOk() (*KalturaMediaInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaInfo, true
}

// SetMediaInfo sets field value
func (o *BatchAddMediaInfoRequest) SetMediaInfo(v KalturaMediaInfo) {
	o.MediaInfo = v
}

func (o BatchAddMediaInfoRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mediaInfo"] = o.MediaInfo
	}
	return json.Marshal(toSerialize)
}

type NullableBatchAddMediaInfoRequest struct {
	value *BatchAddMediaInfoRequest
	isSet bool
}

func (v NullableBatchAddMediaInfoRequest) Get() *BatchAddMediaInfoRequest {
	return v.value
}

func (v *NullableBatchAddMediaInfoRequest) Set(val *BatchAddMediaInfoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchAddMediaInfoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchAddMediaInfoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchAddMediaInfoRequest(val *BatchAddMediaInfoRequest) *NullableBatchAddMediaInfoRequest {
	return &NullableBatchAddMediaInfoRequest{value: val, isSet: true}
}

func (v NullableBatchAddMediaInfoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchAddMediaInfoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


