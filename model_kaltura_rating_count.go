/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaRatingCount struct for KalturaRatingCount
type KalturaRatingCount struct {
	Count *int32 `json:"count,omitempty"`
	EntryId *string `json:"entryId,omitempty"`
	Rank *int32 `json:"rank,omitempty"`
}

// NewKalturaRatingCount instantiates a new KalturaRatingCount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaRatingCount() *KalturaRatingCount {
	this := KalturaRatingCount{}
	return &this
}

// NewKalturaRatingCountWithDefaults instantiates a new KalturaRatingCount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaRatingCountWithDefaults() *KalturaRatingCount {
	this := KalturaRatingCount{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *KalturaRatingCount) GetCount() int32 {
	if o == nil || o.Count == nil {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaRatingCount) GetCountOk() (*int32, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *KalturaRatingCount) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *KalturaRatingCount) SetCount(v int32) {
	o.Count = &v
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *KalturaRatingCount) GetEntryId() string {
	if o == nil || o.EntryId == nil {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaRatingCount) GetEntryIdOk() (*string, bool) {
	if o == nil || o.EntryId == nil {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *KalturaRatingCount) HasEntryId() bool {
	if o != nil && o.EntryId != nil {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *KalturaRatingCount) SetEntryId(v string) {
	o.EntryId = &v
}

// GetRank returns the Rank field value if set, zero value otherwise.
func (o *KalturaRatingCount) GetRank() int32 {
	if o == nil || o.Rank == nil {
		var ret int32
		return ret
	}
	return *o.Rank
}

// GetRankOk returns a tuple with the Rank field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaRatingCount) GetRankOk() (*int32, bool) {
	if o == nil || o.Rank == nil {
		return nil, false
	}
	return o.Rank, true
}

// HasRank returns a boolean if a field has been set.
func (o *KalturaRatingCount) HasRank() bool {
	if o != nil && o.Rank != nil {
		return true
	}

	return false
}

// SetRank gets a reference to the given int32 and assigns it to the Rank field.
func (o *KalturaRatingCount) SetRank(v int32) {
	o.Rank = &v
}

func (o KalturaRatingCount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.EntryId != nil {
		toSerialize["entryId"] = o.EntryId
	}
	if o.Rank != nil {
		toSerialize["rank"] = o.Rank
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaRatingCount struct {
	value *KalturaRatingCount
	isSet bool
}

func (v NullableKalturaRatingCount) Get() *KalturaRatingCount {
	return v.value
}

func (v *NullableKalturaRatingCount) Set(val *KalturaRatingCount) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaRatingCount) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaRatingCount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaRatingCount(val *KalturaRatingCount) *NullableKalturaRatingCount {
	return &NullableKalturaRatingCount{value: val, isSet: true}
}

func (v NullableKalturaRatingCount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaRatingCount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


