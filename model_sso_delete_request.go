/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SsoDeleteRequest struct for SsoDeleteRequest
type SsoDeleteRequest struct {
	SsoId int32 `json:"ssoId"`
}

// NewSsoDeleteRequest instantiates a new SsoDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSsoDeleteRequest(ssoId int32) *SsoDeleteRequest {
	this := SsoDeleteRequest{}
	this.SsoId = ssoId
	return &this
}

// NewSsoDeleteRequestWithDefaults instantiates a new SsoDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSsoDeleteRequestWithDefaults() *SsoDeleteRequest {
	this := SsoDeleteRequest{}
	return &this
}

// GetSsoId returns the SsoId field value
func (o *SsoDeleteRequest) GetSsoId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SsoId
}

// GetSsoIdOk returns a tuple with the SsoId field value
// and a boolean to check if the value has been set.
func (o *SsoDeleteRequest) GetSsoIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SsoId, true
}

// SetSsoId sets field value
func (o *SsoDeleteRequest) SetSsoId(v int32) {
	o.SsoId = v
}

func (o SsoDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ssoId"] = o.SsoId
	}
	return json.Marshal(toSerialize)
}

type NullableSsoDeleteRequest struct {
	value *SsoDeleteRequest
	isSet bool
}

func (v NullableSsoDeleteRequest) Get() *SsoDeleteRequest {
	return v.value
}

func (v *NullableSsoDeleteRequest) Set(val *SsoDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSsoDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSsoDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSsoDeleteRequest(val *SsoDeleteRequest) *NullableSsoDeleteRequest {
	return &NullableSsoDeleteRequest{value: val, isSet: true}
}

func (v NullableSsoDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSsoDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


