/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchcontrolStartWorkerRequest struct for BatchcontrolStartWorkerRequest
type BatchcontrolStartWorkerRequest struct {
	AdminId int32 `json:"adminId"`
	Cause *string `json:"cause,omitempty"`
	WorkerId int32 `json:"workerId"`
}

// NewBatchcontrolStartWorkerRequest instantiates a new BatchcontrolStartWorkerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchcontrolStartWorkerRequest(adminId int32, workerId int32) *BatchcontrolStartWorkerRequest {
	this := BatchcontrolStartWorkerRequest{}
	this.AdminId = adminId
	this.WorkerId = workerId
	return &this
}

// NewBatchcontrolStartWorkerRequestWithDefaults instantiates a new BatchcontrolStartWorkerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchcontrolStartWorkerRequestWithDefaults() *BatchcontrolStartWorkerRequest {
	this := BatchcontrolStartWorkerRequest{}
	return &this
}

// GetAdminId returns the AdminId field value
func (o *BatchcontrolStartWorkerRequest) GetAdminId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AdminId
}

// GetAdminIdOk returns a tuple with the AdminId field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolStartWorkerRequest) GetAdminIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminId, true
}

// SetAdminId sets field value
func (o *BatchcontrolStartWorkerRequest) SetAdminId(v int32) {
	o.AdminId = v
}

// GetCause returns the Cause field value if set, zero value otherwise.
func (o *BatchcontrolStartWorkerRequest) GetCause() string {
	if o == nil || o.Cause == nil {
		var ret string
		return ret
	}
	return *o.Cause
}

// GetCauseOk returns a tuple with the Cause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchcontrolStartWorkerRequest) GetCauseOk() (*string, bool) {
	if o == nil || o.Cause == nil {
		return nil, false
	}
	return o.Cause, true
}

// HasCause returns a boolean if a field has been set.
func (o *BatchcontrolStartWorkerRequest) HasCause() bool {
	if o != nil && o.Cause != nil {
		return true
	}

	return false
}

// SetCause gets a reference to the given string and assigns it to the Cause field.
func (o *BatchcontrolStartWorkerRequest) SetCause(v string) {
	o.Cause = &v
}

// GetWorkerId returns the WorkerId field value
func (o *BatchcontrolStartWorkerRequest) GetWorkerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolStartWorkerRequest) GetWorkerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkerId, true
}

// SetWorkerId sets field value
func (o *BatchcontrolStartWorkerRequest) SetWorkerId(v int32) {
	o.WorkerId = v
}

func (o BatchcontrolStartWorkerRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["adminId"] = o.AdminId
	}
	if o.Cause != nil {
		toSerialize["cause"] = o.Cause
	}
	if true {
		toSerialize["workerId"] = o.WorkerId
	}
	return json.Marshal(toSerialize)
}

type NullableBatchcontrolStartWorkerRequest struct {
	value *BatchcontrolStartWorkerRequest
	isSet bool
}

func (v NullableBatchcontrolStartWorkerRequest) Get() *BatchcontrolStartWorkerRequest {
	return v.value
}

func (v *NullableBatchcontrolStartWorkerRequest) Set(val *BatchcontrolStartWorkerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchcontrolStartWorkerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchcontrolStartWorkerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchcontrolStartWorkerRequest(val *BatchcontrolStartWorkerRequest) *NullableBatchcontrolStartWorkerRequest {
	return &NullableBatchcontrolStartWorkerRequest{value: val, isSet: true}
}

func (v NullableBatchcontrolStartWorkerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchcontrolStartWorkerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


