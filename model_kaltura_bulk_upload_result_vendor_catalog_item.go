/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaBulkUploadResultVendorCatalogItem struct for KalturaBulkUploadResultVendorCatalogItem
type KalturaBulkUploadResultVendorCatalogItem struct {
	KalturaBulkUploadResult
}

// NewKalturaBulkUploadResultVendorCatalogItem instantiates a new KalturaBulkUploadResultVendorCatalogItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaBulkUploadResultVendorCatalogItem() *KalturaBulkUploadResultVendorCatalogItem {
	this := KalturaBulkUploadResultVendorCatalogItem{}
	return &this
}

// NewKalturaBulkUploadResultVendorCatalogItemWithDefaults instantiates a new KalturaBulkUploadResultVendorCatalogItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaBulkUploadResultVendorCatalogItemWithDefaults() *KalturaBulkUploadResultVendorCatalogItem {
	this := KalturaBulkUploadResultVendorCatalogItem{}
	return &this
}

func (o KalturaBulkUploadResultVendorCatalogItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBulkUploadResult, errKalturaBulkUploadResult := json.Marshal(o.KalturaBulkUploadResult)
	if errKalturaBulkUploadResult != nil {
		return []byte{}, errKalturaBulkUploadResult
	}
	errKalturaBulkUploadResult = json.Unmarshal([]byte(serializedKalturaBulkUploadResult), &toSerialize)
	if errKalturaBulkUploadResult != nil {
		return []byte{}, errKalturaBulkUploadResult
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaBulkUploadResultVendorCatalogItem struct {
	value *KalturaBulkUploadResultVendorCatalogItem
	isSet bool
}

func (v NullableKalturaBulkUploadResultVendorCatalogItem) Get() *KalturaBulkUploadResultVendorCatalogItem {
	return v.value
}

func (v *NullableKalturaBulkUploadResultVendorCatalogItem) Set(val *KalturaBulkUploadResultVendorCatalogItem) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaBulkUploadResultVendorCatalogItem) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaBulkUploadResultVendorCatalogItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaBulkUploadResultVendorCatalogItem(val *KalturaBulkUploadResultVendorCatalogItem) *NullableKalturaBulkUploadResultVendorCatalogItem {
	return &NullableKalturaBulkUploadResultVendorCatalogItem{value: val, isSet: true}
}

func (v NullableKalturaBulkUploadResultVendorCatalogItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaBulkUploadResultVendorCatalogItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


