/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ReportGetCsvFromStringParamsRequest struct for ReportGetCsvFromStringParamsRequest
type ReportGetCsvFromStringParamsRequest struct {
	ExcludedFields *string `json:"excludedFields,omitempty"`
	Id int32 `json:"id"`
	Params *string `json:"params,omitempty"`
}

// NewReportGetCsvFromStringParamsRequest instantiates a new ReportGetCsvFromStringParamsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportGetCsvFromStringParamsRequest(id int32) *ReportGetCsvFromStringParamsRequest {
	this := ReportGetCsvFromStringParamsRequest{}
	this.Id = id
	return &this
}

// NewReportGetCsvFromStringParamsRequestWithDefaults instantiates a new ReportGetCsvFromStringParamsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportGetCsvFromStringParamsRequestWithDefaults() *ReportGetCsvFromStringParamsRequest {
	this := ReportGetCsvFromStringParamsRequest{}
	return &this
}

// GetExcludedFields returns the ExcludedFields field value if set, zero value otherwise.
func (o *ReportGetCsvFromStringParamsRequest) GetExcludedFields() string {
	if o == nil || o.ExcludedFields == nil {
		var ret string
		return ret
	}
	return *o.ExcludedFields
}

// GetExcludedFieldsOk returns a tuple with the ExcludedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportGetCsvFromStringParamsRequest) GetExcludedFieldsOk() (*string, bool) {
	if o == nil || o.ExcludedFields == nil {
		return nil, false
	}
	return o.ExcludedFields, true
}

// HasExcludedFields returns a boolean if a field has been set.
func (o *ReportGetCsvFromStringParamsRequest) HasExcludedFields() bool {
	if o != nil && o.ExcludedFields != nil {
		return true
	}

	return false
}

// SetExcludedFields gets a reference to the given string and assigns it to the ExcludedFields field.
func (o *ReportGetCsvFromStringParamsRequest) SetExcludedFields(v string) {
	o.ExcludedFields = &v
}

// GetId returns the Id field value
func (o *ReportGetCsvFromStringParamsRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ReportGetCsvFromStringParamsRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ReportGetCsvFromStringParamsRequest) SetId(v int32) {
	o.Id = v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *ReportGetCsvFromStringParamsRequest) GetParams() string {
	if o == nil || o.Params == nil {
		var ret string
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReportGetCsvFromStringParamsRequest) GetParamsOk() (*string, bool) {
	if o == nil || o.Params == nil {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *ReportGetCsvFromStringParamsRequest) HasParams() bool {
	if o != nil && o.Params != nil {
		return true
	}

	return false
}

// SetParams gets a reference to the given string and assigns it to the Params field.
func (o *ReportGetCsvFromStringParamsRequest) SetParams(v string) {
	o.Params = &v
}

func (o ReportGetCsvFromStringParamsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExcludedFields != nil {
		toSerialize["excludedFields"] = o.ExcludedFields
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Params != nil {
		toSerialize["params"] = o.Params
	}
	return json.Marshal(toSerialize)
}

type NullableReportGetCsvFromStringParamsRequest struct {
	value *ReportGetCsvFromStringParamsRequest
	isSet bool
}

func (v NullableReportGetCsvFromStringParamsRequest) Get() *ReportGetCsvFromStringParamsRequest {
	return v.value
}

func (v *NullableReportGetCsvFromStringParamsRequest) Set(val *ReportGetCsvFromStringParamsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReportGetCsvFromStringParamsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReportGetCsvFromStringParamsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportGetCsvFromStringParamsRequest(val *ReportGetCsvFromStringParamsRequest) *NullableReportGetCsvFromStringParamsRequest {
	return &NullableReportGetCsvFromStringParamsRequest{value: val, isSet: true}
}

func (v NullableReportGetCsvFromStringParamsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportGetCsvFromStringParamsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


