/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GroupUserUpdateRequest struct for GroupUserUpdateRequest
type GroupUserUpdateRequest struct {
	GroupUser KalturaGroupUser `json:"groupUser"`
	GroupUserId string `json:"groupUserId"`
}

// NewGroupUserUpdateRequest instantiates a new GroupUserUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupUserUpdateRequest(groupUser KalturaGroupUser, groupUserId string) *GroupUserUpdateRequest {
	this := GroupUserUpdateRequest{}
	this.GroupUser = groupUser
	this.GroupUserId = groupUserId
	return &this
}

// NewGroupUserUpdateRequestWithDefaults instantiates a new GroupUserUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupUserUpdateRequestWithDefaults() *GroupUserUpdateRequest {
	this := GroupUserUpdateRequest{}
	return &this
}

// GetGroupUser returns the GroupUser field value
func (o *GroupUserUpdateRequest) GetGroupUser() KalturaGroupUser {
	if o == nil {
		var ret KalturaGroupUser
		return ret
	}

	return o.GroupUser
}

// GetGroupUserOk returns a tuple with the GroupUser field value
// and a boolean to check if the value has been set.
func (o *GroupUserUpdateRequest) GetGroupUserOk() (*KalturaGroupUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupUser, true
}

// SetGroupUser sets field value
func (o *GroupUserUpdateRequest) SetGroupUser(v KalturaGroupUser) {
	o.GroupUser = v
}

// GetGroupUserId returns the GroupUserId field value
func (o *GroupUserUpdateRequest) GetGroupUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupUserId
}

// GetGroupUserIdOk returns a tuple with the GroupUserId field value
// and a boolean to check if the value has been set.
func (o *GroupUserUpdateRequest) GetGroupUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupUserId, true
}

// SetGroupUserId sets field value
func (o *GroupUserUpdateRequest) SetGroupUserId(v string) {
	o.GroupUserId = v
}

func (o GroupUserUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["groupUser"] = o.GroupUser
	}
	if true {
		toSerialize["groupUserId"] = o.GroupUserId
	}
	return json.Marshal(toSerialize)
}

type NullableGroupUserUpdateRequest struct {
	value *GroupUserUpdateRequest
	isSet bool
}

func (v NullableGroupUserUpdateRequest) Get() *GroupUserUpdateRequest {
	return v.value
}

func (v *NullableGroupUserUpdateRequest) Set(val *GroupUserUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupUserUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupUserUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupUserUpdateRequest(val *GroupUserUpdateRequest) *NullableGroupUserUpdateRequest {
	return &NullableGroupUserUpdateRequest{value: val, isSet: true}
}

func (v NullableGroupUserUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupUserUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


