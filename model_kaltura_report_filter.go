/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaReportFilter struct for KalturaReportFilter
type KalturaReportFilter struct {
	// The dimension whose values should be filtered
	Dimension *string `json:"dimension,omitempty"`
	OrderBy *string `json:"orderBy,omitempty"`
	// The (comma separated) values to include in the filter
	Values *string `json:"values,omitempty"`
}

// NewKalturaReportFilter instantiates a new KalturaReportFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaReportFilter() *KalturaReportFilter {
	this := KalturaReportFilter{}
	return &this
}

// NewKalturaReportFilterWithDefaults instantiates a new KalturaReportFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaReportFilterWithDefaults() *KalturaReportFilter {
	this := KalturaReportFilter{}
	return &this
}

// GetDimension returns the Dimension field value if set, zero value otherwise.
func (o *KalturaReportFilter) GetDimension() string {
	if o == nil || o.Dimension == nil {
		var ret string
		return ret
	}
	return *o.Dimension
}

// GetDimensionOk returns a tuple with the Dimension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportFilter) GetDimensionOk() (*string, bool) {
	if o == nil || o.Dimension == nil {
		return nil, false
	}
	return o.Dimension, true
}

// HasDimension returns a boolean if a field has been set.
func (o *KalturaReportFilter) HasDimension() bool {
	if o != nil && o.Dimension != nil {
		return true
	}

	return false
}

// SetDimension gets a reference to the given string and assigns it to the Dimension field.
func (o *KalturaReportFilter) SetDimension(v string) {
	o.Dimension = &v
}

// GetOrderBy returns the OrderBy field value if set, zero value otherwise.
func (o *KalturaReportFilter) GetOrderBy() string {
	if o == nil || o.OrderBy == nil {
		var ret string
		return ret
	}
	return *o.OrderBy
}

// GetOrderByOk returns a tuple with the OrderBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportFilter) GetOrderByOk() (*string, bool) {
	if o == nil || o.OrderBy == nil {
		return nil, false
	}
	return o.OrderBy, true
}

// HasOrderBy returns a boolean if a field has been set.
func (o *KalturaReportFilter) HasOrderBy() bool {
	if o != nil && o.OrderBy != nil {
		return true
	}

	return false
}

// SetOrderBy gets a reference to the given string and assigns it to the OrderBy field.
func (o *KalturaReportFilter) SetOrderBy(v string) {
	o.OrderBy = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *KalturaReportFilter) GetValues() string {
	if o == nil || o.Values == nil {
		var ret string
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportFilter) GetValuesOk() (*string, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *KalturaReportFilter) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given string and assigns it to the Values field.
func (o *KalturaReportFilter) SetValues(v string) {
	o.Values = &v
}

func (o KalturaReportFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Dimension != nil {
		toSerialize["dimension"] = o.Dimension
	}
	if o.OrderBy != nil {
		toSerialize["orderBy"] = o.OrderBy
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaReportFilter struct {
	value *KalturaReportFilter
	isSet bool
}

func (v NullableKalturaReportFilter) Get() *KalturaReportFilter {
	return v.value
}

func (v *NullableKalturaReportFilter) Set(val *KalturaReportFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaReportFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaReportFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaReportFilter(val *KalturaReportFilter) *NullableKalturaReportFilter {
	return &NullableKalturaReportFilter{value: val, isSet: true}
}

func (v NullableKalturaReportFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaReportFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


