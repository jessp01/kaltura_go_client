/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CategoryCloneRequest struct for CategoryCloneRequest
type CategoryCloneRequest struct {
	CategoryId int32 `json:"categoryId"`
	FromPartnerId int32 `json:"fromPartnerId"`
	ParentCategoryId *int32 `json:"parentCategoryId,omitempty"`
}

// NewCategoryCloneRequest instantiates a new CategoryCloneRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryCloneRequest(categoryId int32, fromPartnerId int32) *CategoryCloneRequest {
	this := CategoryCloneRequest{}
	this.CategoryId = categoryId
	this.FromPartnerId = fromPartnerId
	return &this
}

// NewCategoryCloneRequestWithDefaults instantiates a new CategoryCloneRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryCloneRequestWithDefaults() *CategoryCloneRequest {
	this := CategoryCloneRequest{}
	return &this
}

// GetCategoryId returns the CategoryId field value
func (o *CategoryCloneRequest) GetCategoryId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value
// and a boolean to check if the value has been set.
func (o *CategoryCloneRequest) GetCategoryIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryId, true
}

// SetCategoryId sets field value
func (o *CategoryCloneRequest) SetCategoryId(v int32) {
	o.CategoryId = v
}

// GetFromPartnerId returns the FromPartnerId field value
func (o *CategoryCloneRequest) GetFromPartnerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FromPartnerId
}

// GetFromPartnerIdOk returns a tuple with the FromPartnerId field value
// and a boolean to check if the value has been set.
func (o *CategoryCloneRequest) GetFromPartnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromPartnerId, true
}

// SetFromPartnerId sets field value
func (o *CategoryCloneRequest) SetFromPartnerId(v int32) {
	o.FromPartnerId = v
}

// GetParentCategoryId returns the ParentCategoryId field value if set, zero value otherwise.
func (o *CategoryCloneRequest) GetParentCategoryId() int32 {
	if o == nil || o.ParentCategoryId == nil {
		var ret int32
		return ret
	}
	return *o.ParentCategoryId
}

// GetParentCategoryIdOk returns a tuple with the ParentCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryCloneRequest) GetParentCategoryIdOk() (*int32, bool) {
	if o == nil || o.ParentCategoryId == nil {
		return nil, false
	}
	return o.ParentCategoryId, true
}

// HasParentCategoryId returns a boolean if a field has been set.
func (o *CategoryCloneRequest) HasParentCategoryId() bool {
	if o != nil && o.ParentCategoryId != nil {
		return true
	}

	return false
}

// SetParentCategoryId gets a reference to the given int32 and assigns it to the ParentCategoryId field.
func (o *CategoryCloneRequest) SetParentCategoryId(v int32) {
	o.ParentCategoryId = &v
}

func (o CategoryCloneRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["categoryId"] = o.CategoryId
	}
	if true {
		toSerialize["fromPartnerId"] = o.FromPartnerId
	}
	if o.ParentCategoryId != nil {
		toSerialize["parentCategoryId"] = o.ParentCategoryId
	}
	return json.Marshal(toSerialize)
}

type NullableCategoryCloneRequest struct {
	value *CategoryCloneRequest
	isSet bool
}

func (v NullableCategoryCloneRequest) Get() *CategoryCloneRequest {
	return v.value
}

func (v *NullableCategoryCloneRequest) Set(val *CategoryCloneRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryCloneRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryCloneRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryCloneRequest(val *CategoryCloneRequest) *NullableCategoryCloneRequest {
	return &NullableCategoryCloneRequest{value: val, isSet: true}
}

func (v NullableCategoryCloneRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryCloneRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


