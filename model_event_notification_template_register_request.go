/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EventNotificationTemplateRegisterRequest struct for EventNotificationTemplateRegisterRequest
type EventNotificationTemplateRegisterRequest struct {
	NotificationTemplateSystemName string `json:"notificationTemplateSystemName"`
	PushNotificationParams KalturaPushNotificationParams `json:"pushNotificationParams"`
}

// NewEventNotificationTemplateRegisterRequest instantiates a new EventNotificationTemplateRegisterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventNotificationTemplateRegisterRequest(notificationTemplateSystemName string, pushNotificationParams KalturaPushNotificationParams) *EventNotificationTemplateRegisterRequest {
	this := EventNotificationTemplateRegisterRequest{}
	this.NotificationTemplateSystemName = notificationTemplateSystemName
	this.PushNotificationParams = pushNotificationParams
	return &this
}

// NewEventNotificationTemplateRegisterRequestWithDefaults instantiates a new EventNotificationTemplateRegisterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventNotificationTemplateRegisterRequestWithDefaults() *EventNotificationTemplateRegisterRequest {
	this := EventNotificationTemplateRegisterRequest{}
	return &this
}

// GetNotificationTemplateSystemName returns the NotificationTemplateSystemName field value
func (o *EventNotificationTemplateRegisterRequest) GetNotificationTemplateSystemName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotificationTemplateSystemName
}

// GetNotificationTemplateSystemNameOk returns a tuple with the NotificationTemplateSystemName field value
// and a boolean to check if the value has been set.
func (o *EventNotificationTemplateRegisterRequest) GetNotificationTemplateSystemNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationTemplateSystemName, true
}

// SetNotificationTemplateSystemName sets field value
func (o *EventNotificationTemplateRegisterRequest) SetNotificationTemplateSystemName(v string) {
	o.NotificationTemplateSystemName = v
}

// GetPushNotificationParams returns the PushNotificationParams field value
func (o *EventNotificationTemplateRegisterRequest) GetPushNotificationParams() KalturaPushNotificationParams {
	if o == nil {
		var ret KalturaPushNotificationParams
		return ret
	}

	return o.PushNotificationParams
}

// GetPushNotificationParamsOk returns a tuple with the PushNotificationParams field value
// and a boolean to check if the value has been set.
func (o *EventNotificationTemplateRegisterRequest) GetPushNotificationParamsOk() (*KalturaPushNotificationParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PushNotificationParams, true
}

// SetPushNotificationParams sets field value
func (o *EventNotificationTemplateRegisterRequest) SetPushNotificationParams(v KalturaPushNotificationParams) {
	o.PushNotificationParams = v
}

func (o EventNotificationTemplateRegisterRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["notificationTemplateSystemName"] = o.NotificationTemplateSystemName
	}
	if true {
		toSerialize["pushNotificationParams"] = o.PushNotificationParams
	}
	return json.Marshal(toSerialize)
}

type NullableEventNotificationTemplateRegisterRequest struct {
	value *EventNotificationTemplateRegisterRequest
	isSet bool
}

func (v NullableEventNotificationTemplateRegisterRequest) Get() *EventNotificationTemplateRegisterRequest {
	return v.value
}

func (v *NullableEventNotificationTemplateRegisterRequest) Set(val *EventNotificationTemplateRegisterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEventNotificationTemplateRegisterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEventNotificationTemplateRegisterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventNotificationTemplateRegisterRequest(val *EventNotificationTemplateRegisterRequest) *NullableEventNotificationTemplateRegisterRequest {
	return &NullableEventNotificationTemplateRegisterRequest{value: val, isSet: true}
}

func (v NullableEventNotificationTemplateRegisterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventNotificationTemplateRegisterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


