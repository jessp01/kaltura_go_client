/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaEventNotificationScope struct for KalturaEventNotificationScope
type KalturaEventNotificationScope struct {
	KalturaScope
}

// NewKalturaEventNotificationScope instantiates a new KalturaEventNotificationScope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaEventNotificationScope() *KalturaEventNotificationScope {
	this := KalturaEventNotificationScope{}
	return &this
}

// NewKalturaEventNotificationScopeWithDefaults instantiates a new KalturaEventNotificationScope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaEventNotificationScopeWithDefaults() *KalturaEventNotificationScope {
	this := KalturaEventNotificationScope{}
	return &this
}

func (o KalturaEventNotificationScope) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaScope, errKalturaScope := json.Marshal(o.KalturaScope)
	if errKalturaScope != nil {
		return []byte{}, errKalturaScope
	}
	errKalturaScope = json.Unmarshal([]byte(serializedKalturaScope), &toSerialize)
	if errKalturaScope != nil {
		return []byte{}, errKalturaScope
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaEventNotificationScope struct {
	value *KalturaEventNotificationScope
	isSet bool
}

func (v NullableKalturaEventNotificationScope) Get() *KalturaEventNotificationScope {
	return v.value
}

func (v *NullableKalturaEventNotificationScope) Set(val *KalturaEventNotificationScope) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaEventNotificationScope) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaEventNotificationScope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaEventNotificationScope(val *KalturaEventNotificationScope) *NullableKalturaEventNotificationScope {
	return &NullableKalturaEventNotificationScope{value: val, isSet: true}
}

func (v NullableKalturaEventNotificationScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaEventNotificationScope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


