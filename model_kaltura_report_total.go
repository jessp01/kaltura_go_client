/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaReportTotal struct for KalturaReportTotal
type KalturaReportTotal struct {
	Data *string `json:"data,omitempty"`
	Header *string `json:"header,omitempty"`
}

// NewKalturaReportTotal instantiates a new KalturaReportTotal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaReportTotal() *KalturaReportTotal {
	this := KalturaReportTotal{}
	return &this
}

// NewKalturaReportTotalWithDefaults instantiates a new KalturaReportTotal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaReportTotalWithDefaults() *KalturaReportTotal {
	this := KalturaReportTotal{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *KalturaReportTotal) GetData() string {
	if o == nil || o.Data == nil {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportTotal) GetDataOk() (*string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *KalturaReportTotal) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *KalturaReportTotal) SetData(v string) {
	o.Data = &v
}

// GetHeader returns the Header field value if set, zero value otherwise.
func (o *KalturaReportTotal) GetHeader() string {
	if o == nil || o.Header == nil {
		var ret string
		return ret
	}
	return *o.Header
}

// GetHeaderOk returns a tuple with the Header field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportTotal) GetHeaderOk() (*string, bool) {
	if o == nil || o.Header == nil {
		return nil, false
	}
	return o.Header, true
}

// HasHeader returns a boolean if a field has been set.
func (o *KalturaReportTotal) HasHeader() bool {
	if o != nil && o.Header != nil {
		return true
	}

	return false
}

// SetHeader gets a reference to the given string and assigns it to the Header field.
func (o *KalturaReportTotal) SetHeader(v string) {
	o.Header = &v
}

func (o KalturaReportTotal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if o.Header != nil {
		toSerialize["header"] = o.Header
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaReportTotal struct {
	value *KalturaReportTotal
	isSet bool
}

func (v NullableKalturaReportTotal) Get() *KalturaReportTotal {
	return v.value
}

func (v *NullableKalturaReportTotal) Set(val *KalturaReportTotal) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaReportTotal) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaReportTotal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaReportTotal(val *KalturaReportTotal) *NullableKalturaReportTotal {
	return &NullableKalturaReportTotal{value: val, isSet: true}
}

func (v NullableKalturaReportTotal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaReportTotal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


