/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLiveStatsEvent Will hold data from the Kaltura Player components to be passed on to the live analytics system
type KalturaLiveStatsEvent struct {
	// bitrate used in the last 10 seconds
	Bitrate *int32 `json:"bitrate,omitempty"`
	// buffer time in seconds from the last 10 seconds
	BufferTime *int32 `json:"bufferTime,omitempty"`
	// Enum Type: `KalturaPlaybackProtocol`  delivery type used for this stream
	DeliveryType *string `json:"deliveryType,omitempty"`
	EntryId *string `json:"entryId,omitempty"`
	// incremental sequence of the event
	EventIndex *int32 `json:"eventIndex,omitempty"`
	// Enum Type: `KalturaLiveStatsEventType`  an integer representing the type of event being sent from the player
	EventType *int32 `json:"eventType,omitempty"`
	IsLive *bool `json:"isLive,omitempty"`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// the referrer of the client
	Referrer *string `json:"referrer,omitempty"`
	// a unique string generated by the client that will represent the client-side session: the primary component will pass it on to other components that sprout from it
	SessionId *string `json:"sessionId,omitempty"`
	// the event start time as string
	StartTime *string `json:"startTime,omitempty"`
}

// NewKalturaLiveStatsEvent instantiates a new KalturaLiveStatsEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLiveStatsEvent() *KalturaLiveStatsEvent {
	this := KalturaLiveStatsEvent{}
	return &this
}

// NewKalturaLiveStatsEventWithDefaults instantiates a new KalturaLiveStatsEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLiveStatsEventWithDefaults() *KalturaLiveStatsEvent {
	this := KalturaLiveStatsEvent{}
	return &this
}

// GetBitrate returns the Bitrate field value if set, zero value otherwise.
func (o *KalturaLiveStatsEvent) GetBitrate() int32 {
	if o == nil || o.Bitrate == nil {
		var ret int32
		return ret
	}
	return *o.Bitrate
}

// GetBitrateOk returns a tuple with the Bitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStatsEvent) GetBitrateOk() (*int32, bool) {
	if o == nil || o.Bitrate == nil {
		return nil, false
	}
	return o.Bitrate, true
}

// HasBitrate returns a boolean if a field has been set.
func (o *KalturaLiveStatsEvent) HasBitrate() bool {
	if o != nil && o.Bitrate != nil {
		return true
	}

	return false
}

// SetBitrate gets a reference to the given int32 and assigns it to the Bitrate field.
func (o *KalturaLiveStatsEvent) SetBitrate(v int32) {
	o.Bitrate = &v
}

// GetBufferTime returns the BufferTime field value if set, zero value otherwise.
func (o *KalturaLiveStatsEvent) GetBufferTime() int32 {
	if o == nil || o.BufferTime == nil {
		var ret int32
		return ret
	}
	return *o.BufferTime
}

// GetBufferTimeOk returns a tuple with the BufferTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStatsEvent) GetBufferTimeOk() (*int32, bool) {
	if o == nil || o.BufferTime == nil {
		return nil, false
	}
	return o.BufferTime, true
}

// HasBufferTime returns a boolean if a field has been set.
func (o *KalturaLiveStatsEvent) HasBufferTime() bool {
	if o != nil && o.BufferTime != nil {
		return true
	}

	return false
}

// SetBufferTime gets a reference to the given int32 and assigns it to the BufferTime field.
func (o *KalturaLiveStatsEvent) SetBufferTime(v int32) {
	o.BufferTime = &v
}

// GetDeliveryType returns the DeliveryType field value if set, zero value otherwise.
func (o *KalturaLiveStatsEvent) GetDeliveryType() string {
	if o == nil || o.DeliveryType == nil {
		var ret string
		return ret
	}
	return *o.DeliveryType
}

// GetDeliveryTypeOk returns a tuple with the DeliveryType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStatsEvent) GetDeliveryTypeOk() (*string, bool) {
	if o == nil || o.DeliveryType == nil {
		return nil, false
	}
	return o.DeliveryType, true
}

// HasDeliveryType returns a boolean if a field has been set.
func (o *KalturaLiveStatsEvent) HasDeliveryType() bool {
	if o != nil && o.DeliveryType != nil {
		return true
	}

	return false
}

// SetDeliveryType gets a reference to the given string and assigns it to the DeliveryType field.
func (o *KalturaLiveStatsEvent) SetDeliveryType(v string) {
	o.DeliveryType = &v
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *KalturaLiveStatsEvent) GetEntryId() string {
	if o == nil || o.EntryId == nil {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStatsEvent) GetEntryIdOk() (*string, bool) {
	if o == nil || o.EntryId == nil {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *KalturaLiveStatsEvent) HasEntryId() bool {
	if o != nil && o.EntryId != nil {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *KalturaLiveStatsEvent) SetEntryId(v string) {
	o.EntryId = &v
}

// GetEventIndex returns the EventIndex field value if set, zero value otherwise.
func (o *KalturaLiveStatsEvent) GetEventIndex() int32 {
	if o == nil || o.EventIndex == nil {
		var ret int32
		return ret
	}
	return *o.EventIndex
}

// GetEventIndexOk returns a tuple with the EventIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStatsEvent) GetEventIndexOk() (*int32, bool) {
	if o == nil || o.EventIndex == nil {
		return nil, false
	}
	return o.EventIndex, true
}

// HasEventIndex returns a boolean if a field has been set.
func (o *KalturaLiveStatsEvent) HasEventIndex() bool {
	if o != nil && o.EventIndex != nil {
		return true
	}

	return false
}

// SetEventIndex gets a reference to the given int32 and assigns it to the EventIndex field.
func (o *KalturaLiveStatsEvent) SetEventIndex(v int32) {
	o.EventIndex = &v
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *KalturaLiveStatsEvent) GetEventType() int32 {
	if o == nil || o.EventType == nil {
		var ret int32
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStatsEvent) GetEventTypeOk() (*int32, bool) {
	if o == nil || o.EventType == nil {
		return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *KalturaLiveStatsEvent) HasEventType() bool {
	if o != nil && o.EventType != nil {
		return true
	}

	return false
}

// SetEventType gets a reference to the given int32 and assigns it to the EventType field.
func (o *KalturaLiveStatsEvent) SetEventType(v int32) {
	o.EventType = &v
}

// GetIsLive returns the IsLive field value if set, zero value otherwise.
func (o *KalturaLiveStatsEvent) GetIsLive() bool {
	if o == nil || o.IsLive == nil {
		var ret bool
		return ret
	}
	return *o.IsLive
}

// GetIsLiveOk returns a tuple with the IsLive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStatsEvent) GetIsLiveOk() (*bool, bool) {
	if o == nil || o.IsLive == nil {
		return nil, false
	}
	return o.IsLive, true
}

// HasIsLive returns a boolean if a field has been set.
func (o *KalturaLiveStatsEvent) HasIsLive() bool {
	if o != nil && o.IsLive != nil {
		return true
	}

	return false
}

// SetIsLive gets a reference to the given bool and assigns it to the IsLive field.
func (o *KalturaLiveStatsEvent) SetIsLive(v bool) {
	o.IsLive = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaLiveStatsEvent) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStatsEvent) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaLiveStatsEvent) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaLiveStatsEvent) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetReferrer returns the Referrer field value if set, zero value otherwise.
func (o *KalturaLiveStatsEvent) GetReferrer() string {
	if o == nil || o.Referrer == nil {
		var ret string
		return ret
	}
	return *o.Referrer
}

// GetReferrerOk returns a tuple with the Referrer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStatsEvent) GetReferrerOk() (*string, bool) {
	if o == nil || o.Referrer == nil {
		return nil, false
	}
	return o.Referrer, true
}

// HasReferrer returns a boolean if a field has been set.
func (o *KalturaLiveStatsEvent) HasReferrer() bool {
	if o != nil && o.Referrer != nil {
		return true
	}

	return false
}

// SetReferrer gets a reference to the given string and assigns it to the Referrer field.
func (o *KalturaLiveStatsEvent) SetReferrer(v string) {
	o.Referrer = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *KalturaLiveStatsEvent) GetSessionId() string {
	if o == nil || o.SessionId == nil {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStatsEvent) GetSessionIdOk() (*string, bool) {
	if o == nil || o.SessionId == nil {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *KalturaLiveStatsEvent) HasSessionId() bool {
	if o != nil && o.SessionId != nil {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *KalturaLiveStatsEvent) SetSessionId(v string) {
	o.SessionId = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *KalturaLiveStatsEvent) GetStartTime() string {
	if o == nil || o.StartTime == nil {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveStatsEvent) GetStartTimeOk() (*string, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *KalturaLiveStatsEvent) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *KalturaLiveStatsEvent) SetStartTime(v string) {
	o.StartTime = &v
}

func (o KalturaLiveStatsEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bitrate != nil {
		toSerialize["bitrate"] = o.Bitrate
	}
	if o.BufferTime != nil {
		toSerialize["bufferTime"] = o.BufferTime
	}
	if o.DeliveryType != nil {
		toSerialize["deliveryType"] = o.DeliveryType
	}
	if o.EntryId != nil {
		toSerialize["entryId"] = o.EntryId
	}
	if o.EventIndex != nil {
		toSerialize["eventIndex"] = o.EventIndex
	}
	if o.EventType != nil {
		toSerialize["eventType"] = o.EventType
	}
	if o.IsLive != nil {
		toSerialize["isLive"] = o.IsLive
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.Referrer != nil {
		toSerialize["referrer"] = o.Referrer
	}
	if o.SessionId != nil {
		toSerialize["sessionId"] = o.SessionId
	}
	if o.StartTime != nil {
		toSerialize["startTime"] = o.StartTime
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLiveStatsEvent struct {
	value *KalturaLiveStatsEvent
	isSet bool
}

func (v NullableKalturaLiveStatsEvent) Get() *KalturaLiveStatsEvent {
	return v.value
}

func (v *NullableKalturaLiveStatsEvent) Set(val *KalturaLiveStatsEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLiveStatsEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLiveStatsEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLiveStatsEvent(val *KalturaLiveStatsEvent) *NullableKalturaLiveStatsEvent {
	return &NullableKalturaLiveStatsEvent{value: val, isSet: true}
}

func (v NullableKalturaLiveStatsEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLiveStatsEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


