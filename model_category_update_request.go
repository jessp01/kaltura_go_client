/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CategoryUpdateRequest struct for CategoryUpdateRequest
type CategoryUpdateRequest struct {
	Category KalturaCategory `json:"category"`
	Id int32 `json:"id"`
}

// NewCategoryUpdateRequest instantiates a new CategoryUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryUpdateRequest(category KalturaCategory, id int32) *CategoryUpdateRequest {
	this := CategoryUpdateRequest{}
	this.Category = category
	this.Id = id
	return &this
}

// NewCategoryUpdateRequestWithDefaults instantiates a new CategoryUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryUpdateRequestWithDefaults() *CategoryUpdateRequest {
	this := CategoryUpdateRequest{}
	return &this
}

// GetCategory returns the Category field value
func (o *CategoryUpdateRequest) GetCategory() KalturaCategory {
	if o == nil {
		var ret KalturaCategory
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *CategoryUpdateRequest) GetCategoryOk() (*KalturaCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *CategoryUpdateRequest) SetCategory(v KalturaCategory) {
	o.Category = v
}

// GetId returns the Id field value
func (o *CategoryUpdateRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CategoryUpdateRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CategoryUpdateRequest) SetId(v int32) {
	o.Id = v
}

func (o CategoryUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["category"] = o.Category
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableCategoryUpdateRequest struct {
	value *CategoryUpdateRequest
	isSet bool
}

func (v NullableCategoryUpdateRequest) Get() *CategoryUpdateRequest {
	return v.value
}

func (v *NullableCategoryUpdateRequest) Set(val *CategoryUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryUpdateRequest(val *CategoryUpdateRequest) *NullableCategoryUpdateRequest {
	return &NullableCategoryUpdateRequest{value: val, isSet: true}
}

func (v NullableCategoryUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


