/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MediaAddFromRecordedWebcamRequest struct for MediaAddFromRecordedWebcamRequest
type MediaAddFromRecordedWebcamRequest struct {
	MediaEntry KalturaMediaEntry `json:"mediaEntry"`
	WebcamTokenId string `json:"webcamTokenId"`
}

// NewMediaAddFromRecordedWebcamRequest instantiates a new MediaAddFromRecordedWebcamRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaAddFromRecordedWebcamRequest(mediaEntry KalturaMediaEntry, webcamTokenId string) *MediaAddFromRecordedWebcamRequest {
	this := MediaAddFromRecordedWebcamRequest{}
	this.MediaEntry = mediaEntry
	this.WebcamTokenId = webcamTokenId
	return &this
}

// NewMediaAddFromRecordedWebcamRequestWithDefaults instantiates a new MediaAddFromRecordedWebcamRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaAddFromRecordedWebcamRequestWithDefaults() *MediaAddFromRecordedWebcamRequest {
	this := MediaAddFromRecordedWebcamRequest{}
	return &this
}

// GetMediaEntry returns the MediaEntry field value
func (o *MediaAddFromRecordedWebcamRequest) GetMediaEntry() KalturaMediaEntry {
	if o == nil {
		var ret KalturaMediaEntry
		return ret
	}

	return o.MediaEntry
}

// GetMediaEntryOk returns a tuple with the MediaEntry field value
// and a boolean to check if the value has been set.
func (o *MediaAddFromRecordedWebcamRequest) GetMediaEntryOk() (*KalturaMediaEntry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediaEntry, true
}

// SetMediaEntry sets field value
func (o *MediaAddFromRecordedWebcamRequest) SetMediaEntry(v KalturaMediaEntry) {
	o.MediaEntry = v
}

// GetWebcamTokenId returns the WebcamTokenId field value
func (o *MediaAddFromRecordedWebcamRequest) GetWebcamTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebcamTokenId
}

// GetWebcamTokenIdOk returns a tuple with the WebcamTokenId field value
// and a boolean to check if the value has been set.
func (o *MediaAddFromRecordedWebcamRequest) GetWebcamTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebcamTokenId, true
}

// SetWebcamTokenId sets field value
func (o *MediaAddFromRecordedWebcamRequest) SetWebcamTokenId(v string) {
	o.WebcamTokenId = v
}

func (o MediaAddFromRecordedWebcamRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mediaEntry"] = o.MediaEntry
	}
	if true {
		toSerialize["webcamTokenId"] = o.WebcamTokenId
	}
	return json.Marshal(toSerialize)
}

type NullableMediaAddFromRecordedWebcamRequest struct {
	value *MediaAddFromRecordedWebcamRequest
	isSet bool
}

func (v NullableMediaAddFromRecordedWebcamRequest) Get() *MediaAddFromRecordedWebcamRequest {
	return v.value
}

func (v *NullableMediaAddFromRecordedWebcamRequest) Set(val *MediaAddFromRecordedWebcamRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaAddFromRecordedWebcamRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaAddFromRecordedWebcamRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaAddFromRecordedWebcamRequest(val *MediaAddFromRecordedWebcamRequest) *NullableMediaAddFromRecordedWebcamRequest {
	return &NullableMediaAddFromRecordedWebcamRequest{value: val, isSet: true}
}

func (v NullableMediaAddFromRecordedWebcamRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaAddFromRecordedWebcamRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


