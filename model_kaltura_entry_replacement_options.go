/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaEntryReplacementOptions Advanced configuration for entry replacement process
type KalturaEntryReplacementOptions struct {
	// If true manually created thumbnails will not be deleted on entry replacement
	KeepManualThumbnails *int32 `json:"keepManualThumbnails,omitempty"`
	PluginOptionItems []KalturaPluginReplacementOptionsItem `json:"pluginOptionItems,omitempty"`
}

// NewKalturaEntryReplacementOptions instantiates a new KalturaEntryReplacementOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaEntryReplacementOptions() *KalturaEntryReplacementOptions {
	this := KalturaEntryReplacementOptions{}
	return &this
}

// NewKalturaEntryReplacementOptionsWithDefaults instantiates a new KalturaEntryReplacementOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaEntryReplacementOptionsWithDefaults() *KalturaEntryReplacementOptions {
	this := KalturaEntryReplacementOptions{}
	return &this
}

// GetKeepManualThumbnails returns the KeepManualThumbnails field value if set, zero value otherwise.
func (o *KalturaEntryReplacementOptions) GetKeepManualThumbnails() int32 {
	if o == nil || o.KeepManualThumbnails == nil {
		var ret int32
		return ret
	}
	return *o.KeepManualThumbnails
}

// GetKeepManualThumbnailsOk returns a tuple with the KeepManualThumbnails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEntryReplacementOptions) GetKeepManualThumbnailsOk() (*int32, bool) {
	if o == nil || o.KeepManualThumbnails == nil {
		return nil, false
	}
	return o.KeepManualThumbnails, true
}

// HasKeepManualThumbnails returns a boolean if a field has been set.
func (o *KalturaEntryReplacementOptions) HasKeepManualThumbnails() bool {
	if o != nil && o.KeepManualThumbnails != nil {
		return true
	}

	return false
}

// SetKeepManualThumbnails gets a reference to the given int32 and assigns it to the KeepManualThumbnails field.
func (o *KalturaEntryReplacementOptions) SetKeepManualThumbnails(v int32) {
	o.KeepManualThumbnails = &v
}

// GetPluginOptionItems returns the PluginOptionItems field value if set, zero value otherwise.
func (o *KalturaEntryReplacementOptions) GetPluginOptionItems() []KalturaPluginReplacementOptionsItem {
	if o == nil || o.PluginOptionItems == nil {
		var ret []KalturaPluginReplacementOptionsItem
		return ret
	}
	return o.PluginOptionItems
}

// GetPluginOptionItemsOk returns a tuple with the PluginOptionItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaEntryReplacementOptions) GetPluginOptionItemsOk() ([]KalturaPluginReplacementOptionsItem, bool) {
	if o == nil || o.PluginOptionItems == nil {
		return nil, false
	}
	return o.PluginOptionItems, true
}

// HasPluginOptionItems returns a boolean if a field has been set.
func (o *KalturaEntryReplacementOptions) HasPluginOptionItems() bool {
	if o != nil && o.PluginOptionItems != nil {
		return true
	}

	return false
}

// SetPluginOptionItems gets a reference to the given []KalturaPluginReplacementOptionsItem and assigns it to the PluginOptionItems field.
func (o *KalturaEntryReplacementOptions) SetPluginOptionItems(v []KalturaPluginReplacementOptionsItem) {
	o.PluginOptionItems = v
}

func (o KalturaEntryReplacementOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeepManualThumbnails != nil {
		toSerialize["keepManualThumbnails"] = o.KeepManualThumbnails
	}
	if o.PluginOptionItems != nil {
		toSerialize["pluginOptionItems"] = o.PluginOptionItems
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaEntryReplacementOptions struct {
	value *KalturaEntryReplacementOptions
	isSet bool
}

func (v NullableKalturaEntryReplacementOptions) Get() *KalturaEntryReplacementOptions {
	return v.value
}

func (v *NullableKalturaEntryReplacementOptions) Set(val *KalturaEntryReplacementOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaEntryReplacementOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaEntryReplacementOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaEntryReplacementOptions(val *KalturaEntryReplacementOptions) *NullableKalturaEntryReplacementOptions {
	return &NullableKalturaEntryReplacementOptions{value: val, isSet: true}
}

func (v NullableKalturaEntryReplacementOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaEntryReplacementOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


