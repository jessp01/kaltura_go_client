/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CategoryUserUpdateRequest struct for CategoryUserUpdateRequest
type CategoryUserUpdateRequest struct {
	CategoryId int32 `json:"categoryId"`
	CategoryUser KalturaCategoryUser `json:"categoryUser"`
	Override *bool `json:"override,omitempty"`
	UserId string `json:"userId"`
}

// NewCategoryUserUpdateRequest instantiates a new CategoryUserUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryUserUpdateRequest(categoryId int32, categoryUser KalturaCategoryUser, userId string) *CategoryUserUpdateRequest {
	this := CategoryUserUpdateRequest{}
	this.CategoryId = categoryId
	this.CategoryUser = categoryUser
	var override bool = false
	this.Override = &override
	this.UserId = userId
	return &this
}

// NewCategoryUserUpdateRequestWithDefaults instantiates a new CategoryUserUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryUserUpdateRequestWithDefaults() *CategoryUserUpdateRequest {
	this := CategoryUserUpdateRequest{}
	var override bool = false
	this.Override = &override
	return &this
}

// GetCategoryId returns the CategoryId field value
func (o *CategoryUserUpdateRequest) GetCategoryId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value
// and a boolean to check if the value has been set.
func (o *CategoryUserUpdateRequest) GetCategoryIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryId, true
}

// SetCategoryId sets field value
func (o *CategoryUserUpdateRequest) SetCategoryId(v int32) {
	o.CategoryId = v
}

// GetCategoryUser returns the CategoryUser field value
func (o *CategoryUserUpdateRequest) GetCategoryUser() KalturaCategoryUser {
	if o == nil {
		var ret KalturaCategoryUser
		return ret
	}

	return o.CategoryUser
}

// GetCategoryUserOk returns a tuple with the CategoryUser field value
// and a boolean to check if the value has been set.
func (o *CategoryUserUpdateRequest) GetCategoryUserOk() (*KalturaCategoryUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryUser, true
}

// SetCategoryUser sets field value
func (o *CategoryUserUpdateRequest) SetCategoryUser(v KalturaCategoryUser) {
	o.CategoryUser = v
}

// GetOverride returns the Override field value if set, zero value otherwise.
func (o *CategoryUserUpdateRequest) GetOverride() bool {
	if o == nil || o.Override == nil {
		var ret bool
		return ret
	}
	return *o.Override
}

// GetOverrideOk returns a tuple with the Override field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryUserUpdateRequest) GetOverrideOk() (*bool, bool) {
	if o == nil || o.Override == nil {
		return nil, false
	}
	return o.Override, true
}

// HasOverride returns a boolean if a field has been set.
func (o *CategoryUserUpdateRequest) HasOverride() bool {
	if o != nil && o.Override != nil {
		return true
	}

	return false
}

// SetOverride gets a reference to the given bool and assigns it to the Override field.
func (o *CategoryUserUpdateRequest) SetOverride(v bool) {
	o.Override = &v
}

// GetUserId returns the UserId field value
func (o *CategoryUserUpdateRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *CategoryUserUpdateRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *CategoryUserUpdateRequest) SetUserId(v string) {
	o.UserId = v
}

func (o CategoryUserUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["categoryId"] = o.CategoryId
	}
	if true {
		toSerialize["categoryUser"] = o.CategoryUser
	}
	if o.Override != nil {
		toSerialize["override"] = o.Override
	}
	if true {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableCategoryUserUpdateRequest struct {
	value *CategoryUserUpdateRequest
	isSet bool
}

func (v NullableCategoryUserUpdateRequest) Get() *CategoryUserUpdateRequest {
	return v.value
}

func (v *NullableCategoryUserUpdateRequest) Set(val *CategoryUserUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryUserUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryUserUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryUserUpdateRequest(val *CategoryUserUpdateRequest) *NullableCategoryUserUpdateRequest {
	return &NullableCategoryUserUpdateRequest{value: val, isSet: true}
}

func (v NullableCategoryUserUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryUserUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


