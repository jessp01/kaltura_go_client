/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaPlayReadyPolicyFilter struct for KalturaPlayReadyPolicyFilter
type KalturaPlayReadyPolicyFilter struct {
	KalturaPlayReadyPolicyBaseFilter
}

// NewKalturaPlayReadyPolicyFilter instantiates a new KalturaPlayReadyPolicyFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaPlayReadyPolicyFilter() *KalturaPlayReadyPolicyFilter {
	this := KalturaPlayReadyPolicyFilter{}
	return &this
}

// NewKalturaPlayReadyPolicyFilterWithDefaults instantiates a new KalturaPlayReadyPolicyFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaPlayReadyPolicyFilterWithDefaults() *KalturaPlayReadyPolicyFilter {
	this := KalturaPlayReadyPolicyFilter{}
	return &this
}

func (o KalturaPlayReadyPolicyFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaPlayReadyPolicyBaseFilter, errKalturaPlayReadyPolicyBaseFilter := json.Marshal(o.KalturaPlayReadyPolicyBaseFilter)
	if errKalturaPlayReadyPolicyBaseFilter != nil {
		return []byte{}, errKalturaPlayReadyPolicyBaseFilter
	}
	errKalturaPlayReadyPolicyBaseFilter = json.Unmarshal([]byte(serializedKalturaPlayReadyPolicyBaseFilter), &toSerialize)
	if errKalturaPlayReadyPolicyBaseFilter != nil {
		return []byte{}, errKalturaPlayReadyPolicyBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaPlayReadyPolicyFilter struct {
	value *KalturaPlayReadyPolicyFilter
	isSet bool
}

func (v NullableKalturaPlayReadyPolicyFilter) Get() *KalturaPlayReadyPolicyFilter {
	return v.value
}

func (v *NullableKalturaPlayReadyPolicyFilter) Set(val *KalturaPlayReadyPolicyFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaPlayReadyPolicyFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaPlayReadyPolicyFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaPlayReadyPolicyFilter(val *KalturaPlayReadyPolicyFilter) *NullableKalturaPlayReadyPolicyFilter {
	return &NullableKalturaPlayReadyPolicyFilter{value: val, isSet: true}
}

func (v NullableKalturaPlayReadyPolicyFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaPlayReadyPolicyFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


