/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VirtualEventAddRequest struct for VirtualEventAddRequest
type VirtualEventAddRequest struct {
	VirtualEvent KalturaVirtualEvent `json:"virtualEvent"`
}

// NewVirtualEventAddRequest instantiates a new VirtualEventAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualEventAddRequest(virtualEvent KalturaVirtualEvent) *VirtualEventAddRequest {
	this := VirtualEventAddRequest{}
	this.VirtualEvent = virtualEvent
	return &this
}

// NewVirtualEventAddRequestWithDefaults instantiates a new VirtualEventAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualEventAddRequestWithDefaults() *VirtualEventAddRequest {
	this := VirtualEventAddRequest{}
	return &this
}

// GetVirtualEvent returns the VirtualEvent field value
func (o *VirtualEventAddRequest) GetVirtualEvent() KalturaVirtualEvent {
	if o == nil {
		var ret KalturaVirtualEvent
		return ret
	}

	return o.VirtualEvent
}

// GetVirtualEventOk returns a tuple with the VirtualEvent field value
// and a boolean to check if the value has been set.
func (o *VirtualEventAddRequest) GetVirtualEventOk() (*KalturaVirtualEvent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualEvent, true
}

// SetVirtualEvent sets field value
func (o *VirtualEventAddRequest) SetVirtualEvent(v KalturaVirtualEvent) {
	o.VirtualEvent = v
}

func (o VirtualEventAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["virtualEvent"] = o.VirtualEvent
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualEventAddRequest struct {
	value *VirtualEventAddRequest
	isSet bool
}

func (v NullableVirtualEventAddRequest) Get() *VirtualEventAddRequest {
	return v.value
}

func (v *NullableVirtualEventAddRequest) Set(val *VirtualEventAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualEventAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualEventAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualEventAddRequest(val *VirtualEventAddRequest) *NullableVirtualEventAddRequest {
	return &NullableVirtualEventAddRequest{value: val, isSet: true}
}

func (v NullableVirtualEventAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualEventAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


