/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ScheduleEventUpdateLiveFeatureRequest struct for ScheduleEventUpdateLiveFeatureRequest
type ScheduleEventUpdateLiveFeatureRequest struct {
	FeatureName string `json:"featureName"`
	LiveFeature KalturaLiveFeature `json:"liveFeature"`
	ScheduledEventId int32 `json:"scheduledEventId"`
}

// NewScheduleEventUpdateLiveFeatureRequest instantiates a new ScheduleEventUpdateLiveFeatureRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScheduleEventUpdateLiveFeatureRequest(featureName string, liveFeature KalturaLiveFeature, scheduledEventId int32) *ScheduleEventUpdateLiveFeatureRequest {
	this := ScheduleEventUpdateLiveFeatureRequest{}
	this.FeatureName = featureName
	this.LiveFeature = liveFeature
	this.ScheduledEventId = scheduledEventId
	return &this
}

// NewScheduleEventUpdateLiveFeatureRequestWithDefaults instantiates a new ScheduleEventUpdateLiveFeatureRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScheduleEventUpdateLiveFeatureRequestWithDefaults() *ScheduleEventUpdateLiveFeatureRequest {
	this := ScheduleEventUpdateLiveFeatureRequest{}
	return &this
}

// GetFeatureName returns the FeatureName field value
func (o *ScheduleEventUpdateLiveFeatureRequest) GetFeatureName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeatureName
}

// GetFeatureNameOk returns a tuple with the FeatureName field value
// and a boolean to check if the value has been set.
func (o *ScheduleEventUpdateLiveFeatureRequest) GetFeatureNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeatureName, true
}

// SetFeatureName sets field value
func (o *ScheduleEventUpdateLiveFeatureRequest) SetFeatureName(v string) {
	o.FeatureName = v
}

// GetLiveFeature returns the LiveFeature field value
func (o *ScheduleEventUpdateLiveFeatureRequest) GetLiveFeature() KalturaLiveFeature {
	if o == nil {
		var ret KalturaLiveFeature
		return ret
	}

	return o.LiveFeature
}

// GetLiveFeatureOk returns a tuple with the LiveFeature field value
// and a boolean to check if the value has been set.
func (o *ScheduleEventUpdateLiveFeatureRequest) GetLiveFeatureOk() (*KalturaLiveFeature, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LiveFeature, true
}

// SetLiveFeature sets field value
func (o *ScheduleEventUpdateLiveFeatureRequest) SetLiveFeature(v KalturaLiveFeature) {
	o.LiveFeature = v
}

// GetScheduledEventId returns the ScheduledEventId field value
func (o *ScheduleEventUpdateLiveFeatureRequest) GetScheduledEventId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ScheduledEventId
}

// GetScheduledEventIdOk returns a tuple with the ScheduledEventId field value
// and a boolean to check if the value has been set.
func (o *ScheduleEventUpdateLiveFeatureRequest) GetScheduledEventIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduledEventId, true
}

// SetScheduledEventId sets field value
func (o *ScheduleEventUpdateLiveFeatureRequest) SetScheduledEventId(v int32) {
	o.ScheduledEventId = v
}

func (o ScheduleEventUpdateLiveFeatureRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["featureName"] = o.FeatureName
	}
	if true {
		toSerialize["liveFeature"] = o.LiveFeature
	}
	if true {
		toSerialize["scheduledEventId"] = o.ScheduledEventId
	}
	return json.Marshal(toSerialize)
}

type NullableScheduleEventUpdateLiveFeatureRequest struct {
	value *ScheduleEventUpdateLiveFeatureRequest
	isSet bool
}

func (v NullableScheduleEventUpdateLiveFeatureRequest) Get() *ScheduleEventUpdateLiveFeatureRequest {
	return v.value
}

func (v *NullableScheduleEventUpdateLiveFeatureRequest) Set(val *ScheduleEventUpdateLiveFeatureRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableScheduleEventUpdateLiveFeatureRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableScheduleEventUpdateLiveFeatureRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScheduleEventUpdateLiveFeatureRequest(val *ScheduleEventUpdateLiveFeatureRequest) *NullableScheduleEventUpdateLiveFeatureRequest {
	return &NullableScheduleEventUpdateLiveFeatureRequest{value: val, isSet: true}
}

func (v NullableScheduleEventUpdateLiveFeatureRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScheduleEventUpdateLiveFeatureRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


