/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSwfFlavorParamsBaseFilter `abstract`
type KalturaSwfFlavorParamsBaseFilter struct {
	KalturaFlavorParamsFilter
}

// NewKalturaSwfFlavorParamsBaseFilter instantiates a new KalturaSwfFlavorParamsBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSwfFlavorParamsBaseFilter() *KalturaSwfFlavorParamsBaseFilter {
	this := KalturaSwfFlavorParamsBaseFilter{}
	return &this
}

// NewKalturaSwfFlavorParamsBaseFilterWithDefaults instantiates a new KalturaSwfFlavorParamsBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSwfFlavorParamsBaseFilterWithDefaults() *KalturaSwfFlavorParamsBaseFilter {
	this := KalturaSwfFlavorParamsBaseFilter{}
	return &this
}

func (o KalturaSwfFlavorParamsBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaFlavorParamsFilter, errKalturaFlavorParamsFilter := json.Marshal(o.KalturaFlavorParamsFilter)
	if errKalturaFlavorParamsFilter != nil {
		return []byte{}, errKalturaFlavorParamsFilter
	}
	errKalturaFlavorParamsFilter = json.Unmarshal([]byte(serializedKalturaFlavorParamsFilter), &toSerialize)
	if errKalturaFlavorParamsFilter != nil {
		return []byte{}, errKalturaFlavorParamsFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSwfFlavorParamsBaseFilter struct {
	value *KalturaSwfFlavorParamsBaseFilter
	isSet bool
}

func (v NullableKalturaSwfFlavorParamsBaseFilter) Get() *KalturaSwfFlavorParamsBaseFilter {
	return v.value
}

func (v *NullableKalturaSwfFlavorParamsBaseFilter) Set(val *KalturaSwfFlavorParamsBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSwfFlavorParamsBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSwfFlavorParamsBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSwfFlavorParamsBaseFilter(val *KalturaSwfFlavorParamsBaseFilter) *NullableKalturaSwfFlavorParamsBaseFilter {
	return &NullableKalturaSwfFlavorParamsBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaSwfFlavorParamsBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSwfFlavorParamsBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


