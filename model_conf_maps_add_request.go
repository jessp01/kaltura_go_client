/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConfMapsAddRequest struct for ConfMapsAddRequest
type ConfMapsAddRequest struct {
	Map KalturaConfMaps `json:"map"`
}

// NewConfMapsAddRequest instantiates a new ConfMapsAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfMapsAddRequest(map_ KalturaConfMaps) *ConfMapsAddRequest {
	this := ConfMapsAddRequest{}
	this.Map = map_
	return &this
}

// NewConfMapsAddRequestWithDefaults instantiates a new ConfMapsAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfMapsAddRequestWithDefaults() *ConfMapsAddRequest {
	this := ConfMapsAddRequest{}
	return &this
}

// GetMap returns the Map field value
func (o *ConfMapsAddRequest) GetMap() KalturaConfMaps {
	if o == nil {
		var ret KalturaConfMaps
		return ret
	}

	return o.Map
}

// GetMapOk returns a tuple with the Map field value
// and a boolean to check if the value has been set.
func (o *ConfMapsAddRequest) GetMapOk() (*KalturaConfMaps, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Map, true
}

// SetMap sets field value
func (o *ConfMapsAddRequest) SetMap(v KalturaConfMaps) {
	o.Map = v
}

func (o ConfMapsAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["map"] = o.Map
	}
	return json.Marshal(toSerialize)
}

type NullableConfMapsAddRequest struct {
	value *ConfMapsAddRequest
	isSet bool
}

func (v NullableConfMapsAddRequest) Get() *ConfMapsAddRequest {
	return v.value
}

func (v *NullableConfMapsAddRequest) Set(val *ConfMapsAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConfMapsAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConfMapsAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfMapsAddRequest(val *ConfMapsAddRequest) *NullableConfMapsAddRequest {
	return &NullableConfMapsAddRequest{value: val, isSet: true}
}

func (v NullableConfMapsAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfMapsAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


