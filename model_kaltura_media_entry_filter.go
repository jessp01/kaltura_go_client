/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaMediaEntryFilter struct for KalturaMediaEntryFilter
type KalturaMediaEntryFilter struct {
	KalturaMediaEntryBaseFilter
}

// NewKalturaMediaEntryFilter instantiates a new KalturaMediaEntryFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaMediaEntryFilter() *KalturaMediaEntryFilter {
	this := KalturaMediaEntryFilter{}
	return &this
}

// NewKalturaMediaEntryFilterWithDefaults instantiates a new KalturaMediaEntryFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaMediaEntryFilterWithDefaults() *KalturaMediaEntryFilter {
	this := KalturaMediaEntryFilter{}
	return &this
}

func (o KalturaMediaEntryFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaMediaEntryBaseFilter, errKalturaMediaEntryBaseFilter := json.Marshal(o.KalturaMediaEntryBaseFilter)
	if errKalturaMediaEntryBaseFilter != nil {
		return []byte{}, errKalturaMediaEntryBaseFilter
	}
	errKalturaMediaEntryBaseFilter = json.Unmarshal([]byte(serializedKalturaMediaEntryBaseFilter), &toSerialize)
	if errKalturaMediaEntryBaseFilter != nil {
		return []byte{}, errKalturaMediaEntryBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaMediaEntryFilter struct {
	value *KalturaMediaEntryFilter
	isSet bool
}

func (v NullableKalturaMediaEntryFilter) Get() *KalturaMediaEntryFilter {
	return v.value
}

func (v *NullableKalturaMediaEntryFilter) Set(val *KalturaMediaEntryFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaMediaEntryFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaMediaEntryFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaMediaEntryFilter(val *KalturaMediaEntryFilter) *NullableKalturaMediaEntryFilter {
	return &NullableKalturaMediaEntryFilter{value: val, isSet: true}
}

func (v NullableKalturaMediaEntryFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaMediaEntryFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


