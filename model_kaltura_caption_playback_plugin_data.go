/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaCaptionPlaybackPluginData struct for KalturaCaptionPlaybackPluginData
type KalturaCaptionPlaybackPluginData struct {
	Format *string `json:"format,omitempty"`
	IsDefault *bool `json:"isDefault,omitempty"`
	Label *string `json:"label,omitempty"`
	Language *string `json:"language,omitempty"`
	LanguageCode *string `json:"languageCode,omitempty"`
	Url *string `json:"url,omitempty"`
	WebVttUrl *string `json:"webVttUrl,omitempty"`
}

// NewKalturaCaptionPlaybackPluginData instantiates a new KalturaCaptionPlaybackPluginData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaCaptionPlaybackPluginData() *KalturaCaptionPlaybackPluginData {
	this := KalturaCaptionPlaybackPluginData{}
	return &this
}

// NewKalturaCaptionPlaybackPluginDataWithDefaults instantiates a new KalturaCaptionPlaybackPluginData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaCaptionPlaybackPluginDataWithDefaults() *KalturaCaptionPlaybackPluginData {
	this := KalturaCaptionPlaybackPluginData{}
	return &this
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *KalturaCaptionPlaybackPluginData) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCaptionPlaybackPluginData) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *KalturaCaptionPlaybackPluginData) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *KalturaCaptionPlaybackPluginData) SetFormat(v string) {
	o.Format = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *KalturaCaptionPlaybackPluginData) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCaptionPlaybackPluginData) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *KalturaCaptionPlaybackPluginData) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *KalturaCaptionPlaybackPluginData) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *KalturaCaptionPlaybackPluginData) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCaptionPlaybackPluginData) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *KalturaCaptionPlaybackPluginData) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *KalturaCaptionPlaybackPluginData) SetLabel(v string) {
	o.Label = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *KalturaCaptionPlaybackPluginData) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCaptionPlaybackPluginData) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *KalturaCaptionPlaybackPluginData) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *KalturaCaptionPlaybackPluginData) SetLanguage(v string) {
	o.Language = &v
}

// GetLanguageCode returns the LanguageCode field value if set, zero value otherwise.
func (o *KalturaCaptionPlaybackPluginData) GetLanguageCode() string {
	if o == nil || o.LanguageCode == nil {
		var ret string
		return ret
	}
	return *o.LanguageCode
}

// GetLanguageCodeOk returns a tuple with the LanguageCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCaptionPlaybackPluginData) GetLanguageCodeOk() (*string, bool) {
	if o == nil || o.LanguageCode == nil {
		return nil, false
	}
	return o.LanguageCode, true
}

// HasLanguageCode returns a boolean if a field has been set.
func (o *KalturaCaptionPlaybackPluginData) HasLanguageCode() bool {
	if o != nil && o.LanguageCode != nil {
		return true
	}

	return false
}

// SetLanguageCode gets a reference to the given string and assigns it to the LanguageCode field.
func (o *KalturaCaptionPlaybackPluginData) SetLanguageCode(v string) {
	o.LanguageCode = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *KalturaCaptionPlaybackPluginData) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCaptionPlaybackPluginData) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *KalturaCaptionPlaybackPluginData) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *KalturaCaptionPlaybackPluginData) SetUrl(v string) {
	o.Url = &v
}

// GetWebVttUrl returns the WebVttUrl field value if set, zero value otherwise.
func (o *KalturaCaptionPlaybackPluginData) GetWebVttUrl() string {
	if o == nil || o.WebVttUrl == nil {
		var ret string
		return ret
	}
	return *o.WebVttUrl
}

// GetWebVttUrlOk returns a tuple with the WebVttUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaCaptionPlaybackPluginData) GetWebVttUrlOk() (*string, bool) {
	if o == nil || o.WebVttUrl == nil {
		return nil, false
	}
	return o.WebVttUrl, true
}

// HasWebVttUrl returns a boolean if a field has been set.
func (o *KalturaCaptionPlaybackPluginData) HasWebVttUrl() bool {
	if o != nil && o.WebVttUrl != nil {
		return true
	}

	return false
}

// SetWebVttUrl gets a reference to the given string and assigns it to the WebVttUrl field.
func (o *KalturaCaptionPlaybackPluginData) SetWebVttUrl(v string) {
	o.WebVttUrl = &v
}

func (o KalturaCaptionPlaybackPluginData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.IsDefault != nil {
		toSerialize["isDefault"] = o.IsDefault
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.LanguageCode != nil {
		toSerialize["languageCode"] = o.LanguageCode
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.WebVttUrl != nil {
		toSerialize["webVttUrl"] = o.WebVttUrl
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaCaptionPlaybackPluginData struct {
	value *KalturaCaptionPlaybackPluginData
	isSet bool
}

func (v NullableKalturaCaptionPlaybackPluginData) Get() *KalturaCaptionPlaybackPluginData {
	return v.value
}

func (v *NullableKalturaCaptionPlaybackPluginData) Set(val *KalturaCaptionPlaybackPluginData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaCaptionPlaybackPluginData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaCaptionPlaybackPluginData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaCaptionPlaybackPluginData(val *KalturaCaptionPlaybackPluginData) *NullableKalturaCaptionPlaybackPluginData {
	return &NullableKalturaCaptionPlaybackPluginData{value: val, isSet: true}
}

func (v NullableKalturaCaptionPlaybackPluginData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaCaptionPlaybackPluginData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


