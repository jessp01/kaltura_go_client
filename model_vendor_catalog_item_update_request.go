/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VendorCatalogItemUpdateRequest struct for VendorCatalogItemUpdateRequest
type VendorCatalogItemUpdateRequest struct {
	Id int32 `json:"id"`
	VendorCatalogItem KalturaVendorCatalogItem `json:"vendorCatalogItem"`
}

// NewVendorCatalogItemUpdateRequest instantiates a new VendorCatalogItemUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVendorCatalogItemUpdateRequest(id int32, vendorCatalogItem KalturaVendorCatalogItem) *VendorCatalogItemUpdateRequest {
	this := VendorCatalogItemUpdateRequest{}
	this.Id = id
	this.VendorCatalogItem = vendorCatalogItem
	return &this
}

// NewVendorCatalogItemUpdateRequestWithDefaults instantiates a new VendorCatalogItemUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVendorCatalogItemUpdateRequestWithDefaults() *VendorCatalogItemUpdateRequest {
	this := VendorCatalogItemUpdateRequest{}
	return &this
}

// GetId returns the Id field value
func (o *VendorCatalogItemUpdateRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VendorCatalogItemUpdateRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VendorCatalogItemUpdateRequest) SetId(v int32) {
	o.Id = v
}

// GetVendorCatalogItem returns the VendorCatalogItem field value
func (o *VendorCatalogItemUpdateRequest) GetVendorCatalogItem() KalturaVendorCatalogItem {
	if o == nil {
		var ret KalturaVendorCatalogItem
		return ret
	}

	return o.VendorCatalogItem
}

// GetVendorCatalogItemOk returns a tuple with the VendorCatalogItem field value
// and a boolean to check if the value has been set.
func (o *VendorCatalogItemUpdateRequest) GetVendorCatalogItemOk() (*KalturaVendorCatalogItem, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VendorCatalogItem, true
}

// SetVendorCatalogItem sets field value
func (o *VendorCatalogItemUpdateRequest) SetVendorCatalogItem(v KalturaVendorCatalogItem) {
	o.VendorCatalogItem = v
}

func (o VendorCatalogItemUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["vendorCatalogItem"] = o.VendorCatalogItem
	}
	return json.Marshal(toSerialize)
}

type NullableVendorCatalogItemUpdateRequest struct {
	value *VendorCatalogItemUpdateRequest
	isSet bool
}

func (v NullableVendorCatalogItemUpdateRequest) Get() *VendorCatalogItemUpdateRequest {
	return v.value
}

func (v *NullableVendorCatalogItemUpdateRequest) Set(val *VendorCatalogItemUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVendorCatalogItemUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVendorCatalogItemUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVendorCatalogItemUpdateRequest(val *VendorCatalogItemUpdateRequest) *NullableVendorCatalogItemUpdateRequest {
	return &NullableVendorCatalogItemUpdateRequest{value: val, isSet: true}
}

func (v NullableVendorCatalogItemUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVendorCatalogItemUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


