/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VolatileInteractivityUpdateRequest struct for VolatileInteractivityUpdateRequest
type VolatileInteractivityUpdateRequest struct {
	EntryId string `json:"entryId"`
	KalturaVolatileInteractivity KalturaVolatileInteractivity `json:"kalturaVolatileInteractivity"`
	Version int32 `json:"version"`
}

// NewVolatileInteractivityUpdateRequest instantiates a new VolatileInteractivityUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolatileInteractivityUpdateRequest(entryId string, kalturaVolatileInteractivity KalturaVolatileInteractivity, version int32) *VolatileInteractivityUpdateRequest {
	this := VolatileInteractivityUpdateRequest{}
	this.EntryId = entryId
	this.KalturaVolatileInteractivity = kalturaVolatileInteractivity
	this.Version = version
	return &this
}

// NewVolatileInteractivityUpdateRequestWithDefaults instantiates a new VolatileInteractivityUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolatileInteractivityUpdateRequestWithDefaults() *VolatileInteractivityUpdateRequest {
	this := VolatileInteractivityUpdateRequest{}
	return &this
}

// GetEntryId returns the EntryId field value
func (o *VolatileInteractivityUpdateRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *VolatileInteractivityUpdateRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *VolatileInteractivityUpdateRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetKalturaVolatileInteractivity returns the KalturaVolatileInteractivity field value
func (o *VolatileInteractivityUpdateRequest) GetKalturaVolatileInteractivity() KalturaVolatileInteractivity {
	if o == nil {
		var ret KalturaVolatileInteractivity
		return ret
	}

	return o.KalturaVolatileInteractivity
}

// GetKalturaVolatileInteractivityOk returns a tuple with the KalturaVolatileInteractivity field value
// and a boolean to check if the value has been set.
func (o *VolatileInteractivityUpdateRequest) GetKalturaVolatileInteractivityOk() (*KalturaVolatileInteractivity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KalturaVolatileInteractivity, true
}

// SetKalturaVolatileInteractivity sets field value
func (o *VolatileInteractivityUpdateRequest) SetKalturaVolatileInteractivity(v KalturaVolatileInteractivity) {
	o.KalturaVolatileInteractivity = v
}

// GetVersion returns the Version field value
func (o *VolatileInteractivityUpdateRequest) GetVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *VolatileInteractivityUpdateRequest) GetVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *VolatileInteractivityUpdateRequest) SetVersion(v int32) {
	o.Version = v
}

func (o VolatileInteractivityUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if true {
		toSerialize["kalturaVolatileInteractivity"] = o.KalturaVolatileInteractivity
	}
	if true {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableVolatileInteractivityUpdateRequest struct {
	value *VolatileInteractivityUpdateRequest
	isSet bool
}

func (v NullableVolatileInteractivityUpdateRequest) Get() *VolatileInteractivityUpdateRequest {
	return v.value
}

func (v *NullableVolatileInteractivityUpdateRequest) Set(val *VolatileInteractivityUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVolatileInteractivityUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVolatileInteractivityUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolatileInteractivityUpdateRequest(val *VolatileInteractivityUpdateRequest) *NullableVolatileInteractivityUpdateRequest {
	return &NullableVolatileInteractivityUpdateRequest{value: val, isSet: true}
}

func (v NullableVolatileInteractivityUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolatileInteractivityUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


