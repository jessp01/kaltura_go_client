/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLiveReportInputFilter struct for KalturaLiveReportInputFilter
type KalturaLiveReportInputFilter struct {
	EntryIds *string `json:"entryIds,omitempty"`
	FromTime *int32 `json:"fromTime,omitempty"`
	// Enum Type: `KalturaNullableBoolean`
	Live *int32 `json:"live,omitempty"`
	// Enum Type: `KalturaLiveReportOrderBy`
	OrderBy *string `json:"orderBy,omitempty"`
	ToTime *int32 `json:"toTime,omitempty"`
}

// NewKalturaLiveReportInputFilter instantiates a new KalturaLiveReportInputFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLiveReportInputFilter() *KalturaLiveReportInputFilter {
	this := KalturaLiveReportInputFilter{}
	return &this
}

// NewKalturaLiveReportInputFilterWithDefaults instantiates a new KalturaLiveReportInputFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLiveReportInputFilterWithDefaults() *KalturaLiveReportInputFilter {
	this := KalturaLiveReportInputFilter{}
	return &this
}

// GetEntryIds returns the EntryIds field value if set, zero value otherwise.
func (o *KalturaLiveReportInputFilter) GetEntryIds() string {
	if o == nil || o.EntryIds == nil {
		var ret string
		return ret
	}
	return *o.EntryIds
}

// GetEntryIdsOk returns a tuple with the EntryIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveReportInputFilter) GetEntryIdsOk() (*string, bool) {
	if o == nil || o.EntryIds == nil {
		return nil, false
	}
	return o.EntryIds, true
}

// HasEntryIds returns a boolean if a field has been set.
func (o *KalturaLiveReportInputFilter) HasEntryIds() bool {
	if o != nil && o.EntryIds != nil {
		return true
	}

	return false
}

// SetEntryIds gets a reference to the given string and assigns it to the EntryIds field.
func (o *KalturaLiveReportInputFilter) SetEntryIds(v string) {
	o.EntryIds = &v
}

// GetFromTime returns the FromTime field value if set, zero value otherwise.
func (o *KalturaLiveReportInputFilter) GetFromTime() int32 {
	if o == nil || o.FromTime == nil {
		var ret int32
		return ret
	}
	return *o.FromTime
}

// GetFromTimeOk returns a tuple with the FromTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveReportInputFilter) GetFromTimeOk() (*int32, bool) {
	if o == nil || o.FromTime == nil {
		return nil, false
	}
	return o.FromTime, true
}

// HasFromTime returns a boolean if a field has been set.
func (o *KalturaLiveReportInputFilter) HasFromTime() bool {
	if o != nil && o.FromTime != nil {
		return true
	}

	return false
}

// SetFromTime gets a reference to the given int32 and assigns it to the FromTime field.
func (o *KalturaLiveReportInputFilter) SetFromTime(v int32) {
	o.FromTime = &v
}

// GetLive returns the Live field value if set, zero value otherwise.
func (o *KalturaLiveReportInputFilter) GetLive() int32 {
	if o == nil || o.Live == nil {
		var ret int32
		return ret
	}
	return *o.Live
}

// GetLiveOk returns a tuple with the Live field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveReportInputFilter) GetLiveOk() (*int32, bool) {
	if o == nil || o.Live == nil {
		return nil, false
	}
	return o.Live, true
}

// HasLive returns a boolean if a field has been set.
func (o *KalturaLiveReportInputFilter) HasLive() bool {
	if o != nil && o.Live != nil {
		return true
	}

	return false
}

// SetLive gets a reference to the given int32 and assigns it to the Live field.
func (o *KalturaLiveReportInputFilter) SetLive(v int32) {
	o.Live = &v
}

// GetOrderBy returns the OrderBy field value if set, zero value otherwise.
func (o *KalturaLiveReportInputFilter) GetOrderBy() string {
	if o == nil || o.OrderBy == nil {
		var ret string
		return ret
	}
	return *o.OrderBy
}

// GetOrderByOk returns a tuple with the OrderBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveReportInputFilter) GetOrderByOk() (*string, bool) {
	if o == nil || o.OrderBy == nil {
		return nil, false
	}
	return o.OrderBy, true
}

// HasOrderBy returns a boolean if a field has been set.
func (o *KalturaLiveReportInputFilter) HasOrderBy() bool {
	if o != nil && o.OrderBy != nil {
		return true
	}

	return false
}

// SetOrderBy gets a reference to the given string and assigns it to the OrderBy field.
func (o *KalturaLiveReportInputFilter) SetOrderBy(v string) {
	o.OrderBy = &v
}

// GetToTime returns the ToTime field value if set, zero value otherwise.
func (o *KalturaLiveReportInputFilter) GetToTime() int32 {
	if o == nil || o.ToTime == nil {
		var ret int32
		return ret
	}
	return *o.ToTime
}

// GetToTimeOk returns a tuple with the ToTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaLiveReportInputFilter) GetToTimeOk() (*int32, bool) {
	if o == nil || o.ToTime == nil {
		return nil, false
	}
	return o.ToTime, true
}

// HasToTime returns a boolean if a field has been set.
func (o *KalturaLiveReportInputFilter) HasToTime() bool {
	if o != nil && o.ToTime != nil {
		return true
	}

	return false
}

// SetToTime gets a reference to the given int32 and assigns it to the ToTime field.
func (o *KalturaLiveReportInputFilter) SetToTime(v int32) {
	o.ToTime = &v
}

func (o KalturaLiveReportInputFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntryIds != nil {
		toSerialize["entryIds"] = o.EntryIds
	}
	if o.FromTime != nil {
		toSerialize["fromTime"] = o.FromTime
	}
	if o.Live != nil {
		toSerialize["live"] = o.Live
	}
	if o.OrderBy != nil {
		toSerialize["orderBy"] = o.OrderBy
	}
	if o.ToTime != nil {
		toSerialize["toTime"] = o.ToTime
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLiveReportInputFilter struct {
	value *KalturaLiveReportInputFilter
	isSet bool
}

func (v NullableKalturaLiveReportInputFilter) Get() *KalturaLiveReportInputFilter {
	return v.value
}

func (v *NullableKalturaLiveReportInputFilter) Set(val *KalturaLiveReportInputFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLiveReportInputFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLiveReportInputFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLiveReportInputFilter(val *KalturaLiveReportInputFilter) *NullableKalturaLiveReportInputFilter {
	return &NullableKalturaLiveReportInputFilter{value: val, isSet: true}
}

func (v NullableKalturaLiveReportInputFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLiveReportInputFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


