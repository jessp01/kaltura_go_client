/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaConvertJobData struct for KalturaConvertJobData
type KalturaConvertJobData struct {
	KalturaConvartableJobData
}

// NewKalturaConvertJobData instantiates a new KalturaConvertJobData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaConvertJobData() *KalturaConvertJobData {
	this := KalturaConvertJobData{}
	return &this
}

// NewKalturaConvertJobDataWithDefaults instantiates a new KalturaConvertJobData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaConvertJobDataWithDefaults() *KalturaConvertJobData {
	this := KalturaConvertJobData{}
	return &this
}

func (o KalturaConvertJobData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaConvartableJobData, errKalturaConvartableJobData := json.Marshal(o.KalturaConvartableJobData)
	if errKalturaConvartableJobData != nil {
		return []byte{}, errKalturaConvartableJobData
	}
	errKalturaConvartableJobData = json.Unmarshal([]byte(serializedKalturaConvartableJobData), &toSerialize)
	if errKalturaConvartableJobData != nil {
		return []byte{}, errKalturaConvartableJobData
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaConvertJobData struct {
	value *KalturaConvertJobData
	isSet bool
}

func (v NullableKalturaConvertJobData) Get() *KalturaConvertJobData {
	return v.value
}

func (v *NullableKalturaConvertJobData) Set(val *KalturaConvertJobData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaConvertJobData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaConvertJobData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaConvertJobData(val *KalturaConvertJobData) *NullableKalturaConvertJobData {
	return &NullableKalturaConvertJobData{value: val, isSet: true}
}

func (v NullableKalturaConvertJobData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaConvertJobData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


