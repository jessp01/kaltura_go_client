/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaAccessControlAction `abstract`
type KalturaAccessControlAction struct {
	// `readOnly`  Enum Type: `KalturaAccessControlActionType`  The type of the access control action
	Type *string `json:"type,omitempty"`
}

// NewKalturaAccessControlAction instantiates a new KalturaAccessControlAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaAccessControlAction() *KalturaAccessControlAction {
	this := KalturaAccessControlAction{}
	return &this
}

// NewKalturaAccessControlActionWithDefaults instantiates a new KalturaAccessControlAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaAccessControlActionWithDefaults() *KalturaAccessControlAction {
	this := KalturaAccessControlAction{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *KalturaAccessControlAction) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaAccessControlAction) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *KalturaAccessControlAction) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *KalturaAccessControlAction) SetType(v string) {
	o.Type = &v
}

func (o KalturaAccessControlAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaAccessControlAction struct {
	value *KalturaAccessControlAction
	isSet bool
}

func (v NullableKalturaAccessControlAction) Get() *KalturaAccessControlAction {
	return v.value
}

func (v *NullableKalturaAccessControlAction) Set(val *KalturaAccessControlAction) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaAccessControlAction) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaAccessControlAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaAccessControlAction(val *KalturaAccessControlAction) *NullableKalturaAccessControlAction {
	return &NullableKalturaAccessControlAction{value: val, isSet: true}
}

func (v NullableKalturaAccessControlAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaAccessControlAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


