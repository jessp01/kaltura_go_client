/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaAnnotationBaseFilter `abstract`
type KalturaAnnotationBaseFilter struct {
	KalturaCuePointFilter
}

// NewKalturaAnnotationBaseFilter instantiates a new KalturaAnnotationBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaAnnotationBaseFilter() *KalturaAnnotationBaseFilter {
	this := KalturaAnnotationBaseFilter{}
	return &this
}

// NewKalturaAnnotationBaseFilterWithDefaults instantiates a new KalturaAnnotationBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaAnnotationBaseFilterWithDefaults() *KalturaAnnotationBaseFilter {
	this := KalturaAnnotationBaseFilter{}
	return &this
}

func (o KalturaAnnotationBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaCuePointFilter, errKalturaCuePointFilter := json.Marshal(o.KalturaCuePointFilter)
	if errKalturaCuePointFilter != nil {
		return []byte{}, errKalturaCuePointFilter
	}
	errKalturaCuePointFilter = json.Unmarshal([]byte(serializedKalturaCuePointFilter), &toSerialize)
	if errKalturaCuePointFilter != nil {
		return []byte{}, errKalturaCuePointFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaAnnotationBaseFilter struct {
	value *KalturaAnnotationBaseFilter
	isSet bool
}

func (v NullableKalturaAnnotationBaseFilter) Get() *KalturaAnnotationBaseFilter {
	return v.value
}

func (v *NullableKalturaAnnotationBaseFilter) Set(val *KalturaAnnotationBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaAnnotationBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaAnnotationBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaAnnotationBaseFilter(val *KalturaAnnotationBaseFilter) *NullableKalturaAnnotationBaseFilter {
	return &NullableKalturaAnnotationBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaAnnotationBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaAnnotationBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


