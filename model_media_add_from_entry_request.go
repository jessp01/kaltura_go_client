/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MediaAddFromEntryRequest struct for MediaAddFromEntryRequest
type MediaAddFromEntryRequest struct {
	MediaEntry *KalturaMediaEntry `json:"mediaEntry,omitempty"`
	SourceEntryId string `json:"sourceEntryId"`
	SourceFlavorParamsId *int32 `json:"sourceFlavorParamsId,omitempty"`
}

// NewMediaAddFromEntryRequest instantiates a new MediaAddFromEntryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaAddFromEntryRequest(sourceEntryId string) *MediaAddFromEntryRequest {
	this := MediaAddFromEntryRequest{}
	this.SourceEntryId = sourceEntryId
	return &this
}

// NewMediaAddFromEntryRequestWithDefaults instantiates a new MediaAddFromEntryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaAddFromEntryRequestWithDefaults() *MediaAddFromEntryRequest {
	this := MediaAddFromEntryRequest{}
	return &this
}

// GetMediaEntry returns the MediaEntry field value if set, zero value otherwise.
func (o *MediaAddFromEntryRequest) GetMediaEntry() KalturaMediaEntry {
	if o == nil || o.MediaEntry == nil {
		var ret KalturaMediaEntry
		return ret
	}
	return *o.MediaEntry
}

// GetMediaEntryOk returns a tuple with the MediaEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaAddFromEntryRequest) GetMediaEntryOk() (*KalturaMediaEntry, bool) {
	if o == nil || o.MediaEntry == nil {
		return nil, false
	}
	return o.MediaEntry, true
}

// HasMediaEntry returns a boolean if a field has been set.
func (o *MediaAddFromEntryRequest) HasMediaEntry() bool {
	if o != nil && o.MediaEntry != nil {
		return true
	}

	return false
}

// SetMediaEntry gets a reference to the given KalturaMediaEntry and assigns it to the MediaEntry field.
func (o *MediaAddFromEntryRequest) SetMediaEntry(v KalturaMediaEntry) {
	o.MediaEntry = &v
}

// GetSourceEntryId returns the SourceEntryId field value
func (o *MediaAddFromEntryRequest) GetSourceEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceEntryId
}

// GetSourceEntryIdOk returns a tuple with the SourceEntryId field value
// and a boolean to check if the value has been set.
func (o *MediaAddFromEntryRequest) GetSourceEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceEntryId, true
}

// SetSourceEntryId sets field value
func (o *MediaAddFromEntryRequest) SetSourceEntryId(v string) {
	o.SourceEntryId = v
}

// GetSourceFlavorParamsId returns the SourceFlavorParamsId field value if set, zero value otherwise.
func (o *MediaAddFromEntryRequest) GetSourceFlavorParamsId() int32 {
	if o == nil || o.SourceFlavorParamsId == nil {
		var ret int32
		return ret
	}
	return *o.SourceFlavorParamsId
}

// GetSourceFlavorParamsIdOk returns a tuple with the SourceFlavorParamsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaAddFromEntryRequest) GetSourceFlavorParamsIdOk() (*int32, bool) {
	if o == nil || o.SourceFlavorParamsId == nil {
		return nil, false
	}
	return o.SourceFlavorParamsId, true
}

// HasSourceFlavorParamsId returns a boolean if a field has been set.
func (o *MediaAddFromEntryRequest) HasSourceFlavorParamsId() bool {
	if o != nil && o.SourceFlavorParamsId != nil {
		return true
	}

	return false
}

// SetSourceFlavorParamsId gets a reference to the given int32 and assigns it to the SourceFlavorParamsId field.
func (o *MediaAddFromEntryRequest) SetSourceFlavorParamsId(v int32) {
	o.SourceFlavorParamsId = &v
}

func (o MediaAddFromEntryRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MediaEntry != nil {
		toSerialize["mediaEntry"] = o.MediaEntry
	}
	if true {
		toSerialize["sourceEntryId"] = o.SourceEntryId
	}
	if o.SourceFlavorParamsId != nil {
		toSerialize["sourceFlavorParamsId"] = o.SourceFlavorParamsId
	}
	return json.Marshal(toSerialize)
}

type NullableMediaAddFromEntryRequest struct {
	value *MediaAddFromEntryRequest
	isSet bool
}

func (v NullableMediaAddFromEntryRequest) Get() *MediaAddFromEntryRequest {
	return v.value
}

func (v *NullableMediaAddFromEntryRequest) Set(val *MediaAddFromEntryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaAddFromEntryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaAddFromEntryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaAddFromEntryRequest(val *MediaAddFromEntryRequest) *NullableMediaAddFromEntryRequest {
	return &NullableMediaAddFromEntryRequest{value: val, isSet: true}
}

func (v NullableMediaAddFromEntryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaAddFromEntryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


