/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BeaconAddRequest struct for BeaconAddRequest
type BeaconAddRequest struct {
	Beacon KalturaBeacon `json:"beacon"`
	ShouldLog *int32 `json:"shouldLog,omitempty"`
}

// NewBeaconAddRequest instantiates a new BeaconAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBeaconAddRequest(beacon KalturaBeacon) *BeaconAddRequest {
	this := BeaconAddRequest{}
	this.Beacon = beacon
	return &this
}

// NewBeaconAddRequestWithDefaults instantiates a new BeaconAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBeaconAddRequestWithDefaults() *BeaconAddRequest {
	this := BeaconAddRequest{}
	return &this
}

// GetBeacon returns the Beacon field value
func (o *BeaconAddRequest) GetBeacon() KalturaBeacon {
	if o == nil {
		var ret KalturaBeacon
		return ret
	}

	return o.Beacon
}

// GetBeaconOk returns a tuple with the Beacon field value
// and a boolean to check if the value has been set.
func (o *BeaconAddRequest) GetBeaconOk() (*KalturaBeacon, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Beacon, true
}

// SetBeacon sets field value
func (o *BeaconAddRequest) SetBeacon(v KalturaBeacon) {
	o.Beacon = v
}

// GetShouldLog returns the ShouldLog field value if set, zero value otherwise.
func (o *BeaconAddRequest) GetShouldLog() int32 {
	if o == nil || o.ShouldLog == nil {
		var ret int32
		return ret
	}
	return *o.ShouldLog
}

// GetShouldLogOk returns a tuple with the ShouldLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BeaconAddRequest) GetShouldLogOk() (*int32, bool) {
	if o == nil || o.ShouldLog == nil {
		return nil, false
	}
	return o.ShouldLog, true
}

// HasShouldLog returns a boolean if a field has been set.
func (o *BeaconAddRequest) HasShouldLog() bool {
	if o != nil && o.ShouldLog != nil {
		return true
	}

	return false
}

// SetShouldLog gets a reference to the given int32 and assigns it to the ShouldLog field.
func (o *BeaconAddRequest) SetShouldLog(v int32) {
	o.ShouldLog = &v
}

func (o BeaconAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["beacon"] = o.Beacon
	}
	if o.ShouldLog != nil {
		toSerialize["shouldLog"] = o.ShouldLog
	}
	return json.Marshal(toSerialize)
}

type NullableBeaconAddRequest struct {
	value *BeaconAddRequest
	isSet bool
}

func (v NullableBeaconAddRequest) Get() *BeaconAddRequest {
	return v.value
}

func (v *NullableBeaconAddRequest) Set(val *BeaconAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBeaconAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBeaconAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBeaconAddRequest(val *BeaconAddRequest) *NullableBeaconAddRequest {
	return &NullableBeaconAddRequest{value: val, isSet: true}
}

func (v NullableBeaconAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBeaconAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


