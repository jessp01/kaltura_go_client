/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaScheduleEventResource struct for KalturaScheduleEventResource
type KalturaScheduleEventResource struct {
	// `readOnly`  Creation date as Unix timestamp (In seconds)
	CreatedAt *int32 `json:"createdAt,omitempty"`
	// `insertOnly`
	EventId *int32 `json:"eventId,omitempty"`
	// `readOnly`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// `insertOnly`
	ResourceId *int32 `json:"resourceId,omitempty"`
	// `readOnly`  Last update as Unix timestamp (In seconds)
	UpdatedAt *int32 `json:"updatedAt,omitempty"`
}

// NewKalturaScheduleEventResource instantiates a new KalturaScheduleEventResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaScheduleEventResource() *KalturaScheduleEventResource {
	this := KalturaScheduleEventResource{}
	return &this
}

// NewKalturaScheduleEventResourceWithDefaults instantiates a new KalturaScheduleEventResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaScheduleEventResourceWithDefaults() *KalturaScheduleEventResource {
	this := KalturaScheduleEventResource{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *KalturaScheduleEventResource) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEventResource) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *KalturaScheduleEventResource) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *KalturaScheduleEventResource) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *KalturaScheduleEventResource) GetEventId() int32 {
	if o == nil || o.EventId == nil {
		var ret int32
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEventResource) GetEventIdOk() (*int32, bool) {
	if o == nil || o.EventId == nil {
		return nil, false
	}
	return o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *KalturaScheduleEventResource) HasEventId() bool {
	if o != nil && o.EventId != nil {
		return true
	}

	return false
}

// SetEventId gets a reference to the given int32 and assigns it to the EventId field.
func (o *KalturaScheduleEventResource) SetEventId(v int32) {
	o.EventId = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaScheduleEventResource) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEventResource) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaScheduleEventResource) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaScheduleEventResource) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetResourceId returns the ResourceId field value if set, zero value otherwise.
func (o *KalturaScheduleEventResource) GetResourceId() int32 {
	if o == nil || o.ResourceId == nil {
		var ret int32
		return ret
	}
	return *o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEventResource) GetResourceIdOk() (*int32, bool) {
	if o == nil || o.ResourceId == nil {
		return nil, false
	}
	return o.ResourceId, true
}

// HasResourceId returns a boolean if a field has been set.
func (o *KalturaScheduleEventResource) HasResourceId() bool {
	if o != nil && o.ResourceId != nil {
		return true
	}

	return false
}

// SetResourceId gets a reference to the given int32 and assigns it to the ResourceId field.
func (o *KalturaScheduleEventResource) SetResourceId(v int32) {
	o.ResourceId = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *KalturaScheduleEventResource) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaScheduleEventResource) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *KalturaScheduleEventResource) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *KalturaScheduleEventResource) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

func (o KalturaScheduleEventResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.EventId != nil {
		toSerialize["eventId"] = o.EventId
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.ResourceId != nil {
		toSerialize["resourceId"] = o.ResourceId
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaScheduleEventResource struct {
	value *KalturaScheduleEventResource
	isSet bool
}

func (v NullableKalturaScheduleEventResource) Get() *KalturaScheduleEventResource {
	return v.value
}

func (v *NullableKalturaScheduleEventResource) Set(val *KalturaScheduleEventResource) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaScheduleEventResource) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaScheduleEventResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaScheduleEventResource(val *KalturaScheduleEventResource) *NullableKalturaScheduleEventResource {
	return &NullableKalturaScheduleEventResource{value: val, isSet: true}
}

func (v NullableKalturaScheduleEventResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaScheduleEventResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


