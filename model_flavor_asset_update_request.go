/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FlavorAssetUpdateRequest struct for FlavorAssetUpdateRequest
type FlavorAssetUpdateRequest struct {
	FlavorAsset KalturaFlavorAsset `json:"flavorAsset"`
	Id string `json:"id"`
}

// NewFlavorAssetUpdateRequest instantiates a new FlavorAssetUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlavorAssetUpdateRequest(flavorAsset KalturaFlavorAsset, id string) *FlavorAssetUpdateRequest {
	this := FlavorAssetUpdateRequest{}
	this.FlavorAsset = flavorAsset
	this.Id = id
	return &this
}

// NewFlavorAssetUpdateRequestWithDefaults instantiates a new FlavorAssetUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlavorAssetUpdateRequestWithDefaults() *FlavorAssetUpdateRequest {
	this := FlavorAssetUpdateRequest{}
	return &this
}

// GetFlavorAsset returns the FlavorAsset field value
func (o *FlavorAssetUpdateRequest) GetFlavorAsset() KalturaFlavorAsset {
	if o == nil {
		var ret KalturaFlavorAsset
		return ret
	}

	return o.FlavorAsset
}

// GetFlavorAssetOk returns a tuple with the FlavorAsset field value
// and a boolean to check if the value has been set.
func (o *FlavorAssetUpdateRequest) GetFlavorAssetOk() (*KalturaFlavorAsset, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlavorAsset, true
}

// SetFlavorAsset sets field value
func (o *FlavorAssetUpdateRequest) SetFlavorAsset(v KalturaFlavorAsset) {
	o.FlavorAsset = v
}

// GetId returns the Id field value
func (o *FlavorAssetUpdateRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FlavorAssetUpdateRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FlavorAssetUpdateRequest) SetId(v string) {
	o.Id = v
}

func (o FlavorAssetUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["flavorAsset"] = o.FlavorAsset
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableFlavorAssetUpdateRequest struct {
	value *FlavorAssetUpdateRequest
	isSet bool
}

func (v NullableFlavorAssetUpdateRequest) Get() *FlavorAssetUpdateRequest {
	return v.value
}

func (v *NullableFlavorAssetUpdateRequest) Set(val *FlavorAssetUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFlavorAssetUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFlavorAssetUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlavorAssetUpdateRequest(val *FlavorAssetUpdateRequest) *NullableFlavorAssetUpdateRequest {
	return &NullableFlavorAssetUpdateRequest{value: val, isSet: true}
}

func (v NullableFlavorAssetUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlavorAssetUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


