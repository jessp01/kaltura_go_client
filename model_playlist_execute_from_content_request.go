/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PlaylistExecuteFromContentRequest struct for PlaylistExecuteFromContentRequest
type PlaylistExecuteFromContentRequest struct {
	Detailed *string `json:"detailed,omitempty"`
	Pager *KalturaFilterPager `json:"pager,omitempty"`
	PlaylistContent string `json:"playlistContent"`
	PlaylistType int32 `json:"playlistType"`
}

// NewPlaylistExecuteFromContentRequest instantiates a new PlaylistExecuteFromContentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaylistExecuteFromContentRequest(playlistContent string, playlistType int32) *PlaylistExecuteFromContentRequest {
	this := PlaylistExecuteFromContentRequest{}
	this.PlaylistContent = playlistContent
	this.PlaylistType = playlistType
	return &this
}

// NewPlaylistExecuteFromContentRequestWithDefaults instantiates a new PlaylistExecuteFromContentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaylistExecuteFromContentRequestWithDefaults() *PlaylistExecuteFromContentRequest {
	this := PlaylistExecuteFromContentRequest{}
	return &this
}

// GetDetailed returns the Detailed field value if set, zero value otherwise.
func (o *PlaylistExecuteFromContentRequest) GetDetailed() string {
	if o == nil || o.Detailed == nil {
		var ret string
		return ret
	}
	return *o.Detailed
}

// GetDetailedOk returns a tuple with the Detailed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaylistExecuteFromContentRequest) GetDetailedOk() (*string, bool) {
	if o == nil || o.Detailed == nil {
		return nil, false
	}
	return o.Detailed, true
}

// HasDetailed returns a boolean if a field has been set.
func (o *PlaylistExecuteFromContentRequest) HasDetailed() bool {
	if o != nil && o.Detailed != nil {
		return true
	}

	return false
}

// SetDetailed gets a reference to the given string and assigns it to the Detailed field.
func (o *PlaylistExecuteFromContentRequest) SetDetailed(v string) {
	o.Detailed = &v
}

// GetPager returns the Pager field value if set, zero value otherwise.
func (o *PlaylistExecuteFromContentRequest) GetPager() KalturaFilterPager {
	if o == nil || o.Pager == nil {
		var ret KalturaFilterPager
		return ret
	}
	return *o.Pager
}

// GetPagerOk returns a tuple with the Pager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaylistExecuteFromContentRequest) GetPagerOk() (*KalturaFilterPager, bool) {
	if o == nil || o.Pager == nil {
		return nil, false
	}
	return o.Pager, true
}

// HasPager returns a boolean if a field has been set.
func (o *PlaylistExecuteFromContentRequest) HasPager() bool {
	if o != nil && o.Pager != nil {
		return true
	}

	return false
}

// SetPager gets a reference to the given KalturaFilterPager and assigns it to the Pager field.
func (o *PlaylistExecuteFromContentRequest) SetPager(v KalturaFilterPager) {
	o.Pager = &v
}

// GetPlaylistContent returns the PlaylistContent field value
func (o *PlaylistExecuteFromContentRequest) GetPlaylistContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlaylistContent
}

// GetPlaylistContentOk returns a tuple with the PlaylistContent field value
// and a boolean to check if the value has been set.
func (o *PlaylistExecuteFromContentRequest) GetPlaylistContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlaylistContent, true
}

// SetPlaylistContent sets field value
func (o *PlaylistExecuteFromContentRequest) SetPlaylistContent(v string) {
	o.PlaylistContent = v
}

// GetPlaylistType returns the PlaylistType field value
func (o *PlaylistExecuteFromContentRequest) GetPlaylistType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PlaylistType
}

// GetPlaylistTypeOk returns a tuple with the PlaylistType field value
// and a boolean to check if the value has been set.
func (o *PlaylistExecuteFromContentRequest) GetPlaylistTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlaylistType, true
}

// SetPlaylistType sets field value
func (o *PlaylistExecuteFromContentRequest) SetPlaylistType(v int32) {
	o.PlaylistType = v
}

func (o PlaylistExecuteFromContentRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Detailed != nil {
		toSerialize["detailed"] = o.Detailed
	}
	if o.Pager != nil {
		toSerialize["pager"] = o.Pager
	}
	if true {
		toSerialize["playlistContent"] = o.PlaylistContent
	}
	if true {
		toSerialize["playlistType"] = o.PlaylistType
	}
	return json.Marshal(toSerialize)
}

type NullablePlaylistExecuteFromContentRequest struct {
	value *PlaylistExecuteFromContentRequest
	isSet bool
}

func (v NullablePlaylistExecuteFromContentRequest) Get() *PlaylistExecuteFromContentRequest {
	return v.value
}

func (v *NullablePlaylistExecuteFromContentRequest) Set(val *PlaylistExecuteFromContentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaylistExecuteFromContentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaylistExecuteFromContentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaylistExecuteFromContentRequest(val *PlaylistExecuteFromContentRequest) *NullablePlaylistExecuteFromContentRequest {
	return &NullablePlaylistExecuteFromContentRequest{value: val, isSet: true}
}

func (v NullablePlaylistExecuteFromContentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaylistExecuteFromContentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


