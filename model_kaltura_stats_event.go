/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaStatsEvent Will hold data from the Kaltura UI components to be passed on to the reports and analytics system
type KalturaStatsEvent struct {
	// kaltura application name
	ApplicationId *string `json:"applicationId,omitempty"`
	ClientVer *string `json:"clientVer,omitempty"`
	ContextId *int32 `json:"contextId,omitempty"`
	// the id of the GUI control - will be used in the future to better understand what the user clicked
	ControlId *string `json:"controlId,omitempty"`
	// the timestamp along the video when the event happend
	CurrentPoint *int32 `json:"currentPoint,omitempty"`
	// the duration of the video in milliseconds - will make it much faster than quering the db for each entry
	Duration *int32 `json:"duration,omitempty"`
	EntryId *string `json:"entryId,omitempty"`
	// the client's timestamp of this event
	EventTimestamp *float32 `json:"eventTimestamp,omitempty"`
	// Enum Type: `KalturaStatsEventType`
	EventType *int32 `json:"eventType,omitempty"`
	// Enum Type: `KalturaStatsFeatureType`
	FeatureType *int32 `json:"featureType,omitempty"`
	// will indicate if the event is thrown for the first video in the session
	IsFirstInSession *bool `json:"isFirstInSession,omitempty"`
	// timestamp of the new point on the timeline of the video after the user seeks
	NewPoint *int32 `json:"newPoint,omitempty"`
	PartnerId *int32 `json:"partnerId,omitempty"`
	// the time in milliseconds the event took
	ProcessDuration *int32 `json:"processDuration,omitempty"`
	// the referrer of the client
	Referrer *string `json:"referrer,omitempty"`
	// true if the user ever used seek in this session
	Seek *bool `json:"seek,omitempty"`
	// a unique string generated by the client that will represent the client-side session: the primary component will pass it on to other components that sprout from it
	SessionId *string `json:"sessionId,omitempty"`
	UiconfId *int32 `json:"uiconfId,omitempty"`
	// the UV cookie - creates in the operational system and should be passed on ofr every event
	UniqueViewer *string `json:"uniqueViewer,omitempty"`
	// the partner's user id
	UserId *string `json:"userId,omitempty"`
	// `readOnly`  will be retrieved from the request of the user
	UserIp *string `json:"userIp,omitempty"`
	WidgetId *string `json:"widgetId,omitempty"`
}

// NewKalturaStatsEvent instantiates a new KalturaStatsEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaStatsEvent() *KalturaStatsEvent {
	this := KalturaStatsEvent{}
	return &this
}

// NewKalturaStatsEventWithDefaults instantiates a new KalturaStatsEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaStatsEventWithDefaults() *KalturaStatsEvent {
	this := KalturaStatsEvent{}
	return &this
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetApplicationId() string {
	if o == nil || o.ApplicationId == nil {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetApplicationIdOk() (*string, bool) {
	if o == nil || o.ApplicationId == nil {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasApplicationId() bool {
	if o != nil && o.ApplicationId != nil {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *KalturaStatsEvent) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetClientVer returns the ClientVer field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetClientVer() string {
	if o == nil || o.ClientVer == nil {
		var ret string
		return ret
	}
	return *o.ClientVer
}

// GetClientVerOk returns a tuple with the ClientVer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetClientVerOk() (*string, bool) {
	if o == nil || o.ClientVer == nil {
		return nil, false
	}
	return o.ClientVer, true
}

// HasClientVer returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasClientVer() bool {
	if o != nil && o.ClientVer != nil {
		return true
	}

	return false
}

// SetClientVer gets a reference to the given string and assigns it to the ClientVer field.
func (o *KalturaStatsEvent) SetClientVer(v string) {
	o.ClientVer = &v
}

// GetContextId returns the ContextId field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetContextId() int32 {
	if o == nil || o.ContextId == nil {
		var ret int32
		return ret
	}
	return *o.ContextId
}

// GetContextIdOk returns a tuple with the ContextId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetContextIdOk() (*int32, bool) {
	if o == nil || o.ContextId == nil {
		return nil, false
	}
	return o.ContextId, true
}

// HasContextId returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasContextId() bool {
	if o != nil && o.ContextId != nil {
		return true
	}

	return false
}

// SetContextId gets a reference to the given int32 and assigns it to the ContextId field.
func (o *KalturaStatsEvent) SetContextId(v int32) {
	o.ContextId = &v
}

// GetControlId returns the ControlId field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetControlId() string {
	if o == nil || o.ControlId == nil {
		var ret string
		return ret
	}
	return *o.ControlId
}

// GetControlIdOk returns a tuple with the ControlId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetControlIdOk() (*string, bool) {
	if o == nil || o.ControlId == nil {
		return nil, false
	}
	return o.ControlId, true
}

// HasControlId returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasControlId() bool {
	if o != nil && o.ControlId != nil {
		return true
	}

	return false
}

// SetControlId gets a reference to the given string and assigns it to the ControlId field.
func (o *KalturaStatsEvent) SetControlId(v string) {
	o.ControlId = &v
}

// GetCurrentPoint returns the CurrentPoint field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetCurrentPoint() int32 {
	if o == nil || o.CurrentPoint == nil {
		var ret int32
		return ret
	}
	return *o.CurrentPoint
}

// GetCurrentPointOk returns a tuple with the CurrentPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetCurrentPointOk() (*int32, bool) {
	if o == nil || o.CurrentPoint == nil {
		return nil, false
	}
	return o.CurrentPoint, true
}

// HasCurrentPoint returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasCurrentPoint() bool {
	if o != nil && o.CurrentPoint != nil {
		return true
	}

	return false
}

// SetCurrentPoint gets a reference to the given int32 and assigns it to the CurrentPoint field.
func (o *KalturaStatsEvent) SetCurrentPoint(v int32) {
	o.CurrentPoint = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetDuration() int32 {
	if o == nil || o.Duration == nil {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetDurationOk() (*int32, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *KalturaStatsEvent) SetDuration(v int32) {
	o.Duration = &v
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetEntryId() string {
	if o == nil || o.EntryId == nil {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetEntryIdOk() (*string, bool) {
	if o == nil || o.EntryId == nil {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasEntryId() bool {
	if o != nil && o.EntryId != nil {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *KalturaStatsEvent) SetEntryId(v string) {
	o.EntryId = &v
}

// GetEventTimestamp returns the EventTimestamp field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetEventTimestamp() float32 {
	if o == nil || o.EventTimestamp == nil {
		var ret float32
		return ret
	}
	return *o.EventTimestamp
}

// GetEventTimestampOk returns a tuple with the EventTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetEventTimestampOk() (*float32, bool) {
	if o == nil || o.EventTimestamp == nil {
		return nil, false
	}
	return o.EventTimestamp, true
}

// HasEventTimestamp returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasEventTimestamp() bool {
	if o != nil && o.EventTimestamp != nil {
		return true
	}

	return false
}

// SetEventTimestamp gets a reference to the given float32 and assigns it to the EventTimestamp field.
func (o *KalturaStatsEvent) SetEventTimestamp(v float32) {
	o.EventTimestamp = &v
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetEventType() int32 {
	if o == nil || o.EventType == nil {
		var ret int32
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetEventTypeOk() (*int32, bool) {
	if o == nil || o.EventType == nil {
		return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasEventType() bool {
	if o != nil && o.EventType != nil {
		return true
	}

	return false
}

// SetEventType gets a reference to the given int32 and assigns it to the EventType field.
func (o *KalturaStatsEvent) SetEventType(v int32) {
	o.EventType = &v
}

// GetFeatureType returns the FeatureType field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetFeatureType() int32 {
	if o == nil || o.FeatureType == nil {
		var ret int32
		return ret
	}
	return *o.FeatureType
}

// GetFeatureTypeOk returns a tuple with the FeatureType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetFeatureTypeOk() (*int32, bool) {
	if o == nil || o.FeatureType == nil {
		return nil, false
	}
	return o.FeatureType, true
}

// HasFeatureType returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasFeatureType() bool {
	if o != nil && o.FeatureType != nil {
		return true
	}

	return false
}

// SetFeatureType gets a reference to the given int32 and assigns it to the FeatureType field.
func (o *KalturaStatsEvent) SetFeatureType(v int32) {
	o.FeatureType = &v
}

// GetIsFirstInSession returns the IsFirstInSession field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetIsFirstInSession() bool {
	if o == nil || o.IsFirstInSession == nil {
		var ret bool
		return ret
	}
	return *o.IsFirstInSession
}

// GetIsFirstInSessionOk returns a tuple with the IsFirstInSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetIsFirstInSessionOk() (*bool, bool) {
	if o == nil || o.IsFirstInSession == nil {
		return nil, false
	}
	return o.IsFirstInSession, true
}

// HasIsFirstInSession returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasIsFirstInSession() bool {
	if o != nil && o.IsFirstInSession != nil {
		return true
	}

	return false
}

// SetIsFirstInSession gets a reference to the given bool and assigns it to the IsFirstInSession field.
func (o *KalturaStatsEvent) SetIsFirstInSession(v bool) {
	o.IsFirstInSession = &v
}

// GetNewPoint returns the NewPoint field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetNewPoint() int32 {
	if o == nil || o.NewPoint == nil {
		var ret int32
		return ret
	}
	return *o.NewPoint
}

// GetNewPointOk returns a tuple with the NewPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetNewPointOk() (*int32, bool) {
	if o == nil || o.NewPoint == nil {
		return nil, false
	}
	return o.NewPoint, true
}

// HasNewPoint returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasNewPoint() bool {
	if o != nil && o.NewPoint != nil {
		return true
	}

	return false
}

// SetNewPoint gets a reference to the given int32 and assigns it to the NewPoint field.
func (o *KalturaStatsEvent) SetNewPoint(v int32) {
	o.NewPoint = &v
}

// GetPartnerId returns the PartnerId field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetPartnerId() int32 {
	if o == nil || o.PartnerId == nil {
		var ret int32
		return ret
	}
	return *o.PartnerId
}

// GetPartnerIdOk returns a tuple with the PartnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetPartnerIdOk() (*int32, bool) {
	if o == nil || o.PartnerId == nil {
		return nil, false
	}
	return o.PartnerId, true
}

// HasPartnerId returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasPartnerId() bool {
	if o != nil && o.PartnerId != nil {
		return true
	}

	return false
}

// SetPartnerId gets a reference to the given int32 and assigns it to the PartnerId field.
func (o *KalturaStatsEvent) SetPartnerId(v int32) {
	o.PartnerId = &v
}

// GetProcessDuration returns the ProcessDuration field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetProcessDuration() int32 {
	if o == nil || o.ProcessDuration == nil {
		var ret int32
		return ret
	}
	return *o.ProcessDuration
}

// GetProcessDurationOk returns a tuple with the ProcessDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetProcessDurationOk() (*int32, bool) {
	if o == nil || o.ProcessDuration == nil {
		return nil, false
	}
	return o.ProcessDuration, true
}

// HasProcessDuration returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasProcessDuration() bool {
	if o != nil && o.ProcessDuration != nil {
		return true
	}

	return false
}

// SetProcessDuration gets a reference to the given int32 and assigns it to the ProcessDuration field.
func (o *KalturaStatsEvent) SetProcessDuration(v int32) {
	o.ProcessDuration = &v
}

// GetReferrer returns the Referrer field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetReferrer() string {
	if o == nil || o.Referrer == nil {
		var ret string
		return ret
	}
	return *o.Referrer
}

// GetReferrerOk returns a tuple with the Referrer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetReferrerOk() (*string, bool) {
	if o == nil || o.Referrer == nil {
		return nil, false
	}
	return o.Referrer, true
}

// HasReferrer returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasReferrer() bool {
	if o != nil && o.Referrer != nil {
		return true
	}

	return false
}

// SetReferrer gets a reference to the given string and assigns it to the Referrer field.
func (o *KalturaStatsEvent) SetReferrer(v string) {
	o.Referrer = &v
}

// GetSeek returns the Seek field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetSeek() bool {
	if o == nil || o.Seek == nil {
		var ret bool
		return ret
	}
	return *o.Seek
}

// GetSeekOk returns a tuple with the Seek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetSeekOk() (*bool, bool) {
	if o == nil || o.Seek == nil {
		return nil, false
	}
	return o.Seek, true
}

// HasSeek returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasSeek() bool {
	if o != nil && o.Seek != nil {
		return true
	}

	return false
}

// SetSeek gets a reference to the given bool and assigns it to the Seek field.
func (o *KalturaStatsEvent) SetSeek(v bool) {
	o.Seek = &v
}

// GetSessionId returns the SessionId field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetSessionId() string {
	if o == nil || o.SessionId == nil {
		var ret string
		return ret
	}
	return *o.SessionId
}

// GetSessionIdOk returns a tuple with the SessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetSessionIdOk() (*string, bool) {
	if o == nil || o.SessionId == nil {
		return nil, false
	}
	return o.SessionId, true
}

// HasSessionId returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasSessionId() bool {
	if o != nil && o.SessionId != nil {
		return true
	}

	return false
}

// SetSessionId gets a reference to the given string and assigns it to the SessionId field.
func (o *KalturaStatsEvent) SetSessionId(v string) {
	o.SessionId = &v
}

// GetUiconfId returns the UiconfId field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetUiconfId() int32 {
	if o == nil || o.UiconfId == nil {
		var ret int32
		return ret
	}
	return *o.UiconfId
}

// GetUiconfIdOk returns a tuple with the UiconfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetUiconfIdOk() (*int32, bool) {
	if o == nil || o.UiconfId == nil {
		return nil, false
	}
	return o.UiconfId, true
}

// HasUiconfId returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasUiconfId() bool {
	if o != nil && o.UiconfId != nil {
		return true
	}

	return false
}

// SetUiconfId gets a reference to the given int32 and assigns it to the UiconfId field.
func (o *KalturaStatsEvent) SetUiconfId(v int32) {
	o.UiconfId = &v
}

// GetUniqueViewer returns the UniqueViewer field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetUniqueViewer() string {
	if o == nil || o.UniqueViewer == nil {
		var ret string
		return ret
	}
	return *o.UniqueViewer
}

// GetUniqueViewerOk returns a tuple with the UniqueViewer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetUniqueViewerOk() (*string, bool) {
	if o == nil || o.UniqueViewer == nil {
		return nil, false
	}
	return o.UniqueViewer, true
}

// HasUniqueViewer returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasUniqueViewer() bool {
	if o != nil && o.UniqueViewer != nil {
		return true
	}

	return false
}

// SetUniqueViewer gets a reference to the given string and assigns it to the UniqueViewer field.
func (o *KalturaStatsEvent) SetUniqueViewer(v string) {
	o.UniqueViewer = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *KalturaStatsEvent) SetUserId(v string) {
	o.UserId = &v
}

// GetUserIp returns the UserIp field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetUserIp() string {
	if o == nil || o.UserIp == nil {
		var ret string
		return ret
	}
	return *o.UserIp
}

// GetUserIpOk returns a tuple with the UserIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetUserIpOk() (*string, bool) {
	if o == nil || o.UserIp == nil {
		return nil, false
	}
	return o.UserIp, true
}

// HasUserIp returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasUserIp() bool {
	if o != nil && o.UserIp != nil {
		return true
	}

	return false
}

// SetUserIp gets a reference to the given string and assigns it to the UserIp field.
func (o *KalturaStatsEvent) SetUserIp(v string) {
	o.UserIp = &v
}

// GetWidgetId returns the WidgetId field value if set, zero value otherwise.
func (o *KalturaStatsEvent) GetWidgetId() string {
	if o == nil || o.WidgetId == nil {
		var ret string
		return ret
	}
	return *o.WidgetId
}

// GetWidgetIdOk returns a tuple with the WidgetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaStatsEvent) GetWidgetIdOk() (*string, bool) {
	if o == nil || o.WidgetId == nil {
		return nil, false
	}
	return o.WidgetId, true
}

// HasWidgetId returns a boolean if a field has been set.
func (o *KalturaStatsEvent) HasWidgetId() bool {
	if o != nil && o.WidgetId != nil {
		return true
	}

	return false
}

// SetWidgetId gets a reference to the given string and assigns it to the WidgetId field.
func (o *KalturaStatsEvent) SetWidgetId(v string) {
	o.WidgetId = &v
}

func (o KalturaStatsEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApplicationId != nil {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if o.ClientVer != nil {
		toSerialize["clientVer"] = o.ClientVer
	}
	if o.ContextId != nil {
		toSerialize["contextId"] = o.ContextId
	}
	if o.ControlId != nil {
		toSerialize["controlId"] = o.ControlId
	}
	if o.CurrentPoint != nil {
		toSerialize["currentPoint"] = o.CurrentPoint
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.EntryId != nil {
		toSerialize["entryId"] = o.EntryId
	}
	if o.EventTimestamp != nil {
		toSerialize["eventTimestamp"] = o.EventTimestamp
	}
	if o.EventType != nil {
		toSerialize["eventType"] = o.EventType
	}
	if o.FeatureType != nil {
		toSerialize["featureType"] = o.FeatureType
	}
	if o.IsFirstInSession != nil {
		toSerialize["isFirstInSession"] = o.IsFirstInSession
	}
	if o.NewPoint != nil {
		toSerialize["newPoint"] = o.NewPoint
	}
	if o.PartnerId != nil {
		toSerialize["partnerId"] = o.PartnerId
	}
	if o.ProcessDuration != nil {
		toSerialize["processDuration"] = o.ProcessDuration
	}
	if o.Referrer != nil {
		toSerialize["referrer"] = o.Referrer
	}
	if o.Seek != nil {
		toSerialize["seek"] = o.Seek
	}
	if o.SessionId != nil {
		toSerialize["sessionId"] = o.SessionId
	}
	if o.UiconfId != nil {
		toSerialize["uiconfId"] = o.UiconfId
	}
	if o.UniqueViewer != nil {
		toSerialize["uniqueViewer"] = o.UniqueViewer
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.UserIp != nil {
		toSerialize["userIp"] = o.UserIp
	}
	if o.WidgetId != nil {
		toSerialize["widgetId"] = o.WidgetId
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaStatsEvent struct {
	value *KalturaStatsEvent
	isSet bool
}

func (v NullableKalturaStatsEvent) Get() *KalturaStatsEvent {
	return v.value
}

func (v *NullableKalturaStatsEvent) Set(val *KalturaStatsEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaStatsEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaStatsEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaStatsEvent(val *KalturaStatsEvent) *NullableKalturaStatsEvent {
	return &NullableKalturaStatsEvent{value: val, isSet: true}
}

func (v NullableKalturaStatsEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaStatsEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


