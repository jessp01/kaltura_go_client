/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaUser struct for KalturaUser
type KalturaUser struct {
	KalturaBaseUser
}

// NewKalturaUser instantiates a new KalturaUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaUser() *KalturaUser {
	this := KalturaUser{}
	return &this
}

// NewKalturaUserWithDefaults instantiates a new KalturaUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaUserWithDefaults() *KalturaUser {
	this := KalturaUser{}
	return &this
}

func (o KalturaUser) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBaseUser, errKalturaBaseUser := json.Marshal(o.KalturaBaseUser)
	if errKalturaBaseUser != nil {
		return []byte{}, errKalturaBaseUser
	}
	errKalturaBaseUser = json.Unmarshal([]byte(serializedKalturaBaseUser), &toSerialize)
	if errKalturaBaseUser != nil {
		return []byte{}, errKalturaBaseUser
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaUser struct {
	value *KalturaUser
	isSet bool
}

func (v NullableKalturaUser) Get() *KalturaUser {
	return v.value
}

func (v *NullableKalturaUser) Set(val *KalturaUser) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaUser) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaUser(val *KalturaUser) *NullableKalturaUser {
	return &NullableKalturaUser{value: val, isSet: true}
}

func (v NullableKalturaUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


