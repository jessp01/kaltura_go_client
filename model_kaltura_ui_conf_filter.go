/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaUiConfFilter struct for KalturaUiConfFilter
type KalturaUiConfFilter struct {
	KalturaUiConfBaseFilter
}

// NewKalturaUiConfFilter instantiates a new KalturaUiConfFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaUiConfFilter() *KalturaUiConfFilter {
	this := KalturaUiConfFilter{}
	return &this
}

// NewKalturaUiConfFilterWithDefaults instantiates a new KalturaUiConfFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaUiConfFilterWithDefaults() *KalturaUiConfFilter {
	this := KalturaUiConfFilter{}
	return &this
}

func (o KalturaUiConfFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaUiConfBaseFilter, errKalturaUiConfBaseFilter := json.Marshal(o.KalturaUiConfBaseFilter)
	if errKalturaUiConfBaseFilter != nil {
		return []byte{}, errKalturaUiConfBaseFilter
	}
	errKalturaUiConfBaseFilter = json.Unmarshal([]byte(serializedKalturaUiConfBaseFilter), &toSerialize)
	if errKalturaUiConfBaseFilter != nil {
		return []byte{}, errKalturaUiConfBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaUiConfFilter struct {
	value *KalturaUiConfFilter
	isSet bool
}

func (v NullableKalturaUiConfFilter) Get() *KalturaUiConfFilter {
	return v.value
}

func (v *NullableKalturaUiConfFilter) Set(val *KalturaUiConfFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaUiConfFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaUiConfFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaUiConfFilter(val *KalturaUiConfFilter) *NullableKalturaUiConfFilter {
	return &NullableKalturaUiConfFilter{value: val, isSet: true}
}

func (v NullableKalturaUiConfFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaUiConfFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


