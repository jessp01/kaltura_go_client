/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaUrlRecognizerKaltura struct for KalturaUrlRecognizerKaltura
type KalturaUrlRecognizerKaltura struct {
	KalturaUrlRecognizer
}

// NewKalturaUrlRecognizerKaltura instantiates a new KalturaUrlRecognizerKaltura object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaUrlRecognizerKaltura() *KalturaUrlRecognizerKaltura {
	this := KalturaUrlRecognizerKaltura{}
	return &this
}

// NewKalturaUrlRecognizerKalturaWithDefaults instantiates a new KalturaUrlRecognizerKaltura object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaUrlRecognizerKalturaWithDefaults() *KalturaUrlRecognizerKaltura {
	this := KalturaUrlRecognizerKaltura{}
	return &this
}

func (o KalturaUrlRecognizerKaltura) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaUrlRecognizer, errKalturaUrlRecognizer := json.Marshal(o.KalturaUrlRecognizer)
	if errKalturaUrlRecognizer != nil {
		return []byte{}, errKalturaUrlRecognizer
	}
	errKalturaUrlRecognizer = json.Unmarshal([]byte(serializedKalturaUrlRecognizer), &toSerialize)
	if errKalturaUrlRecognizer != nil {
		return []byte{}, errKalturaUrlRecognizer
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaUrlRecognizerKaltura struct {
	value *KalturaUrlRecognizerKaltura
	isSet bool
}

func (v NullableKalturaUrlRecognizerKaltura) Get() *KalturaUrlRecognizerKaltura {
	return v.value
}

func (v *NullableKalturaUrlRecognizerKaltura) Set(val *KalturaUrlRecognizerKaltura) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaUrlRecognizerKaltura) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaUrlRecognizerKaltura) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaUrlRecognizerKaltura(val *KalturaUrlRecognizerKaltura) *NullableKalturaUrlRecognizerKaltura {
	return &NullableKalturaUrlRecognizerKaltura{value: val, isSet: true}
}

func (v NullableKalturaUrlRecognizerKaltura) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaUrlRecognizerKaltura) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


