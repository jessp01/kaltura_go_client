/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UploadTokenDeleteRequest struct for UploadTokenDeleteRequest
type UploadTokenDeleteRequest struct {
	UploadTokenId string `json:"uploadTokenId"`
}

// NewUploadTokenDeleteRequest instantiates a new UploadTokenDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUploadTokenDeleteRequest(uploadTokenId string) *UploadTokenDeleteRequest {
	this := UploadTokenDeleteRequest{}
	this.UploadTokenId = uploadTokenId
	return &this
}

// NewUploadTokenDeleteRequestWithDefaults instantiates a new UploadTokenDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUploadTokenDeleteRequestWithDefaults() *UploadTokenDeleteRequest {
	this := UploadTokenDeleteRequest{}
	return &this
}

// GetUploadTokenId returns the UploadTokenId field value
func (o *UploadTokenDeleteRequest) GetUploadTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UploadTokenId
}

// GetUploadTokenIdOk returns a tuple with the UploadTokenId field value
// and a boolean to check if the value has been set.
func (o *UploadTokenDeleteRequest) GetUploadTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadTokenId, true
}

// SetUploadTokenId sets field value
func (o *UploadTokenDeleteRequest) SetUploadTokenId(v string) {
	o.UploadTokenId = v
}

func (o UploadTokenDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uploadTokenId"] = o.UploadTokenId
	}
	return json.Marshal(toSerialize)
}

type NullableUploadTokenDeleteRequest struct {
	value *UploadTokenDeleteRequest
	isSet bool
}

func (v NullableUploadTokenDeleteRequest) Get() *UploadTokenDeleteRequest {
	return v.value
}

func (v *NullableUploadTokenDeleteRequest) Set(val *UploadTokenDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUploadTokenDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUploadTokenDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUploadTokenDeleteRequest(val *UploadTokenDeleteRequest) *NullableUploadTokenDeleteRequest {
	return &NullableUploadTokenDeleteRequest{value: val, isSet: true}
}

func (v NullableUploadTokenDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUploadTokenDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


