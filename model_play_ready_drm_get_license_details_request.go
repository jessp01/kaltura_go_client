/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PlayReadyDrmGetLicenseDetailsRequest struct for PlayReadyDrmGetLicenseDetailsRequest
type PlayReadyDrmGetLicenseDetailsRequest struct {
	DeviceId string `json:"deviceId"`
	DeviceType int32 `json:"deviceType"`
	EntryId *string `json:"entryId,omitempty"`
	KeyId string `json:"keyId"`
	Referrer *string `json:"referrer,omitempty"`
}

// NewPlayReadyDrmGetLicenseDetailsRequest instantiates a new PlayReadyDrmGetLicenseDetailsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlayReadyDrmGetLicenseDetailsRequest(deviceId string, deviceType int32, keyId string) *PlayReadyDrmGetLicenseDetailsRequest {
	this := PlayReadyDrmGetLicenseDetailsRequest{}
	this.DeviceId = deviceId
	this.DeviceType = deviceType
	this.KeyId = keyId
	return &this
}

// NewPlayReadyDrmGetLicenseDetailsRequestWithDefaults instantiates a new PlayReadyDrmGetLicenseDetailsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlayReadyDrmGetLicenseDetailsRequestWithDefaults() *PlayReadyDrmGetLicenseDetailsRequest {
	this := PlayReadyDrmGetLicenseDetailsRequest{}
	return &this
}

// GetDeviceId returns the DeviceId field value
func (o *PlayReadyDrmGetLicenseDetailsRequest) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *PlayReadyDrmGetLicenseDetailsRequest) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *PlayReadyDrmGetLicenseDetailsRequest) SetDeviceId(v string) {
	o.DeviceId = v
}

// GetDeviceType returns the DeviceType field value
func (o *PlayReadyDrmGetLicenseDetailsRequest) GetDeviceType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DeviceType
}

// GetDeviceTypeOk returns a tuple with the DeviceType field value
// and a boolean to check if the value has been set.
func (o *PlayReadyDrmGetLicenseDetailsRequest) GetDeviceTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceType, true
}

// SetDeviceType sets field value
func (o *PlayReadyDrmGetLicenseDetailsRequest) SetDeviceType(v int32) {
	o.DeviceType = v
}

// GetEntryId returns the EntryId field value if set, zero value otherwise.
func (o *PlayReadyDrmGetLicenseDetailsRequest) GetEntryId() string {
	if o == nil || o.EntryId == nil {
		var ret string
		return ret
	}
	return *o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayReadyDrmGetLicenseDetailsRequest) GetEntryIdOk() (*string, bool) {
	if o == nil || o.EntryId == nil {
		return nil, false
	}
	return o.EntryId, true
}

// HasEntryId returns a boolean if a field has been set.
func (o *PlayReadyDrmGetLicenseDetailsRequest) HasEntryId() bool {
	if o != nil && o.EntryId != nil {
		return true
	}

	return false
}

// SetEntryId gets a reference to the given string and assigns it to the EntryId field.
func (o *PlayReadyDrmGetLicenseDetailsRequest) SetEntryId(v string) {
	o.EntryId = &v
}

// GetKeyId returns the KeyId field value
func (o *PlayReadyDrmGetLicenseDetailsRequest) GetKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value
// and a boolean to check if the value has been set.
func (o *PlayReadyDrmGetLicenseDetailsRequest) GetKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyId, true
}

// SetKeyId sets field value
func (o *PlayReadyDrmGetLicenseDetailsRequest) SetKeyId(v string) {
	o.KeyId = v
}

// GetReferrer returns the Referrer field value if set, zero value otherwise.
func (o *PlayReadyDrmGetLicenseDetailsRequest) GetReferrer() string {
	if o == nil || o.Referrer == nil {
		var ret string
		return ret
	}
	return *o.Referrer
}

// GetReferrerOk returns a tuple with the Referrer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlayReadyDrmGetLicenseDetailsRequest) GetReferrerOk() (*string, bool) {
	if o == nil || o.Referrer == nil {
		return nil, false
	}
	return o.Referrer, true
}

// HasReferrer returns a boolean if a field has been set.
func (o *PlayReadyDrmGetLicenseDetailsRequest) HasReferrer() bool {
	if o != nil && o.Referrer != nil {
		return true
	}

	return false
}

// SetReferrer gets a reference to the given string and assigns it to the Referrer field.
func (o *PlayReadyDrmGetLicenseDetailsRequest) SetReferrer(v string) {
	o.Referrer = &v
}

func (o PlayReadyDrmGetLicenseDetailsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["deviceId"] = o.DeviceId
	}
	if true {
		toSerialize["deviceType"] = o.DeviceType
	}
	if o.EntryId != nil {
		toSerialize["entryId"] = o.EntryId
	}
	if true {
		toSerialize["keyId"] = o.KeyId
	}
	if o.Referrer != nil {
		toSerialize["referrer"] = o.Referrer
	}
	return json.Marshal(toSerialize)
}

type NullablePlayReadyDrmGetLicenseDetailsRequest struct {
	value *PlayReadyDrmGetLicenseDetailsRequest
	isSet bool
}

func (v NullablePlayReadyDrmGetLicenseDetailsRequest) Get() *PlayReadyDrmGetLicenseDetailsRequest {
	return v.value
}

func (v *NullablePlayReadyDrmGetLicenseDetailsRequest) Set(val *PlayReadyDrmGetLicenseDetailsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlayReadyDrmGetLicenseDetailsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlayReadyDrmGetLicenseDetailsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlayReadyDrmGetLicenseDetailsRequest(val *PlayReadyDrmGetLicenseDetailsRequest) *NullablePlayReadyDrmGetLicenseDetailsRequest {
	return &NullablePlayReadyDrmGetLicenseDetailsRequest{value: val, isSet: true}
}

func (v NullablePlayReadyDrmGetLicenseDetailsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlayReadyDrmGetLicenseDetailsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


