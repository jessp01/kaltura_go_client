/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaAccessControlFilter struct for KalturaAccessControlFilter
type KalturaAccessControlFilter struct {
	KalturaAccessControlBaseFilter
}

// NewKalturaAccessControlFilter instantiates a new KalturaAccessControlFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaAccessControlFilter() *KalturaAccessControlFilter {
	this := KalturaAccessControlFilter{}
	return &this
}

// NewKalturaAccessControlFilterWithDefaults instantiates a new KalturaAccessControlFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaAccessControlFilterWithDefaults() *KalturaAccessControlFilter {
	this := KalturaAccessControlFilter{}
	return &this
}

func (o KalturaAccessControlFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaAccessControlBaseFilter, errKalturaAccessControlBaseFilter := json.Marshal(o.KalturaAccessControlBaseFilter)
	if errKalturaAccessControlBaseFilter != nil {
		return []byte{}, errKalturaAccessControlBaseFilter
	}
	errKalturaAccessControlBaseFilter = json.Unmarshal([]byte(serializedKalturaAccessControlBaseFilter), &toSerialize)
	if errKalturaAccessControlBaseFilter != nil {
		return []byte{}, errKalturaAccessControlBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaAccessControlFilter struct {
	value *KalturaAccessControlFilter
	isSet bool
}

func (v NullableKalturaAccessControlFilter) Get() *KalturaAccessControlFilter {
	return v.value
}

func (v *NullableKalturaAccessControlFilter) Set(val *KalturaAccessControlFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaAccessControlFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaAccessControlFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaAccessControlFilter(val *KalturaAccessControlFilter) *NullableKalturaAccessControlFilter {
	return &NullableKalturaAccessControlFilter{value: val, isSet: true}
}

func (v NullableKalturaAccessControlFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaAccessControlFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


