/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaEntryScheduleEventBaseFilter `abstract`
type KalturaEntryScheduleEventBaseFilter struct {
	KalturaScheduleEventFilter
}

// NewKalturaEntryScheduleEventBaseFilter instantiates a new KalturaEntryScheduleEventBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaEntryScheduleEventBaseFilter() *KalturaEntryScheduleEventBaseFilter {
	this := KalturaEntryScheduleEventBaseFilter{}
	return &this
}

// NewKalturaEntryScheduleEventBaseFilterWithDefaults instantiates a new KalturaEntryScheduleEventBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaEntryScheduleEventBaseFilterWithDefaults() *KalturaEntryScheduleEventBaseFilter {
	this := KalturaEntryScheduleEventBaseFilter{}
	return &this
}

func (o KalturaEntryScheduleEventBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaScheduleEventFilter, errKalturaScheduleEventFilter := json.Marshal(o.KalturaScheduleEventFilter)
	if errKalturaScheduleEventFilter != nil {
		return []byte{}, errKalturaScheduleEventFilter
	}
	errKalturaScheduleEventFilter = json.Unmarshal([]byte(serializedKalturaScheduleEventFilter), &toSerialize)
	if errKalturaScheduleEventFilter != nil {
		return []byte{}, errKalturaScheduleEventFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaEntryScheduleEventBaseFilter struct {
	value *KalturaEntryScheduleEventBaseFilter
	isSet bool
}

func (v NullableKalturaEntryScheduleEventBaseFilter) Get() *KalturaEntryScheduleEventBaseFilter {
	return v.value
}

func (v *NullableKalturaEntryScheduleEventBaseFilter) Set(val *KalturaEntryScheduleEventBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaEntryScheduleEventBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaEntryScheduleEventBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaEntryScheduleEventBaseFilter(val *KalturaEntryScheduleEventBaseFilter) *NullableKalturaEntryScheduleEventBaseFilter {
	return &NullableKalturaEntryScheduleEventBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaEntryScheduleEventBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaEntryScheduleEventBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


