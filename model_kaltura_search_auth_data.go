/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSearchAuthData struct for KalturaSearchAuthData
type KalturaSearchAuthData struct {
	// The authentication data that further should be used for search
	AuthData *string `json:"authData,omitempty"`
	// Login URL when user need to sign-in and authorize the search
	LoginUrl *string `json:"loginUrl,omitempty"`
	// Information when there was an error
	Message *string `json:"message,omitempty"`
}

// NewKalturaSearchAuthData instantiates a new KalturaSearchAuthData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSearchAuthData() *KalturaSearchAuthData {
	this := KalturaSearchAuthData{}
	return &this
}

// NewKalturaSearchAuthDataWithDefaults instantiates a new KalturaSearchAuthData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSearchAuthDataWithDefaults() *KalturaSearchAuthData {
	this := KalturaSearchAuthData{}
	return &this
}

// GetAuthData returns the AuthData field value if set, zero value otherwise.
func (o *KalturaSearchAuthData) GetAuthData() string {
	if o == nil || o.AuthData == nil {
		var ret string
		return ret
	}
	return *o.AuthData
}

// GetAuthDataOk returns a tuple with the AuthData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSearchAuthData) GetAuthDataOk() (*string, bool) {
	if o == nil || o.AuthData == nil {
		return nil, false
	}
	return o.AuthData, true
}

// HasAuthData returns a boolean if a field has been set.
func (o *KalturaSearchAuthData) HasAuthData() bool {
	if o != nil && o.AuthData != nil {
		return true
	}

	return false
}

// SetAuthData gets a reference to the given string and assigns it to the AuthData field.
func (o *KalturaSearchAuthData) SetAuthData(v string) {
	o.AuthData = &v
}

// GetLoginUrl returns the LoginUrl field value if set, zero value otherwise.
func (o *KalturaSearchAuthData) GetLoginUrl() string {
	if o == nil || o.LoginUrl == nil {
		var ret string
		return ret
	}
	return *o.LoginUrl
}

// GetLoginUrlOk returns a tuple with the LoginUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSearchAuthData) GetLoginUrlOk() (*string, bool) {
	if o == nil || o.LoginUrl == nil {
		return nil, false
	}
	return o.LoginUrl, true
}

// HasLoginUrl returns a boolean if a field has been set.
func (o *KalturaSearchAuthData) HasLoginUrl() bool {
	if o != nil && o.LoginUrl != nil {
		return true
	}

	return false
}

// SetLoginUrl gets a reference to the given string and assigns it to the LoginUrl field.
func (o *KalturaSearchAuthData) SetLoginUrl(v string) {
	o.LoginUrl = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *KalturaSearchAuthData) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSearchAuthData) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *KalturaSearchAuthData) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *KalturaSearchAuthData) SetMessage(v string) {
	o.Message = &v
}

func (o KalturaSearchAuthData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthData != nil {
		toSerialize["authData"] = o.AuthData
	}
	if o.LoginUrl != nil {
		toSerialize["loginUrl"] = o.LoginUrl
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSearchAuthData struct {
	value *KalturaSearchAuthData
	isSet bool
}

func (v NullableKalturaSearchAuthData) Get() *KalturaSearchAuthData {
	return v.value
}

func (v *NullableKalturaSearchAuthData) Set(val *KalturaSearchAuthData) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSearchAuthData) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSearchAuthData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSearchAuthData(val *KalturaSearchAuthData) *NullableKalturaSearchAuthData {
	return &NullableKalturaSearchAuthData{value: val, isSet: true}
}

func (v NullableKalturaSearchAuthData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSearchAuthData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


