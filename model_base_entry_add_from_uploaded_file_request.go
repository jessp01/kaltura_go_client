/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BaseEntryAddFromUploadedFileRequest struct for BaseEntryAddFromUploadedFileRequest
type BaseEntryAddFromUploadedFileRequest struct {
	Entry KalturaBaseEntry `json:"entry"`
	Type *string `json:"type,omitempty"`
	UploadTokenId string `json:"uploadTokenId"`
}

// NewBaseEntryAddFromUploadedFileRequest instantiates a new BaseEntryAddFromUploadedFileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseEntryAddFromUploadedFileRequest(entry KalturaBaseEntry, uploadTokenId string) *BaseEntryAddFromUploadedFileRequest {
	this := BaseEntryAddFromUploadedFileRequest{}
	this.Entry = entry
	this.UploadTokenId = uploadTokenId
	return &this
}

// NewBaseEntryAddFromUploadedFileRequestWithDefaults instantiates a new BaseEntryAddFromUploadedFileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseEntryAddFromUploadedFileRequestWithDefaults() *BaseEntryAddFromUploadedFileRequest {
	this := BaseEntryAddFromUploadedFileRequest{}
	return &this
}

// GetEntry returns the Entry field value
func (o *BaseEntryAddFromUploadedFileRequest) GetEntry() KalturaBaseEntry {
	if o == nil {
		var ret KalturaBaseEntry
		return ret
	}

	return o.Entry
}

// GetEntryOk returns a tuple with the Entry field value
// and a boolean to check if the value has been set.
func (o *BaseEntryAddFromUploadedFileRequest) GetEntryOk() (*KalturaBaseEntry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entry, true
}

// SetEntry sets field value
func (o *BaseEntryAddFromUploadedFileRequest) SetEntry(v KalturaBaseEntry) {
	o.Entry = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BaseEntryAddFromUploadedFileRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEntryAddFromUploadedFileRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BaseEntryAddFromUploadedFileRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BaseEntryAddFromUploadedFileRequest) SetType(v string) {
	o.Type = &v
}

// GetUploadTokenId returns the UploadTokenId field value
func (o *BaseEntryAddFromUploadedFileRequest) GetUploadTokenId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UploadTokenId
}

// GetUploadTokenIdOk returns a tuple with the UploadTokenId field value
// and a boolean to check if the value has been set.
func (o *BaseEntryAddFromUploadedFileRequest) GetUploadTokenIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadTokenId, true
}

// SetUploadTokenId sets field value
func (o *BaseEntryAddFromUploadedFileRequest) SetUploadTokenId(v string) {
	o.UploadTokenId = v
}

func (o BaseEntryAddFromUploadedFileRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entry"] = o.Entry
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["uploadTokenId"] = o.UploadTokenId
	}
	return json.Marshal(toSerialize)
}

type NullableBaseEntryAddFromUploadedFileRequest struct {
	value *BaseEntryAddFromUploadedFileRequest
	isSet bool
}

func (v NullableBaseEntryAddFromUploadedFileRequest) Get() *BaseEntryAddFromUploadedFileRequest {
	return v.value
}

func (v *NullableBaseEntryAddFromUploadedFileRequest) Set(val *BaseEntryAddFromUploadedFileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseEntryAddFromUploadedFileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseEntryAddFromUploadedFileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseEntryAddFromUploadedFileRequest(val *BaseEntryAddFromUploadedFileRequest) *NullableBaseEntryAddFromUploadedFileRequest {
	return &NullableBaseEntryAddFromUploadedFileRequest{value: val, isSet: true}
}

func (v NullableBaseEntryAddFromUploadedFileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseEntryAddFromUploadedFileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


