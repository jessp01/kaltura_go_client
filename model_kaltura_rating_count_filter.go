/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaRatingCountFilter struct for KalturaRatingCountFilter
type KalturaRatingCountFilter struct {
	KalturaRatingCountBaseFilter
}

// NewKalturaRatingCountFilter instantiates a new KalturaRatingCountFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaRatingCountFilter() *KalturaRatingCountFilter {
	this := KalturaRatingCountFilter{}
	return &this
}

// NewKalturaRatingCountFilterWithDefaults instantiates a new KalturaRatingCountFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaRatingCountFilterWithDefaults() *KalturaRatingCountFilter {
	this := KalturaRatingCountFilter{}
	return &this
}

func (o KalturaRatingCountFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaRatingCountBaseFilter, errKalturaRatingCountBaseFilter := json.Marshal(o.KalturaRatingCountBaseFilter)
	if errKalturaRatingCountBaseFilter != nil {
		return []byte{}, errKalturaRatingCountBaseFilter
	}
	errKalturaRatingCountBaseFilter = json.Unmarshal([]byte(serializedKalturaRatingCountBaseFilter), &toSerialize)
	if errKalturaRatingCountBaseFilter != nil {
		return []byte{}, errKalturaRatingCountBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaRatingCountFilter struct {
	value *KalturaRatingCountFilter
	isSet bool
}

func (v NullableKalturaRatingCountFilter) Get() *KalturaRatingCountFilter {
	return v.value
}

func (v *NullableKalturaRatingCountFilter) Set(val *KalturaRatingCountFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaRatingCountFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaRatingCountFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaRatingCountFilter(val *KalturaRatingCountFilter) *NullableKalturaRatingCountFilter {
	return &NullableKalturaRatingCountFilter{value: val, isSet: true}
}

func (v NullableKalturaRatingCountFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaRatingCountFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


