/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaFlavorAsset struct for KalturaFlavorAsset
type KalturaFlavorAsset struct {
	KalturaAsset
}

// NewKalturaFlavorAsset instantiates a new KalturaFlavorAsset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaFlavorAsset() *KalturaFlavorAsset {
	this := KalturaFlavorAsset{}
	return &this
}

// NewKalturaFlavorAssetWithDefaults instantiates a new KalturaFlavorAsset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaFlavorAssetWithDefaults() *KalturaFlavorAsset {
	this := KalturaFlavorAsset{}
	return &this
}

func (o KalturaFlavorAsset) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaAsset, errKalturaAsset := json.Marshal(o.KalturaAsset)
	if errKalturaAsset != nil {
		return []byte{}, errKalturaAsset
	}
	errKalturaAsset = json.Unmarshal([]byte(serializedKalturaAsset), &toSerialize)
	if errKalturaAsset != nil {
		return []byte{}, errKalturaAsset
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaFlavorAsset struct {
	value *KalturaFlavorAsset
	isSet bool
}

func (v NullableKalturaFlavorAsset) Get() *KalturaFlavorAsset {
	return v.value
}

func (v *NullableKalturaFlavorAsset) Set(val *KalturaFlavorAsset) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaFlavorAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaFlavorAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaFlavorAsset(val *KalturaFlavorAsset) *NullableKalturaFlavorAsset {
	return &NullableKalturaFlavorAsset{value: val, isSet: true}
}

func (v NullableKalturaFlavorAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaFlavorAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


