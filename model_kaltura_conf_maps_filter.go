/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaConfMapsFilter struct for KalturaConfMapsFilter
type KalturaConfMapsFilter struct {
	KalturaConfMapsBaseFilter
}

// NewKalturaConfMapsFilter instantiates a new KalturaConfMapsFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaConfMapsFilter() *KalturaConfMapsFilter {
	this := KalturaConfMapsFilter{}
	return &this
}

// NewKalturaConfMapsFilterWithDefaults instantiates a new KalturaConfMapsFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaConfMapsFilterWithDefaults() *KalturaConfMapsFilter {
	this := KalturaConfMapsFilter{}
	return &this
}

func (o KalturaConfMapsFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaConfMapsBaseFilter, errKalturaConfMapsBaseFilter := json.Marshal(o.KalturaConfMapsBaseFilter)
	if errKalturaConfMapsBaseFilter != nil {
		return []byte{}, errKalturaConfMapsBaseFilter
	}
	errKalturaConfMapsBaseFilter = json.Unmarshal([]byte(serializedKalturaConfMapsBaseFilter), &toSerialize)
	if errKalturaConfMapsBaseFilter != nil {
		return []byte{}, errKalturaConfMapsBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaConfMapsFilter struct {
	value *KalturaConfMapsFilter
	isSet bool
}

func (v NullableKalturaConfMapsFilter) Get() *KalturaConfMapsFilter {
	return v.value
}

func (v *NullableKalturaConfMapsFilter) Set(val *KalturaConfMapsFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaConfMapsFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaConfMapsFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaConfMapsFilter(val *KalturaConfMapsFilter) *NullableKalturaConfMapsFilter {
	return &NullableKalturaConfMapsFilter{value: val, isSet: true}
}

func (v NullableKalturaConfMapsFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaConfMapsFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


