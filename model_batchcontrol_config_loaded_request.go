/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BatchcontrolConfigLoadedRequest struct for BatchcontrolConfigLoadedRequest
type BatchcontrolConfigLoadedRequest struct {
	ConfigParam string `json:"configParam"`
	ConfigParamPart *string `json:"configParamPart,omitempty"`
	ConfigValue string `json:"configValue"`
	Scheduler KalturaScheduler `json:"scheduler"`
	WorkerConfigId *int32 `json:"workerConfigId,omitempty"`
	WorkerName *string `json:"workerName,omitempty"`
}

// NewBatchcontrolConfigLoadedRequest instantiates a new BatchcontrolConfigLoadedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchcontrolConfigLoadedRequest(configParam string, configValue string, scheduler KalturaScheduler) *BatchcontrolConfigLoadedRequest {
	this := BatchcontrolConfigLoadedRequest{}
	this.ConfigParam = configParam
	this.ConfigValue = configValue
	this.Scheduler = scheduler
	return &this
}

// NewBatchcontrolConfigLoadedRequestWithDefaults instantiates a new BatchcontrolConfigLoadedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchcontrolConfigLoadedRequestWithDefaults() *BatchcontrolConfigLoadedRequest {
	this := BatchcontrolConfigLoadedRequest{}
	return &this
}

// GetConfigParam returns the ConfigParam field value
func (o *BatchcontrolConfigLoadedRequest) GetConfigParam() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigParam
}

// GetConfigParamOk returns a tuple with the ConfigParam field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolConfigLoadedRequest) GetConfigParamOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfigParam, true
}

// SetConfigParam sets field value
func (o *BatchcontrolConfigLoadedRequest) SetConfigParam(v string) {
	o.ConfigParam = v
}

// GetConfigParamPart returns the ConfigParamPart field value if set, zero value otherwise.
func (o *BatchcontrolConfigLoadedRequest) GetConfigParamPart() string {
	if o == nil || o.ConfigParamPart == nil {
		var ret string
		return ret
	}
	return *o.ConfigParamPart
}

// GetConfigParamPartOk returns a tuple with the ConfigParamPart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchcontrolConfigLoadedRequest) GetConfigParamPartOk() (*string, bool) {
	if o == nil || o.ConfigParamPart == nil {
		return nil, false
	}
	return o.ConfigParamPart, true
}

// HasConfigParamPart returns a boolean if a field has been set.
func (o *BatchcontrolConfigLoadedRequest) HasConfigParamPart() bool {
	if o != nil && o.ConfigParamPart != nil {
		return true
	}

	return false
}

// SetConfigParamPart gets a reference to the given string and assigns it to the ConfigParamPart field.
func (o *BatchcontrolConfigLoadedRequest) SetConfigParamPart(v string) {
	o.ConfigParamPart = &v
}

// GetConfigValue returns the ConfigValue field value
func (o *BatchcontrolConfigLoadedRequest) GetConfigValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigValue
}

// GetConfigValueOk returns a tuple with the ConfigValue field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolConfigLoadedRequest) GetConfigValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfigValue, true
}

// SetConfigValue sets field value
func (o *BatchcontrolConfigLoadedRequest) SetConfigValue(v string) {
	o.ConfigValue = v
}

// GetScheduler returns the Scheduler field value
func (o *BatchcontrolConfigLoadedRequest) GetScheduler() KalturaScheduler {
	if o == nil {
		var ret KalturaScheduler
		return ret
	}

	return o.Scheduler
}

// GetSchedulerOk returns a tuple with the Scheduler field value
// and a boolean to check if the value has been set.
func (o *BatchcontrolConfigLoadedRequest) GetSchedulerOk() (*KalturaScheduler, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scheduler, true
}

// SetScheduler sets field value
func (o *BatchcontrolConfigLoadedRequest) SetScheduler(v KalturaScheduler) {
	o.Scheduler = v
}

// GetWorkerConfigId returns the WorkerConfigId field value if set, zero value otherwise.
func (o *BatchcontrolConfigLoadedRequest) GetWorkerConfigId() int32 {
	if o == nil || o.WorkerConfigId == nil {
		var ret int32
		return ret
	}
	return *o.WorkerConfigId
}

// GetWorkerConfigIdOk returns a tuple with the WorkerConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchcontrolConfigLoadedRequest) GetWorkerConfigIdOk() (*int32, bool) {
	if o == nil || o.WorkerConfigId == nil {
		return nil, false
	}
	return o.WorkerConfigId, true
}

// HasWorkerConfigId returns a boolean if a field has been set.
func (o *BatchcontrolConfigLoadedRequest) HasWorkerConfigId() bool {
	if o != nil && o.WorkerConfigId != nil {
		return true
	}

	return false
}

// SetWorkerConfigId gets a reference to the given int32 and assigns it to the WorkerConfigId field.
func (o *BatchcontrolConfigLoadedRequest) SetWorkerConfigId(v int32) {
	o.WorkerConfigId = &v
}

// GetWorkerName returns the WorkerName field value if set, zero value otherwise.
func (o *BatchcontrolConfigLoadedRequest) GetWorkerName() string {
	if o == nil || o.WorkerName == nil {
		var ret string
		return ret
	}
	return *o.WorkerName
}

// GetWorkerNameOk returns a tuple with the WorkerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchcontrolConfigLoadedRequest) GetWorkerNameOk() (*string, bool) {
	if o == nil || o.WorkerName == nil {
		return nil, false
	}
	return o.WorkerName, true
}

// HasWorkerName returns a boolean if a field has been set.
func (o *BatchcontrolConfigLoadedRequest) HasWorkerName() bool {
	if o != nil && o.WorkerName != nil {
		return true
	}

	return false
}

// SetWorkerName gets a reference to the given string and assigns it to the WorkerName field.
func (o *BatchcontrolConfigLoadedRequest) SetWorkerName(v string) {
	o.WorkerName = &v
}

func (o BatchcontrolConfigLoadedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["configParam"] = o.ConfigParam
	}
	if o.ConfigParamPart != nil {
		toSerialize["configParamPart"] = o.ConfigParamPart
	}
	if true {
		toSerialize["configValue"] = o.ConfigValue
	}
	if true {
		toSerialize["scheduler"] = o.Scheduler
	}
	if o.WorkerConfigId != nil {
		toSerialize["workerConfigId"] = o.WorkerConfigId
	}
	if o.WorkerName != nil {
		toSerialize["workerName"] = o.WorkerName
	}
	return json.Marshal(toSerialize)
}

type NullableBatchcontrolConfigLoadedRequest struct {
	value *BatchcontrolConfigLoadedRequest
	isSet bool
}

func (v NullableBatchcontrolConfigLoadedRequest) Get() *BatchcontrolConfigLoadedRequest {
	return v.value
}

func (v *NullableBatchcontrolConfigLoadedRequest) Set(val *BatchcontrolConfigLoadedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchcontrolConfigLoadedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchcontrolConfigLoadedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchcontrolConfigLoadedRequest(val *BatchcontrolConfigLoadedRequest) *NullableBatchcontrolConfigLoadedRequest {
	return &NullableBatchcontrolConfigLoadedRequest{value: val, isSet: true}
}

func (v NullableBatchcontrolConfigLoadedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchcontrolConfigLoadedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


