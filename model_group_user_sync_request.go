/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GroupUserSyncRequest struct for GroupUserSyncRequest
type GroupUserSyncRequest struct {
	CreateNewGroups *bool `json:"createNewGroups,omitempty"`
	GroupIds *string `json:"groupIds,omitempty"`
	RemoveFromExistingGroups *bool `json:"removeFromExistingGroups,omitempty"`
	UserId string `json:"userId"`
}

// NewGroupUserSyncRequest instantiates a new GroupUserSyncRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupUserSyncRequest(userId string) *GroupUserSyncRequest {
	this := GroupUserSyncRequest{}
	var createNewGroups bool = true
	this.CreateNewGroups = &createNewGroups
	var removeFromExistingGroups bool = true
	this.RemoveFromExistingGroups = &removeFromExistingGroups
	this.UserId = userId
	return &this
}

// NewGroupUserSyncRequestWithDefaults instantiates a new GroupUserSyncRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupUserSyncRequestWithDefaults() *GroupUserSyncRequest {
	this := GroupUserSyncRequest{}
	var createNewGroups bool = true
	this.CreateNewGroups = &createNewGroups
	var removeFromExistingGroups bool = true
	this.RemoveFromExistingGroups = &removeFromExistingGroups
	return &this
}

// GetCreateNewGroups returns the CreateNewGroups field value if set, zero value otherwise.
func (o *GroupUserSyncRequest) GetCreateNewGroups() bool {
	if o == nil || o.CreateNewGroups == nil {
		var ret bool
		return ret
	}
	return *o.CreateNewGroups
}

// GetCreateNewGroupsOk returns a tuple with the CreateNewGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupUserSyncRequest) GetCreateNewGroupsOk() (*bool, bool) {
	if o == nil || o.CreateNewGroups == nil {
		return nil, false
	}
	return o.CreateNewGroups, true
}

// HasCreateNewGroups returns a boolean if a field has been set.
func (o *GroupUserSyncRequest) HasCreateNewGroups() bool {
	if o != nil && o.CreateNewGroups != nil {
		return true
	}

	return false
}

// SetCreateNewGroups gets a reference to the given bool and assigns it to the CreateNewGroups field.
func (o *GroupUserSyncRequest) SetCreateNewGroups(v bool) {
	o.CreateNewGroups = &v
}

// GetGroupIds returns the GroupIds field value if set, zero value otherwise.
func (o *GroupUserSyncRequest) GetGroupIds() string {
	if o == nil || o.GroupIds == nil {
		var ret string
		return ret
	}
	return *o.GroupIds
}

// GetGroupIdsOk returns a tuple with the GroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupUserSyncRequest) GetGroupIdsOk() (*string, bool) {
	if o == nil || o.GroupIds == nil {
		return nil, false
	}
	return o.GroupIds, true
}

// HasGroupIds returns a boolean if a field has been set.
func (o *GroupUserSyncRequest) HasGroupIds() bool {
	if o != nil && o.GroupIds != nil {
		return true
	}

	return false
}

// SetGroupIds gets a reference to the given string and assigns it to the GroupIds field.
func (o *GroupUserSyncRequest) SetGroupIds(v string) {
	o.GroupIds = &v
}

// GetRemoveFromExistingGroups returns the RemoveFromExistingGroups field value if set, zero value otherwise.
func (o *GroupUserSyncRequest) GetRemoveFromExistingGroups() bool {
	if o == nil || o.RemoveFromExistingGroups == nil {
		var ret bool
		return ret
	}
	return *o.RemoveFromExistingGroups
}

// GetRemoveFromExistingGroupsOk returns a tuple with the RemoveFromExistingGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupUserSyncRequest) GetRemoveFromExistingGroupsOk() (*bool, bool) {
	if o == nil || o.RemoveFromExistingGroups == nil {
		return nil, false
	}
	return o.RemoveFromExistingGroups, true
}

// HasRemoveFromExistingGroups returns a boolean if a field has been set.
func (o *GroupUserSyncRequest) HasRemoveFromExistingGroups() bool {
	if o != nil && o.RemoveFromExistingGroups != nil {
		return true
	}

	return false
}

// SetRemoveFromExistingGroups gets a reference to the given bool and assigns it to the RemoveFromExistingGroups field.
func (o *GroupUserSyncRequest) SetRemoveFromExistingGroups(v bool) {
	o.RemoveFromExistingGroups = &v
}

// GetUserId returns the UserId field value
func (o *GroupUserSyncRequest) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *GroupUserSyncRequest) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *GroupUserSyncRequest) SetUserId(v string) {
	o.UserId = v
}

func (o GroupUserSyncRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreateNewGroups != nil {
		toSerialize["createNewGroups"] = o.CreateNewGroups
	}
	if o.GroupIds != nil {
		toSerialize["groupIds"] = o.GroupIds
	}
	if o.RemoveFromExistingGroups != nil {
		toSerialize["removeFromExistingGroups"] = o.RemoveFromExistingGroups
	}
	if true {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableGroupUserSyncRequest struct {
	value *GroupUserSyncRequest
	isSet bool
}

func (v NullableGroupUserSyncRequest) Get() *GroupUserSyncRequest {
	return v.value
}

func (v *NullableGroupUserSyncRequest) Set(val *GroupUserSyncRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupUserSyncRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupUserSyncRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupUserSyncRequest(val *GroupUserSyncRequest) *NullableGroupUserSyncRequest {
	return &NullableGroupUserSyncRequest{value: val, isSet: true}
}

func (v NullableGroupUserSyncRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupUserSyncRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


