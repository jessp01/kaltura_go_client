/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CategoryAddRequest struct for CategoryAddRequest
type CategoryAddRequest struct {
	Category KalturaCategory `json:"category"`
}

// NewCategoryAddRequest instantiates a new CategoryAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryAddRequest(category KalturaCategory) *CategoryAddRequest {
	this := CategoryAddRequest{}
	this.Category = category
	return &this
}

// NewCategoryAddRequestWithDefaults instantiates a new CategoryAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryAddRequestWithDefaults() *CategoryAddRequest {
	this := CategoryAddRequest{}
	return &this
}

// GetCategory returns the Category field value
func (o *CategoryAddRequest) GetCategory() KalturaCategory {
	if o == nil {
		var ret KalturaCategory
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *CategoryAddRequest) GetCategoryOk() (*KalturaCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *CategoryAddRequest) SetCategory(v KalturaCategory) {
	o.Category = v
}

func (o CategoryAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["category"] = o.Category
	}
	return json.Marshal(toSerialize)
}

type NullableCategoryAddRequest struct {
	value *CategoryAddRequest
	isSet bool
}

func (v NullableCategoryAddRequest) Get() *CategoryAddRequest {
	return v.value
}

func (v *NullableCategoryAddRequest) Set(val *CategoryAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryAddRequest(val *CategoryAddRequest) *NullableCategoryAddRequest {
	return &NullableCategoryAddRequest{value: val, isSet: true}
}

func (v NullableCategoryAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


