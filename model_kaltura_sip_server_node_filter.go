/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSipServerNodeFilter struct for KalturaSipServerNodeFilter
type KalturaSipServerNodeFilter struct {
	KalturaSipServerNodeBaseFilter
}

// NewKalturaSipServerNodeFilter instantiates a new KalturaSipServerNodeFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSipServerNodeFilter() *KalturaSipServerNodeFilter {
	this := KalturaSipServerNodeFilter{}
	return &this
}

// NewKalturaSipServerNodeFilterWithDefaults instantiates a new KalturaSipServerNodeFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSipServerNodeFilterWithDefaults() *KalturaSipServerNodeFilter {
	this := KalturaSipServerNodeFilter{}
	return &this
}

func (o KalturaSipServerNodeFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaSipServerNodeBaseFilter, errKalturaSipServerNodeBaseFilter := json.Marshal(o.KalturaSipServerNodeBaseFilter)
	if errKalturaSipServerNodeBaseFilter != nil {
		return []byte{}, errKalturaSipServerNodeBaseFilter
	}
	errKalturaSipServerNodeBaseFilter = json.Unmarshal([]byte(serializedKalturaSipServerNodeBaseFilter), &toSerialize)
	if errKalturaSipServerNodeBaseFilter != nil {
		return []byte{}, errKalturaSipServerNodeBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSipServerNodeFilter struct {
	value *KalturaSipServerNodeFilter
	isSet bool
}

func (v NullableKalturaSipServerNodeFilter) Get() *KalturaSipServerNodeFilter {
	return v.value
}

func (v *NullableKalturaSipServerNodeFilter) Set(val *KalturaSipServerNodeFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSipServerNodeFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSipServerNodeFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSipServerNodeFilter(val *KalturaSipServerNodeFilter) *NullableKalturaSipServerNodeFilter {
	return &NullableKalturaSipServerNodeFilter{value: val, isSet: true}
}

func (v NullableKalturaSipServerNodeFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSipServerNodeFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


