/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FlavorAssetConvertRequest struct for FlavorAssetConvertRequest
type FlavorAssetConvertRequest struct {
	EntryId string `json:"entryId"`
	FlavorParamsId int32 `json:"flavorParamsId"`
	Priority *int32 `json:"priority,omitempty"`
}

// NewFlavorAssetConvertRequest instantiates a new FlavorAssetConvertRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFlavorAssetConvertRequest(entryId string, flavorParamsId int32) *FlavorAssetConvertRequest {
	this := FlavorAssetConvertRequest{}
	this.EntryId = entryId
	this.FlavorParamsId = flavorParamsId
	return &this
}

// NewFlavorAssetConvertRequestWithDefaults instantiates a new FlavorAssetConvertRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFlavorAssetConvertRequestWithDefaults() *FlavorAssetConvertRequest {
	this := FlavorAssetConvertRequest{}
	return &this
}

// GetEntryId returns the EntryId field value
func (o *FlavorAssetConvertRequest) GetEntryId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EntryId
}

// GetEntryIdOk returns a tuple with the EntryId field value
// and a boolean to check if the value has been set.
func (o *FlavorAssetConvertRequest) GetEntryIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EntryId, true
}

// SetEntryId sets field value
func (o *FlavorAssetConvertRequest) SetEntryId(v string) {
	o.EntryId = v
}

// GetFlavorParamsId returns the FlavorParamsId field value
func (o *FlavorAssetConvertRequest) GetFlavorParamsId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FlavorParamsId
}

// GetFlavorParamsIdOk returns a tuple with the FlavorParamsId field value
// and a boolean to check if the value has been set.
func (o *FlavorAssetConvertRequest) GetFlavorParamsIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlavorParamsId, true
}

// SetFlavorParamsId sets field value
func (o *FlavorAssetConvertRequest) SetFlavorParamsId(v int32) {
	o.FlavorParamsId = v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *FlavorAssetConvertRequest) GetPriority() int32 {
	if o == nil || o.Priority == nil {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FlavorAssetConvertRequest) GetPriorityOk() (*int32, bool) {
	if o == nil || o.Priority == nil {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *FlavorAssetConvertRequest) HasPriority() bool {
	if o != nil && o.Priority != nil {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *FlavorAssetConvertRequest) SetPriority(v int32) {
	o.Priority = &v
}

func (o FlavorAssetConvertRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entryId"] = o.EntryId
	}
	if true {
		toSerialize["flavorParamsId"] = o.FlavorParamsId
	}
	if o.Priority != nil {
		toSerialize["priority"] = o.Priority
	}
	return json.Marshal(toSerialize)
}

type NullableFlavorAssetConvertRequest struct {
	value *FlavorAssetConvertRequest
	isSet bool
}

func (v NullableFlavorAssetConvertRequest) Get() *FlavorAssetConvertRequest {
	return v.value
}

func (v *NullableFlavorAssetConvertRequest) Set(val *FlavorAssetConvertRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFlavorAssetConvertRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFlavorAssetConvertRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFlavorAssetConvertRequest(val *FlavorAssetConvertRequest) *NullableFlavorAssetConvertRequest {
	return &NullableFlavorAssetConvertRequest{value: val, isSet: true}
}

func (v NullableFlavorAssetConvertRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFlavorAssetConvertRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


