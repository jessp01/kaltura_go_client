/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CategoryExportToCsvRequest struct for CategoryExportToCsvRequest
type CategoryExportToCsvRequest struct {
	AdditionalFields []KalturaCsvAdditionalFieldInfo `json:"additionalFields,omitempty"`
	Filter *KalturaCategoryFilter `json:"filter,omitempty"`
	MappedFields []KalturaKeyValue `json:"mappedFields,omitempty"`
	MetadataProfileId *int32 `json:"metadataProfileId,omitempty"`
	Options *KalturaExportToCsvOptions `json:"options,omitempty"`
}

// NewCategoryExportToCsvRequest instantiates a new CategoryExportToCsvRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoryExportToCsvRequest() *CategoryExportToCsvRequest {
	this := CategoryExportToCsvRequest{}
	return &this
}

// NewCategoryExportToCsvRequestWithDefaults instantiates a new CategoryExportToCsvRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoryExportToCsvRequestWithDefaults() *CategoryExportToCsvRequest {
	this := CategoryExportToCsvRequest{}
	return &this
}

// GetAdditionalFields returns the AdditionalFields field value if set, zero value otherwise.
func (o *CategoryExportToCsvRequest) GetAdditionalFields() []KalturaCsvAdditionalFieldInfo {
	if o == nil || o.AdditionalFields == nil {
		var ret []KalturaCsvAdditionalFieldInfo
		return ret
	}
	return o.AdditionalFields
}

// GetAdditionalFieldsOk returns a tuple with the AdditionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryExportToCsvRequest) GetAdditionalFieldsOk() ([]KalturaCsvAdditionalFieldInfo, bool) {
	if o == nil || o.AdditionalFields == nil {
		return nil, false
	}
	return o.AdditionalFields, true
}

// HasAdditionalFields returns a boolean if a field has been set.
func (o *CategoryExportToCsvRequest) HasAdditionalFields() bool {
	if o != nil && o.AdditionalFields != nil {
		return true
	}

	return false
}

// SetAdditionalFields gets a reference to the given []KalturaCsvAdditionalFieldInfo and assigns it to the AdditionalFields field.
func (o *CategoryExportToCsvRequest) SetAdditionalFields(v []KalturaCsvAdditionalFieldInfo) {
	o.AdditionalFields = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *CategoryExportToCsvRequest) GetFilter() KalturaCategoryFilter {
	if o == nil || o.Filter == nil {
		var ret KalturaCategoryFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryExportToCsvRequest) GetFilterOk() (*KalturaCategoryFilter, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *CategoryExportToCsvRequest) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given KalturaCategoryFilter and assigns it to the Filter field.
func (o *CategoryExportToCsvRequest) SetFilter(v KalturaCategoryFilter) {
	o.Filter = &v
}

// GetMappedFields returns the MappedFields field value if set, zero value otherwise.
func (o *CategoryExportToCsvRequest) GetMappedFields() []KalturaKeyValue {
	if o == nil || o.MappedFields == nil {
		var ret []KalturaKeyValue
		return ret
	}
	return o.MappedFields
}

// GetMappedFieldsOk returns a tuple with the MappedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryExportToCsvRequest) GetMappedFieldsOk() ([]KalturaKeyValue, bool) {
	if o == nil || o.MappedFields == nil {
		return nil, false
	}
	return o.MappedFields, true
}

// HasMappedFields returns a boolean if a field has been set.
func (o *CategoryExportToCsvRequest) HasMappedFields() bool {
	if o != nil && o.MappedFields != nil {
		return true
	}

	return false
}

// SetMappedFields gets a reference to the given []KalturaKeyValue and assigns it to the MappedFields field.
func (o *CategoryExportToCsvRequest) SetMappedFields(v []KalturaKeyValue) {
	o.MappedFields = v
}

// GetMetadataProfileId returns the MetadataProfileId field value if set, zero value otherwise.
func (o *CategoryExportToCsvRequest) GetMetadataProfileId() int32 {
	if o == nil || o.MetadataProfileId == nil {
		var ret int32
		return ret
	}
	return *o.MetadataProfileId
}

// GetMetadataProfileIdOk returns a tuple with the MetadataProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryExportToCsvRequest) GetMetadataProfileIdOk() (*int32, bool) {
	if o == nil || o.MetadataProfileId == nil {
		return nil, false
	}
	return o.MetadataProfileId, true
}

// HasMetadataProfileId returns a boolean if a field has been set.
func (o *CategoryExportToCsvRequest) HasMetadataProfileId() bool {
	if o != nil && o.MetadataProfileId != nil {
		return true
	}

	return false
}

// SetMetadataProfileId gets a reference to the given int32 and assigns it to the MetadataProfileId field.
func (o *CategoryExportToCsvRequest) SetMetadataProfileId(v int32) {
	o.MetadataProfileId = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *CategoryExportToCsvRequest) GetOptions() KalturaExportToCsvOptions {
	if o == nil || o.Options == nil {
		var ret KalturaExportToCsvOptions
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoryExportToCsvRequest) GetOptionsOk() (*KalturaExportToCsvOptions, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *CategoryExportToCsvRequest) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given KalturaExportToCsvOptions and assigns it to the Options field.
func (o *CategoryExportToCsvRequest) SetOptions(v KalturaExportToCsvOptions) {
	o.Options = &v
}

func (o CategoryExportToCsvRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalFields != nil {
		toSerialize["additionalFields"] = o.AdditionalFields
	}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if o.MappedFields != nil {
		toSerialize["mappedFields"] = o.MappedFields
	}
	if o.MetadataProfileId != nil {
		toSerialize["metadataProfileId"] = o.MetadataProfileId
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	return json.Marshal(toSerialize)
}

type NullableCategoryExportToCsvRequest struct {
	value *CategoryExportToCsvRequest
	isSet bool
}

func (v NullableCategoryExportToCsvRequest) Get() *CategoryExportToCsvRequest {
	return v.value
}

func (v *NullableCategoryExportToCsvRequest) Set(val *CategoryExportToCsvRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoryExportToCsvRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoryExportToCsvRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoryExportToCsvRequest(val *CategoryExportToCsvRequest) *NullableCategoryExportToCsvRequest {
	return &NullableCategoryExportToCsvRequest{value: val, isSet: true}
}

func (v NullableCategoryExportToCsvRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoryExportToCsvRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


