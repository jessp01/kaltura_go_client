/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SearchHistoryDeleteRequest struct for SearchHistoryDeleteRequest
type SearchHistoryDeleteRequest struct {
	SearchTerm string `json:"searchTerm"`
}

// NewSearchHistoryDeleteRequest instantiates a new SearchHistoryDeleteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchHistoryDeleteRequest(searchTerm string) *SearchHistoryDeleteRequest {
	this := SearchHistoryDeleteRequest{}
	this.SearchTerm = searchTerm
	return &this
}

// NewSearchHistoryDeleteRequestWithDefaults instantiates a new SearchHistoryDeleteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchHistoryDeleteRequestWithDefaults() *SearchHistoryDeleteRequest {
	this := SearchHistoryDeleteRequest{}
	return &this
}

// GetSearchTerm returns the SearchTerm field value
func (o *SearchHistoryDeleteRequest) GetSearchTerm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SearchTerm
}

// GetSearchTermOk returns a tuple with the SearchTerm field value
// and a boolean to check if the value has been set.
func (o *SearchHistoryDeleteRequest) GetSearchTermOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SearchTerm, true
}

// SetSearchTerm sets field value
func (o *SearchHistoryDeleteRequest) SetSearchTerm(v string) {
	o.SearchTerm = v
}

func (o SearchHistoryDeleteRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["searchTerm"] = o.SearchTerm
	}
	return json.Marshal(toSerialize)
}

type NullableSearchHistoryDeleteRequest struct {
	value *SearchHistoryDeleteRequest
	isSet bool
}

func (v NullableSearchHistoryDeleteRequest) Get() *SearchHistoryDeleteRequest {
	return v.value
}

func (v *NullableSearchHistoryDeleteRequest) Set(val *SearchHistoryDeleteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchHistoryDeleteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchHistoryDeleteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchHistoryDeleteRequest(val *SearchHistoryDeleteRequest) *NullableSearchHistoryDeleteRequest {
	return &NullableSearchHistoryDeleteRequest{value: val, isSet: true}
}

func (v NullableSearchHistoryDeleteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchHistoryDeleteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


