/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// JobsAbortBulkUploadRequest struct for JobsAbortBulkUploadRequest
type JobsAbortBulkUploadRequest struct {
	JobId int32 `json:"jobId"`
}

// NewJobsAbortBulkUploadRequest instantiates a new JobsAbortBulkUploadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsAbortBulkUploadRequest(jobId int32) *JobsAbortBulkUploadRequest {
	this := JobsAbortBulkUploadRequest{}
	this.JobId = jobId
	return &this
}

// NewJobsAbortBulkUploadRequestWithDefaults instantiates a new JobsAbortBulkUploadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsAbortBulkUploadRequestWithDefaults() *JobsAbortBulkUploadRequest {
	this := JobsAbortBulkUploadRequest{}
	return &this
}

// GetJobId returns the JobId field value
func (o *JobsAbortBulkUploadRequest) GetJobId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *JobsAbortBulkUploadRequest) GetJobIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *JobsAbortBulkUploadRequest) SetJobId(v int32) {
	o.JobId = v
}

func (o JobsAbortBulkUploadRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["jobId"] = o.JobId
	}
	return json.Marshal(toSerialize)
}

type NullableJobsAbortBulkUploadRequest struct {
	value *JobsAbortBulkUploadRequest
	isSet bool
}

func (v NullableJobsAbortBulkUploadRequest) Get() *JobsAbortBulkUploadRequest {
	return v.value
}

func (v *NullableJobsAbortBulkUploadRequest) Set(val *JobsAbortBulkUploadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsAbortBulkUploadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsAbortBulkUploadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsAbortBulkUploadRequest(val *JobsAbortBulkUploadRequest) *NullableJobsAbortBulkUploadRequest {
	return &NullableJobsAbortBulkUploadRequest{value: val, isSet: true}
}

func (v NullableJobsAbortBulkUploadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsAbortBulkUploadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


