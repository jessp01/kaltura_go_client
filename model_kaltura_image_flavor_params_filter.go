/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaImageFlavorParamsFilter struct for KalturaImageFlavorParamsFilter
type KalturaImageFlavorParamsFilter struct {
	KalturaImageFlavorParamsBaseFilter
}

// NewKalturaImageFlavorParamsFilter instantiates a new KalturaImageFlavorParamsFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaImageFlavorParamsFilter() *KalturaImageFlavorParamsFilter {
	this := KalturaImageFlavorParamsFilter{}
	return &this
}

// NewKalturaImageFlavorParamsFilterWithDefaults instantiates a new KalturaImageFlavorParamsFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaImageFlavorParamsFilterWithDefaults() *KalturaImageFlavorParamsFilter {
	this := KalturaImageFlavorParamsFilter{}
	return &this
}

func (o KalturaImageFlavorParamsFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaImageFlavorParamsBaseFilter, errKalturaImageFlavorParamsBaseFilter := json.Marshal(o.KalturaImageFlavorParamsBaseFilter)
	if errKalturaImageFlavorParamsBaseFilter != nil {
		return []byte{}, errKalturaImageFlavorParamsBaseFilter
	}
	errKalturaImageFlavorParamsBaseFilter = json.Unmarshal([]byte(serializedKalturaImageFlavorParamsBaseFilter), &toSerialize)
	if errKalturaImageFlavorParamsBaseFilter != nil {
		return []byte{}, errKalturaImageFlavorParamsBaseFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaImageFlavorParamsFilter struct {
	value *KalturaImageFlavorParamsFilter
	isSet bool
}

func (v NullableKalturaImageFlavorParamsFilter) Get() *KalturaImageFlavorParamsFilter {
	return v.value
}

func (v *NullableKalturaImageFlavorParamsFilter) Set(val *KalturaImageFlavorParamsFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaImageFlavorParamsFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaImageFlavorParamsFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaImageFlavorParamsFilter(val *KalturaImageFlavorParamsFilter) *NullableKalturaImageFlavorParamsFilter {
	return &NullableKalturaImageFlavorParamsFilter{value: val, isSet: true}
}

func (v NullableKalturaImageFlavorParamsFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaImageFlavorParamsFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


