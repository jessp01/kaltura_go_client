/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaWowzaMediaServerNodeBaseFilter `abstract`
type KalturaWowzaMediaServerNodeBaseFilter struct {
	KalturaMediaServerNodeFilter
}

// NewKalturaWowzaMediaServerNodeBaseFilter instantiates a new KalturaWowzaMediaServerNodeBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaWowzaMediaServerNodeBaseFilter() *KalturaWowzaMediaServerNodeBaseFilter {
	this := KalturaWowzaMediaServerNodeBaseFilter{}
	return &this
}

// NewKalturaWowzaMediaServerNodeBaseFilterWithDefaults instantiates a new KalturaWowzaMediaServerNodeBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaWowzaMediaServerNodeBaseFilterWithDefaults() *KalturaWowzaMediaServerNodeBaseFilter {
	this := KalturaWowzaMediaServerNodeBaseFilter{}
	return &this
}

func (o KalturaWowzaMediaServerNodeBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaMediaServerNodeFilter, errKalturaMediaServerNodeFilter := json.Marshal(o.KalturaMediaServerNodeFilter)
	if errKalturaMediaServerNodeFilter != nil {
		return []byte{}, errKalturaMediaServerNodeFilter
	}
	errKalturaMediaServerNodeFilter = json.Unmarshal([]byte(serializedKalturaMediaServerNodeFilter), &toSerialize)
	if errKalturaMediaServerNodeFilter != nil {
		return []byte{}, errKalturaMediaServerNodeFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaWowzaMediaServerNodeBaseFilter struct {
	value *KalturaWowzaMediaServerNodeBaseFilter
	isSet bool
}

func (v NullableKalturaWowzaMediaServerNodeBaseFilter) Get() *KalturaWowzaMediaServerNodeBaseFilter {
	return v.value
}

func (v *NullableKalturaWowzaMediaServerNodeBaseFilter) Set(val *KalturaWowzaMediaServerNodeBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaWowzaMediaServerNodeBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaWowzaMediaServerNodeBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaWowzaMediaServerNodeBaseFilter(val *KalturaWowzaMediaServerNodeBaseFilter) *NullableKalturaWowzaMediaServerNodeBaseFilter {
	return &NullableKalturaWowzaMediaServerNodeBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaWowzaMediaServerNodeBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaWowzaMediaServerNodeBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


