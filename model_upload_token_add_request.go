/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UploadTokenAddRequest struct for UploadTokenAddRequest
type UploadTokenAddRequest struct {
	UploadToken *KalturaUploadToken `json:"uploadToken,omitempty"`
}

// NewUploadTokenAddRequest instantiates a new UploadTokenAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUploadTokenAddRequest() *UploadTokenAddRequest {
	this := UploadTokenAddRequest{}
	return &this
}

// NewUploadTokenAddRequestWithDefaults instantiates a new UploadTokenAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUploadTokenAddRequestWithDefaults() *UploadTokenAddRequest {
	this := UploadTokenAddRequest{}
	return &this
}

// GetUploadToken returns the UploadToken field value if set, zero value otherwise.
func (o *UploadTokenAddRequest) GetUploadToken() KalturaUploadToken {
	if o == nil || o.UploadToken == nil {
		var ret KalturaUploadToken
		return ret
	}
	return *o.UploadToken
}

// GetUploadTokenOk returns a tuple with the UploadToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UploadTokenAddRequest) GetUploadTokenOk() (*KalturaUploadToken, bool) {
	if o == nil || o.UploadToken == nil {
		return nil, false
	}
	return o.UploadToken, true
}

// HasUploadToken returns a boolean if a field has been set.
func (o *UploadTokenAddRequest) HasUploadToken() bool {
	if o != nil && o.UploadToken != nil {
		return true
	}

	return false
}

// SetUploadToken gets a reference to the given KalturaUploadToken and assigns it to the UploadToken field.
func (o *UploadTokenAddRequest) SetUploadToken(v KalturaUploadToken) {
	o.UploadToken = &v
}

func (o UploadTokenAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UploadToken != nil {
		toSerialize["uploadToken"] = o.UploadToken
	}
	return json.Marshal(toSerialize)
}

type NullableUploadTokenAddRequest struct {
	value *UploadTokenAddRequest
	isSet bool
}

func (v NullableUploadTokenAddRequest) Get() *UploadTokenAddRequest {
	return v.value
}

func (v *NullableUploadTokenAddRequest) Set(val *UploadTokenAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUploadTokenAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUploadTokenAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUploadTokenAddRequest(val *UploadTokenAddRequest) *NullableUploadTokenAddRequest {
	return &NullableUploadTokenAddRequest{value: val, isSet: true}
}

func (v NullableUploadTokenAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUploadTokenAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


