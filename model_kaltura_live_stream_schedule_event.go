/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaLiveStreamScheduleEvent struct for KalturaLiveStreamScheduleEvent
type KalturaLiveStreamScheduleEvent struct {
	KalturaBaseLiveScheduleEvent
}

// NewKalturaLiveStreamScheduleEvent instantiates a new KalturaLiveStreamScheduleEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaLiveStreamScheduleEvent() *KalturaLiveStreamScheduleEvent {
	this := KalturaLiveStreamScheduleEvent{}
	return &this
}

// NewKalturaLiveStreamScheduleEventWithDefaults instantiates a new KalturaLiveStreamScheduleEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaLiveStreamScheduleEventWithDefaults() *KalturaLiveStreamScheduleEvent {
	this := KalturaLiveStreamScheduleEvent{}
	return &this
}

func (o KalturaLiveStreamScheduleEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaBaseLiveScheduleEvent, errKalturaBaseLiveScheduleEvent := json.Marshal(o.KalturaBaseLiveScheduleEvent)
	if errKalturaBaseLiveScheduleEvent != nil {
		return []byte{}, errKalturaBaseLiveScheduleEvent
	}
	errKalturaBaseLiveScheduleEvent = json.Unmarshal([]byte(serializedKalturaBaseLiveScheduleEvent), &toSerialize)
	if errKalturaBaseLiveScheduleEvent != nil {
		return []byte{}, errKalturaBaseLiveScheduleEvent
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaLiveStreamScheduleEvent struct {
	value *KalturaLiveStreamScheduleEvent
	isSet bool
}

func (v NullableKalturaLiveStreamScheduleEvent) Get() *KalturaLiveStreamScheduleEvent {
	return v.value
}

func (v *NullableKalturaLiveStreamScheduleEvent) Set(val *KalturaLiveStreamScheduleEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaLiveStreamScheduleEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaLiveStreamScheduleEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaLiveStreamScheduleEvent(val *KalturaLiveStreamScheduleEvent) *NullableKalturaLiveStreamScheduleEvent {
	return &NullableKalturaLiveStreamScheduleEvent{value: val, isSet: true}
}

func (v NullableKalturaLiveStreamScheduleEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaLiveStreamScheduleEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


