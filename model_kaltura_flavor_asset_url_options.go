/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaFlavorAssetUrlOptions struct for KalturaFlavorAssetUrlOptions
type KalturaFlavorAssetUrlOptions struct {
	// The name of the downloaded file
	FileName *string `json:"fileName,omitempty"`
	Referrer *string `json:"referrer,omitempty"`
}

// NewKalturaFlavorAssetUrlOptions instantiates a new KalturaFlavorAssetUrlOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaFlavorAssetUrlOptions() *KalturaFlavorAssetUrlOptions {
	this := KalturaFlavorAssetUrlOptions{}
	return &this
}

// NewKalturaFlavorAssetUrlOptionsWithDefaults instantiates a new KalturaFlavorAssetUrlOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaFlavorAssetUrlOptionsWithDefaults() *KalturaFlavorAssetUrlOptions {
	this := KalturaFlavorAssetUrlOptions{}
	return &this
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *KalturaFlavorAssetUrlOptions) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFlavorAssetUrlOptions) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *KalturaFlavorAssetUrlOptions) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *KalturaFlavorAssetUrlOptions) SetFileName(v string) {
	o.FileName = &v
}

// GetReferrer returns the Referrer field value if set, zero value otherwise.
func (o *KalturaFlavorAssetUrlOptions) GetReferrer() string {
	if o == nil || o.Referrer == nil {
		var ret string
		return ret
	}
	return *o.Referrer
}

// GetReferrerOk returns a tuple with the Referrer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaFlavorAssetUrlOptions) GetReferrerOk() (*string, bool) {
	if o == nil || o.Referrer == nil {
		return nil, false
	}
	return o.Referrer, true
}

// HasReferrer returns a boolean if a field has been set.
func (o *KalturaFlavorAssetUrlOptions) HasReferrer() bool {
	if o != nil && o.Referrer != nil {
		return true
	}

	return false
}

// SetReferrer gets a reference to the given string and assigns it to the Referrer field.
func (o *KalturaFlavorAssetUrlOptions) SetReferrer(v string) {
	o.Referrer = &v
}

func (o KalturaFlavorAssetUrlOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FileName != nil {
		toSerialize["fileName"] = o.FileName
	}
	if o.Referrer != nil {
		toSerialize["referrer"] = o.Referrer
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaFlavorAssetUrlOptions struct {
	value *KalturaFlavorAssetUrlOptions
	isSet bool
}

func (v NullableKalturaFlavorAssetUrlOptions) Get() *KalturaFlavorAssetUrlOptions {
	return v.value
}

func (v *NullableKalturaFlavorAssetUrlOptions) Set(val *KalturaFlavorAssetUrlOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaFlavorAssetUrlOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaFlavorAssetUrlOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaFlavorAssetUrlOptions(val *KalturaFlavorAssetUrlOptions) *NullableKalturaFlavorAssetUrlOptions {
	return &NullableKalturaFlavorAssetUrlOptions{value: val, isSet: true}
}

func (v NullableKalturaFlavorAssetUrlOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaFlavorAssetUrlOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


