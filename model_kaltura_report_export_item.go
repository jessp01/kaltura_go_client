/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaReportExportItem struct for KalturaReportExportItem
type KalturaReportExportItem struct {
	// Enum Type: `KalturaReportExportItemType`
	Action *int32 `json:"action,omitempty"`
	Filter *KalturaReportInputFilter `json:"filter,omitempty"`
	ObjectIds *string `json:"objectIds,omitempty"`
	Order *string `json:"order,omitempty"`
	ReportTitle *string `json:"reportTitle,omitempty"`
	// Enum Type: `KalturaReportType`
	ReportType *string `json:"reportType,omitempty"`
	ResponseOptions *KalturaReportResponseOptions `json:"responseOptions,omitempty"`
}

// NewKalturaReportExportItem instantiates a new KalturaReportExportItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaReportExportItem() *KalturaReportExportItem {
	this := KalturaReportExportItem{}
	return &this
}

// NewKalturaReportExportItemWithDefaults instantiates a new KalturaReportExportItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaReportExportItemWithDefaults() *KalturaReportExportItem {
	this := KalturaReportExportItem{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *KalturaReportExportItem) GetAction() int32 {
	if o == nil || o.Action == nil {
		var ret int32
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportExportItem) GetActionOk() (*int32, bool) {
	if o == nil || o.Action == nil {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *KalturaReportExportItem) HasAction() bool {
	if o != nil && o.Action != nil {
		return true
	}

	return false
}

// SetAction gets a reference to the given int32 and assigns it to the Action field.
func (o *KalturaReportExportItem) SetAction(v int32) {
	o.Action = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *KalturaReportExportItem) GetFilter() KalturaReportInputFilter {
	if o == nil || o.Filter == nil {
		var ret KalturaReportInputFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportExportItem) GetFilterOk() (*KalturaReportInputFilter, bool) {
	if o == nil || o.Filter == nil {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *KalturaReportExportItem) HasFilter() bool {
	if o != nil && o.Filter != nil {
		return true
	}

	return false
}

// SetFilter gets a reference to the given KalturaReportInputFilter and assigns it to the Filter field.
func (o *KalturaReportExportItem) SetFilter(v KalturaReportInputFilter) {
	o.Filter = &v
}

// GetObjectIds returns the ObjectIds field value if set, zero value otherwise.
func (o *KalturaReportExportItem) GetObjectIds() string {
	if o == nil || o.ObjectIds == nil {
		var ret string
		return ret
	}
	return *o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportExportItem) GetObjectIdsOk() (*string, bool) {
	if o == nil || o.ObjectIds == nil {
		return nil, false
	}
	return o.ObjectIds, true
}

// HasObjectIds returns a boolean if a field has been set.
func (o *KalturaReportExportItem) HasObjectIds() bool {
	if o != nil && o.ObjectIds != nil {
		return true
	}

	return false
}

// SetObjectIds gets a reference to the given string and assigns it to the ObjectIds field.
func (o *KalturaReportExportItem) SetObjectIds(v string) {
	o.ObjectIds = &v
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *KalturaReportExportItem) GetOrder() string {
	if o == nil || o.Order == nil {
		var ret string
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportExportItem) GetOrderOk() (*string, bool) {
	if o == nil || o.Order == nil {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *KalturaReportExportItem) HasOrder() bool {
	if o != nil && o.Order != nil {
		return true
	}

	return false
}

// SetOrder gets a reference to the given string and assigns it to the Order field.
func (o *KalturaReportExportItem) SetOrder(v string) {
	o.Order = &v
}

// GetReportTitle returns the ReportTitle field value if set, zero value otherwise.
func (o *KalturaReportExportItem) GetReportTitle() string {
	if o == nil || o.ReportTitle == nil {
		var ret string
		return ret
	}
	return *o.ReportTitle
}

// GetReportTitleOk returns a tuple with the ReportTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportExportItem) GetReportTitleOk() (*string, bool) {
	if o == nil || o.ReportTitle == nil {
		return nil, false
	}
	return o.ReportTitle, true
}

// HasReportTitle returns a boolean if a field has been set.
func (o *KalturaReportExportItem) HasReportTitle() bool {
	if o != nil && o.ReportTitle != nil {
		return true
	}

	return false
}

// SetReportTitle gets a reference to the given string and assigns it to the ReportTitle field.
func (o *KalturaReportExportItem) SetReportTitle(v string) {
	o.ReportTitle = &v
}

// GetReportType returns the ReportType field value if set, zero value otherwise.
func (o *KalturaReportExportItem) GetReportType() string {
	if o == nil || o.ReportType == nil {
		var ret string
		return ret
	}
	return *o.ReportType
}

// GetReportTypeOk returns a tuple with the ReportType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportExportItem) GetReportTypeOk() (*string, bool) {
	if o == nil || o.ReportType == nil {
		return nil, false
	}
	return o.ReportType, true
}

// HasReportType returns a boolean if a field has been set.
func (o *KalturaReportExportItem) HasReportType() bool {
	if o != nil && o.ReportType != nil {
		return true
	}

	return false
}

// SetReportType gets a reference to the given string and assigns it to the ReportType field.
func (o *KalturaReportExportItem) SetReportType(v string) {
	o.ReportType = &v
}

// GetResponseOptions returns the ResponseOptions field value if set, zero value otherwise.
func (o *KalturaReportExportItem) GetResponseOptions() KalturaReportResponseOptions {
	if o == nil || o.ResponseOptions == nil {
		var ret KalturaReportResponseOptions
		return ret
	}
	return *o.ResponseOptions
}

// GetResponseOptionsOk returns a tuple with the ResponseOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaReportExportItem) GetResponseOptionsOk() (*KalturaReportResponseOptions, bool) {
	if o == nil || o.ResponseOptions == nil {
		return nil, false
	}
	return o.ResponseOptions, true
}

// HasResponseOptions returns a boolean if a field has been set.
func (o *KalturaReportExportItem) HasResponseOptions() bool {
	if o != nil && o.ResponseOptions != nil {
		return true
	}

	return false
}

// SetResponseOptions gets a reference to the given KalturaReportResponseOptions and assigns it to the ResponseOptions field.
func (o *KalturaReportExportItem) SetResponseOptions(v KalturaReportResponseOptions) {
	o.ResponseOptions = &v
}

func (o KalturaReportExportItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Action != nil {
		toSerialize["action"] = o.Action
	}
	if o.Filter != nil {
		toSerialize["filter"] = o.Filter
	}
	if o.ObjectIds != nil {
		toSerialize["objectIds"] = o.ObjectIds
	}
	if o.Order != nil {
		toSerialize["order"] = o.Order
	}
	if o.ReportTitle != nil {
		toSerialize["reportTitle"] = o.ReportTitle
	}
	if o.ReportType != nil {
		toSerialize["reportType"] = o.ReportType
	}
	if o.ResponseOptions != nil {
		toSerialize["responseOptions"] = o.ResponseOptions
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaReportExportItem struct {
	value *KalturaReportExportItem
	isSet bool
}

func (v NullableKalturaReportExportItem) Get() *KalturaReportExportItem {
	return v.value
}

func (v *NullableKalturaReportExportItem) Set(val *KalturaReportExportItem) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaReportExportItem) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaReportExportItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaReportExportItem(val *KalturaReportExportItem) *NullableKalturaReportExportItem {
	return &NullableKalturaReportExportItem{value: val, isSet: true}
}

func (v NullableKalturaReportExportItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaReportExportItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


