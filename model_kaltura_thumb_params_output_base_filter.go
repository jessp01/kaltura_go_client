/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaThumbParamsOutputBaseFilter `abstract`
type KalturaThumbParamsOutputBaseFilter struct {
	KalturaThumbParamsFilter
}

// NewKalturaThumbParamsOutputBaseFilter instantiates a new KalturaThumbParamsOutputBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaThumbParamsOutputBaseFilter() *KalturaThumbParamsOutputBaseFilter {
	this := KalturaThumbParamsOutputBaseFilter{}
	return &this
}

// NewKalturaThumbParamsOutputBaseFilterWithDefaults instantiates a new KalturaThumbParamsOutputBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaThumbParamsOutputBaseFilterWithDefaults() *KalturaThumbParamsOutputBaseFilter {
	this := KalturaThumbParamsOutputBaseFilter{}
	return &this
}

func (o KalturaThumbParamsOutputBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaThumbParamsFilter, errKalturaThumbParamsFilter := json.Marshal(o.KalturaThumbParamsFilter)
	if errKalturaThumbParamsFilter != nil {
		return []byte{}, errKalturaThumbParamsFilter
	}
	errKalturaThumbParamsFilter = json.Unmarshal([]byte(serializedKalturaThumbParamsFilter), &toSerialize)
	if errKalturaThumbParamsFilter != nil {
		return []byte{}, errKalturaThumbParamsFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaThumbParamsOutputBaseFilter struct {
	value *KalturaThumbParamsOutputBaseFilter
	isSet bool
}

func (v NullableKalturaThumbParamsOutputBaseFilter) Get() *KalturaThumbParamsOutputBaseFilter {
	return v.value
}

func (v *NullableKalturaThumbParamsOutputBaseFilter) Set(val *KalturaThumbParamsOutputBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaThumbParamsOutputBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaThumbParamsOutputBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaThumbParamsOutputBaseFilter(val *KalturaThumbParamsOutputBaseFilter) *NullableKalturaThumbParamsOutputBaseFilter {
	return &NullableKalturaThumbParamsOutputBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaThumbParamsOutputBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaThumbParamsOutputBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


