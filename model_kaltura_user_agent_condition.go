/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaUserAgentCondition struct for KalturaUserAgentCondition
type KalturaUserAgentCondition struct {
	KalturaRegexCondition
}

// NewKalturaUserAgentCondition instantiates a new KalturaUserAgentCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaUserAgentCondition() *KalturaUserAgentCondition {
	this := KalturaUserAgentCondition{}
	return &this
}

// NewKalturaUserAgentConditionWithDefaults instantiates a new KalturaUserAgentCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaUserAgentConditionWithDefaults() *KalturaUserAgentCondition {
	this := KalturaUserAgentCondition{}
	return &this
}

func (o KalturaUserAgentCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaRegexCondition, errKalturaRegexCondition := json.Marshal(o.KalturaRegexCondition)
	if errKalturaRegexCondition != nil {
		return []byte{}, errKalturaRegexCondition
	}
	errKalturaRegexCondition = json.Unmarshal([]byte(serializedKalturaRegexCondition), &toSerialize)
	if errKalturaRegexCondition != nil {
		return []byte{}, errKalturaRegexCondition
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaUserAgentCondition struct {
	value *KalturaUserAgentCondition
	isSet bool
}

func (v NullableKalturaUserAgentCondition) Get() *KalturaUserAgentCondition {
	return v.value
}

func (v *NullableKalturaUserAgentCondition) Set(val *KalturaUserAgentCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaUserAgentCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaUserAgentCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaUserAgentCondition(val *KalturaUserAgentCondition) *NullableKalturaUserAgentCondition {
	return &NullableKalturaUserAgentCondition{value: val, isSet: true}
}

func (v NullableKalturaUserAgentCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaUserAgentCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


