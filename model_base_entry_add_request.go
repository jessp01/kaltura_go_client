/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BaseEntryAddRequest struct for BaseEntryAddRequest
type BaseEntryAddRequest struct {
	Entry KalturaBaseEntry `json:"entry"`
	Type *string `json:"type,omitempty"`
}

// NewBaseEntryAddRequest instantiates a new BaseEntryAddRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseEntryAddRequest(entry KalturaBaseEntry) *BaseEntryAddRequest {
	this := BaseEntryAddRequest{}
	this.Entry = entry
	return &this
}

// NewBaseEntryAddRequestWithDefaults instantiates a new BaseEntryAddRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseEntryAddRequestWithDefaults() *BaseEntryAddRequest {
	this := BaseEntryAddRequest{}
	return &this
}

// GetEntry returns the Entry field value
func (o *BaseEntryAddRequest) GetEntry() KalturaBaseEntry {
	if o == nil {
		var ret KalturaBaseEntry
		return ret
	}

	return o.Entry
}

// GetEntryOk returns a tuple with the Entry field value
// and a boolean to check if the value has been set.
func (o *BaseEntryAddRequest) GetEntryOk() (*KalturaBaseEntry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entry, true
}

// SetEntry sets field value
func (o *BaseEntryAddRequest) SetEntry(v KalturaBaseEntry) {
	o.Entry = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BaseEntryAddRequest) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseEntryAddRequest) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BaseEntryAddRequest) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BaseEntryAddRequest) SetType(v string) {
	o.Type = &v
}

func (o BaseEntryAddRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["entry"] = o.Entry
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableBaseEntryAddRequest struct {
	value *BaseEntryAddRequest
	isSet bool
}

func (v NullableBaseEntryAddRequest) Get() *BaseEntryAddRequest {
	return v.value
}

func (v *NullableBaseEntryAddRequest) Set(val *BaseEntryAddRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseEntryAddRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseEntryAddRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseEntryAddRequest(val *BaseEntryAddRequest) *NullableBaseEntryAddRequest {
	return &NullableBaseEntryAddRequest{value: val, isSet: true}
}

func (v NullableBaseEntryAddRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseEntryAddRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


