/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaSchedulerConfig struct for KalturaSchedulerConfig
type KalturaSchedulerConfig struct {
	// Id of the control panel command that created this config item
	CommandId *string `json:"commandId,omitempty"`
	// The status of the control panel command
	CommandStatus *string `json:"commandStatus,omitempty"`
	// Creator name
	CreatedBy *string `json:"createdBy,omitempty"`
	// `readOnly`  The id of the Category
	Id *int32 `json:"id,omitempty"`
	// The configured id of the scheduler
	SchedulerConfiguredId *int32 `json:"schedulerConfiguredId,omitempty"`
	// The id of the scheduler
	SchedulerId *int32 `json:"schedulerId,omitempty"`
	// The name of the scheduler
	SchedulerName *string `json:"schedulerName,omitempty"`
	// Updater name
	UpdatedBy *string `json:"updatedBy,omitempty"`
	// The value of the variable
	Value *string `json:"value,omitempty"`
	// The name of the variable
	Variable *string `json:"variable,omitempty"`
	// The part of the variable
	VariablePart *string `json:"variablePart,omitempty"`
	// The configured id of the job worker
	WorkerConfiguredId *int32 `json:"workerConfiguredId,omitempty"`
	// The id of the job worker
	WorkerId *int32 `json:"workerId,omitempty"`
	// The name of the job worker
	WorkerName *string `json:"workerName,omitempty"`
}

// NewKalturaSchedulerConfig instantiates a new KalturaSchedulerConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaSchedulerConfig() *KalturaSchedulerConfig {
	this := KalturaSchedulerConfig{}
	return &this
}

// NewKalturaSchedulerConfigWithDefaults instantiates a new KalturaSchedulerConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaSchedulerConfigWithDefaults() *KalturaSchedulerConfig {
	this := KalturaSchedulerConfig{}
	return &this
}

// GetCommandId returns the CommandId field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetCommandId() string {
	if o == nil || o.CommandId == nil {
		var ret string
		return ret
	}
	return *o.CommandId
}

// GetCommandIdOk returns a tuple with the CommandId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetCommandIdOk() (*string, bool) {
	if o == nil || o.CommandId == nil {
		return nil, false
	}
	return o.CommandId, true
}

// HasCommandId returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasCommandId() bool {
	if o != nil && o.CommandId != nil {
		return true
	}

	return false
}

// SetCommandId gets a reference to the given string and assigns it to the CommandId field.
func (o *KalturaSchedulerConfig) SetCommandId(v string) {
	o.CommandId = &v
}

// GetCommandStatus returns the CommandStatus field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetCommandStatus() string {
	if o == nil || o.CommandStatus == nil {
		var ret string
		return ret
	}
	return *o.CommandStatus
}

// GetCommandStatusOk returns a tuple with the CommandStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetCommandStatusOk() (*string, bool) {
	if o == nil || o.CommandStatus == nil {
		return nil, false
	}
	return o.CommandStatus, true
}

// HasCommandStatus returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasCommandStatus() bool {
	if o != nil && o.CommandStatus != nil {
		return true
	}

	return false
}

// SetCommandStatus gets a reference to the given string and assigns it to the CommandStatus field.
func (o *KalturaSchedulerConfig) SetCommandStatus(v string) {
	o.CommandStatus = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *KalturaSchedulerConfig) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KalturaSchedulerConfig) SetId(v int32) {
	o.Id = &v
}

// GetSchedulerConfiguredId returns the SchedulerConfiguredId field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetSchedulerConfiguredId() int32 {
	if o == nil || o.SchedulerConfiguredId == nil {
		var ret int32
		return ret
	}
	return *o.SchedulerConfiguredId
}

// GetSchedulerConfiguredIdOk returns a tuple with the SchedulerConfiguredId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetSchedulerConfiguredIdOk() (*int32, bool) {
	if o == nil || o.SchedulerConfiguredId == nil {
		return nil, false
	}
	return o.SchedulerConfiguredId, true
}

// HasSchedulerConfiguredId returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasSchedulerConfiguredId() bool {
	if o != nil && o.SchedulerConfiguredId != nil {
		return true
	}

	return false
}

// SetSchedulerConfiguredId gets a reference to the given int32 and assigns it to the SchedulerConfiguredId field.
func (o *KalturaSchedulerConfig) SetSchedulerConfiguredId(v int32) {
	o.SchedulerConfiguredId = &v
}

// GetSchedulerId returns the SchedulerId field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetSchedulerId() int32 {
	if o == nil || o.SchedulerId == nil {
		var ret int32
		return ret
	}
	return *o.SchedulerId
}

// GetSchedulerIdOk returns a tuple with the SchedulerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetSchedulerIdOk() (*int32, bool) {
	if o == nil || o.SchedulerId == nil {
		return nil, false
	}
	return o.SchedulerId, true
}

// HasSchedulerId returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasSchedulerId() bool {
	if o != nil && o.SchedulerId != nil {
		return true
	}

	return false
}

// SetSchedulerId gets a reference to the given int32 and assigns it to the SchedulerId field.
func (o *KalturaSchedulerConfig) SetSchedulerId(v int32) {
	o.SchedulerId = &v
}

// GetSchedulerName returns the SchedulerName field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetSchedulerName() string {
	if o == nil || o.SchedulerName == nil {
		var ret string
		return ret
	}
	return *o.SchedulerName
}

// GetSchedulerNameOk returns a tuple with the SchedulerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetSchedulerNameOk() (*string, bool) {
	if o == nil || o.SchedulerName == nil {
		return nil, false
	}
	return o.SchedulerName, true
}

// HasSchedulerName returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasSchedulerName() bool {
	if o != nil && o.SchedulerName != nil {
		return true
	}

	return false
}

// SetSchedulerName gets a reference to the given string and assigns it to the SchedulerName field.
func (o *KalturaSchedulerConfig) SetSchedulerName(v string) {
	o.SchedulerName = &v
}

// GetUpdatedBy returns the UpdatedBy field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetUpdatedBy() string {
	if o == nil || o.UpdatedBy == nil {
		var ret string
		return ret
	}
	return *o.UpdatedBy
}

// GetUpdatedByOk returns a tuple with the UpdatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetUpdatedByOk() (*string, bool) {
	if o == nil || o.UpdatedBy == nil {
		return nil, false
	}
	return o.UpdatedBy, true
}

// HasUpdatedBy returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasUpdatedBy() bool {
	if o != nil && o.UpdatedBy != nil {
		return true
	}

	return false
}

// SetUpdatedBy gets a reference to the given string and assigns it to the UpdatedBy field.
func (o *KalturaSchedulerConfig) SetUpdatedBy(v string) {
	o.UpdatedBy = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *KalturaSchedulerConfig) SetValue(v string) {
	o.Value = &v
}

// GetVariable returns the Variable field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetVariable() string {
	if o == nil || o.Variable == nil {
		var ret string
		return ret
	}
	return *o.Variable
}

// GetVariableOk returns a tuple with the Variable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetVariableOk() (*string, bool) {
	if o == nil || o.Variable == nil {
		return nil, false
	}
	return o.Variable, true
}

// HasVariable returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasVariable() bool {
	if o != nil && o.Variable != nil {
		return true
	}

	return false
}

// SetVariable gets a reference to the given string and assigns it to the Variable field.
func (o *KalturaSchedulerConfig) SetVariable(v string) {
	o.Variable = &v
}

// GetVariablePart returns the VariablePart field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetVariablePart() string {
	if o == nil || o.VariablePart == nil {
		var ret string
		return ret
	}
	return *o.VariablePart
}

// GetVariablePartOk returns a tuple with the VariablePart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetVariablePartOk() (*string, bool) {
	if o == nil || o.VariablePart == nil {
		return nil, false
	}
	return o.VariablePart, true
}

// HasVariablePart returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasVariablePart() bool {
	if o != nil && o.VariablePart != nil {
		return true
	}

	return false
}

// SetVariablePart gets a reference to the given string and assigns it to the VariablePart field.
func (o *KalturaSchedulerConfig) SetVariablePart(v string) {
	o.VariablePart = &v
}

// GetWorkerConfiguredId returns the WorkerConfiguredId field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetWorkerConfiguredId() int32 {
	if o == nil || o.WorkerConfiguredId == nil {
		var ret int32
		return ret
	}
	return *o.WorkerConfiguredId
}

// GetWorkerConfiguredIdOk returns a tuple with the WorkerConfiguredId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetWorkerConfiguredIdOk() (*int32, bool) {
	if o == nil || o.WorkerConfiguredId == nil {
		return nil, false
	}
	return o.WorkerConfiguredId, true
}

// HasWorkerConfiguredId returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasWorkerConfiguredId() bool {
	if o != nil && o.WorkerConfiguredId != nil {
		return true
	}

	return false
}

// SetWorkerConfiguredId gets a reference to the given int32 and assigns it to the WorkerConfiguredId field.
func (o *KalturaSchedulerConfig) SetWorkerConfiguredId(v int32) {
	o.WorkerConfiguredId = &v
}

// GetWorkerId returns the WorkerId field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetWorkerId() int32 {
	if o == nil || o.WorkerId == nil {
		var ret int32
		return ret
	}
	return *o.WorkerId
}

// GetWorkerIdOk returns a tuple with the WorkerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetWorkerIdOk() (*int32, bool) {
	if o == nil || o.WorkerId == nil {
		return nil, false
	}
	return o.WorkerId, true
}

// HasWorkerId returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasWorkerId() bool {
	if o != nil && o.WorkerId != nil {
		return true
	}

	return false
}

// SetWorkerId gets a reference to the given int32 and assigns it to the WorkerId field.
func (o *KalturaSchedulerConfig) SetWorkerId(v int32) {
	o.WorkerId = &v
}

// GetWorkerName returns the WorkerName field value if set, zero value otherwise.
func (o *KalturaSchedulerConfig) GetWorkerName() string {
	if o == nil || o.WorkerName == nil {
		var ret string
		return ret
	}
	return *o.WorkerName
}

// GetWorkerNameOk returns a tuple with the WorkerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KalturaSchedulerConfig) GetWorkerNameOk() (*string, bool) {
	if o == nil || o.WorkerName == nil {
		return nil, false
	}
	return o.WorkerName, true
}

// HasWorkerName returns a boolean if a field has been set.
func (o *KalturaSchedulerConfig) HasWorkerName() bool {
	if o != nil && o.WorkerName != nil {
		return true
	}

	return false
}

// SetWorkerName gets a reference to the given string and assigns it to the WorkerName field.
func (o *KalturaSchedulerConfig) SetWorkerName(v string) {
	o.WorkerName = &v
}

func (o KalturaSchedulerConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CommandId != nil {
		toSerialize["commandId"] = o.CommandId
	}
	if o.CommandStatus != nil {
		toSerialize["commandStatus"] = o.CommandStatus
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.SchedulerConfiguredId != nil {
		toSerialize["schedulerConfiguredId"] = o.SchedulerConfiguredId
	}
	if o.SchedulerId != nil {
		toSerialize["schedulerId"] = o.SchedulerId
	}
	if o.SchedulerName != nil {
		toSerialize["schedulerName"] = o.SchedulerName
	}
	if o.UpdatedBy != nil {
		toSerialize["updatedBy"] = o.UpdatedBy
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Variable != nil {
		toSerialize["variable"] = o.Variable
	}
	if o.VariablePart != nil {
		toSerialize["variablePart"] = o.VariablePart
	}
	if o.WorkerConfiguredId != nil {
		toSerialize["workerConfiguredId"] = o.WorkerConfiguredId
	}
	if o.WorkerId != nil {
		toSerialize["workerId"] = o.WorkerId
	}
	if o.WorkerName != nil {
		toSerialize["workerName"] = o.WorkerName
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaSchedulerConfig struct {
	value *KalturaSchedulerConfig
	isSet bool
}

func (v NullableKalturaSchedulerConfig) Get() *KalturaSchedulerConfig {
	return v.value
}

func (v *NullableKalturaSchedulerConfig) Set(val *KalturaSchedulerConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaSchedulerConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaSchedulerConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaSchedulerConfig(val *KalturaSchedulerConfig) *NullableKalturaSchedulerConfig {
	return &NullableKalturaSchedulerConfig{value: val, isSet: true}
}

func (v NullableKalturaSchedulerConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaSchedulerConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


