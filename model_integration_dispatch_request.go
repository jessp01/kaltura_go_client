/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// IntegrationDispatchRequest struct for IntegrationDispatchRequest
type IntegrationDispatchRequest struct {
	Data KalturaIntegrationJobData `json:"data"`
	ObjectId string `json:"objectId"`
	ObjectType string `json:"objectType"`
}

// NewIntegrationDispatchRequest instantiates a new IntegrationDispatchRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntegrationDispatchRequest(data KalturaIntegrationJobData, objectId string, objectType string) *IntegrationDispatchRequest {
	this := IntegrationDispatchRequest{}
	this.Data = data
	this.ObjectId = objectId
	this.ObjectType = objectType
	return &this
}

// NewIntegrationDispatchRequestWithDefaults instantiates a new IntegrationDispatchRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntegrationDispatchRequestWithDefaults() *IntegrationDispatchRequest {
	this := IntegrationDispatchRequest{}
	return &this
}

// GetData returns the Data field value
func (o *IntegrationDispatchRequest) GetData() KalturaIntegrationJobData {
	if o == nil {
		var ret KalturaIntegrationJobData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *IntegrationDispatchRequest) GetDataOk() (*KalturaIntegrationJobData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *IntegrationDispatchRequest) SetData(v KalturaIntegrationJobData) {
	o.Data = v
}

// GetObjectId returns the ObjectId field value
func (o *IntegrationDispatchRequest) GetObjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value
// and a boolean to check if the value has been set.
func (o *IntegrationDispatchRequest) GetObjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectId, true
}

// SetObjectId sets field value
func (o *IntegrationDispatchRequest) SetObjectId(v string) {
	o.ObjectId = v
}

// GetObjectType returns the ObjectType field value
func (o *IntegrationDispatchRequest) GetObjectType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value
// and a boolean to check if the value has been set.
func (o *IntegrationDispatchRequest) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObjectType, true
}

// SetObjectType sets field value
func (o *IntegrationDispatchRequest) SetObjectType(v string) {
	o.ObjectType = v
}

func (o IntegrationDispatchRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["objectId"] = o.ObjectId
	}
	if true {
		toSerialize["objectType"] = o.ObjectType
	}
	return json.Marshal(toSerialize)
}

type NullableIntegrationDispatchRequest struct {
	value *IntegrationDispatchRequest
	isSet bool
}

func (v NullableIntegrationDispatchRequest) Get() *IntegrationDispatchRequest {
	return v.value
}

func (v *NullableIntegrationDispatchRequest) Set(val *IntegrationDispatchRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrationDispatchRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrationDispatchRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrationDispatchRequest(val *IntegrationDispatchRequest) *NullableIntegrationDispatchRequest {
	return &NullableIntegrationDispatchRequest{value: val, isSet: true}
}

func (v NullableIntegrationDispatchRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrationDispatchRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


