/*
Kaltura VPaaS

The Kaltura VPaaS API

API version: 18.12.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KalturaMediaServerNodeBaseFilter `abstract`
type KalturaMediaServerNodeBaseFilter struct {
	KalturaDeliveryServerNodeFilter
}

// NewKalturaMediaServerNodeBaseFilter instantiates a new KalturaMediaServerNodeBaseFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKalturaMediaServerNodeBaseFilter() *KalturaMediaServerNodeBaseFilter {
	this := KalturaMediaServerNodeBaseFilter{}
	return &this
}

// NewKalturaMediaServerNodeBaseFilterWithDefaults instantiates a new KalturaMediaServerNodeBaseFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKalturaMediaServerNodeBaseFilterWithDefaults() *KalturaMediaServerNodeBaseFilter {
	this := KalturaMediaServerNodeBaseFilter{}
	return &this
}

func (o KalturaMediaServerNodeBaseFilter) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedKalturaDeliveryServerNodeFilter, errKalturaDeliveryServerNodeFilter := json.Marshal(o.KalturaDeliveryServerNodeFilter)
	if errKalturaDeliveryServerNodeFilter != nil {
		return []byte{}, errKalturaDeliveryServerNodeFilter
	}
	errKalturaDeliveryServerNodeFilter = json.Unmarshal([]byte(serializedKalturaDeliveryServerNodeFilter), &toSerialize)
	if errKalturaDeliveryServerNodeFilter != nil {
		return []byte{}, errKalturaDeliveryServerNodeFilter
	}
	return json.Marshal(toSerialize)
}

type NullableKalturaMediaServerNodeBaseFilter struct {
	value *KalturaMediaServerNodeBaseFilter
	isSet bool
}

func (v NullableKalturaMediaServerNodeBaseFilter) Get() *KalturaMediaServerNodeBaseFilter {
	return v.value
}

func (v *NullableKalturaMediaServerNodeBaseFilter) Set(val *KalturaMediaServerNodeBaseFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableKalturaMediaServerNodeBaseFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableKalturaMediaServerNodeBaseFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKalturaMediaServerNodeBaseFilter(val *KalturaMediaServerNodeBaseFilter) *NullableKalturaMediaServerNodeBaseFilter {
	return &NullableKalturaMediaServerNodeBaseFilter{value: val, isSet: true}
}

func (v NullableKalturaMediaServerNodeBaseFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKalturaMediaServerNodeBaseFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


